[
    {
        "id": "107c9bc.328b364",
        "type": "tab",
        "label": "START MCS Docker",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dd1202fd.a2e23",
        "type": "tab",
        "label": "Time Setter Docker",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a37cc3392dfe3850",
        "type": "tab",
        "label": "On Start",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3913ac76.e7a7a4",
        "type": "tab",
        "label": "Ground-station Docker",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7c68352c.1b47bc",
        "type": "tab",
        "label": "VTS_Propagator Docker",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6ac37828.4c7288",
        "type": "tab",
        "label": "Antenna Tracker Docker",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a9c7c6499fb06192",
        "type": "tab",
        "label": "Maneuver Manager",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c852882eb324b626",
        "type": "tab",
        "label": "Ergol Calculator - BLUE-RED",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9fc2d0daadf97d1e",
        "type": "tab",
        "label": "Earth_Observation_Manager",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4ddfcb5d4ffd885f",
        "type": "tab",
        "label": "Mean movement",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "66f9d9ba2072108b",
        "type": "tab",
        "label": "Thrust Duration ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "50584aeb17eaebde",
        "type": "tab",
        "label": "Constellation Docker",
        "disabled": false,
        "info": ""
    },
    {
        "id": "62804953b962105f",
        "type": "tab",
        "label": "Audio",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7041cc0d.5676f4",
        "type": "group",
        "z": "107c9bc.328b364",
        "name": "Main Buttons to manage the MCS",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f225da6f.835808",
            "cb0fed7.3a64e1"
        ],
        "x": 98,
        "y": 173,
        "w": 994,
        "h": 534
    },
    {
        "id": "8b9773b.b33289",
        "type": "group",
        "z": "107c9bc.328b364",
        "name": "Logo to display in dashboards",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7526a5fd.25462c",
            "6ad25ff1.2d9c5",
            "1d1c8521.cf142b",
            "37361282.bab14e"
        ],
        "x": 1254,
        "y": 79,
        "w": 372,
        "h": 162
    },
    {
        "id": "1fd96d24.c576c3",
        "type": "group",
        "z": "3913ac76.e7a7a4",
        "name": "Remove a ground station from databases",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "830078cd.5ce018",
            "80466439.be38c8",
            "cc07039e.b636d",
            "95062db2.f9d1d",
            "883d17a2.efed38",
            "4a4284af.a91d7c"
        ],
        "x": 74,
        "y": 359
    },
    {
        "id": "312c8fe7.75cef",
        "type": "group",
        "z": "3913ac76.e7a7a4",
        "name": "When angular database is complete, write a .TXT file for each ground station with angular data",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7f54d608.f66d18",
            "71548a7e.e894d4",
            "725004f9.2e6f1c",
            "550ae2ac.c7d07c",
            "783d60bf.56ed4",
            "fcb2e5a3.0e2f78",
            "fe49e6f5.8df938",
            "a71e2b4c.233488",
            "9a1fe386.f5e59",
            "a4ff9b34.579b18",
            "6eba071.10a38f8",
            "efe2c69b.fd76d8",
            "9c64b4eb.3ee8b8",
            "601c3227.d4d72c",
            "1e6e1bc5.0f5834",
            "520c3859.aa50c8",
            "eb2aa14e.a61f4",
            "b3db7416.4787d8",
            "dcefc108.5f804",
            "e6efdf13.cfcb6",
            "ce1d15e8.6c1078",
            "11567371c0f67cc9"
        ],
        "x": 84,
        "y": 619
    },
    {
        "id": "b6d29b3c.89b878",
        "type": "group",
        "z": "3913ac76.e7a7a4",
        "name": "Fill the Ground Station database",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e57e953b.7cd0a8",
            "edd76d7d.08bdb",
            "507d36b2.5917f8",
            "de5fe0c8.0d6bb",
            "90bc963d.ab5238"
        ],
        "x": 74,
        "y": 159
    },
    {
        "id": "d02d39d9.704b38",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Notification message preparation for Dashboard",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8c66adb9.78a24",
            "ccc1c309.94261",
            "f4e8516e.d638a",
            "97bf463.9b785b8",
            "8be87eed.6b61d",
            "3ebdce04.545c52",
            "82142810.e8ee98",
            "c02b28f9.44f608",
            "f48249b.dec28b8",
            "becd8ee3.9efcd",
            "bd944618.65d4c8"
        ],
        "x": 2604,
        "y": 4479
    },
    {
        "id": "1e404e3b.14ce32",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Store and display current TLE",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b538102e.235bb",
            "eea2e68b.c73728",
            "f9ce7744.af89a8",
            "287ac47f.0441ac"
        ],
        "x": 1474,
        "y": 79
    },
    {
        "id": "c6dcd18b.ea624",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Prepare query for JSatOrb API REST with TLE, ground stations and time data",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a10e1e99.b755e",
            "f48c422f.86566",
            "8f9784ae.86ddc8",
            "b6ca8b9b.ec16d8",
            "86ee657f.dfff28",
            "d25089c5.16ad98",
            "804d4875e2f1648a",
            "64e005a8c862bfaf",
            "8d2d46d99b3c70d1",
            "6f5ae58615d925eb",
            "00e423d5cecf63ac",
            "48fac77f27ebe694",
            "cd235fc9d45bd07e",
            "d220bc3808928eb3",
            "7edb0b79e9981fac",
            "5bfdeb3df1dc8e7e",
            "f2107460f7852ca0",
            "0fe194477cfd115a",
            "bd4011b41b1eed28",
            "8943bd9a10115aea",
            "be24a5a05268a710"
        ],
        "x": 1934,
        "y": 19
    },
    {
        "id": "5293fd84.fa1844",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Query for JSatOrb API REST to update VTS files",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "84fbfb29.95cd58",
            "f724ce42.a2232",
            "58ea7c57.11f754",
            "a5bc4015.3f8fa",
            "3dce35b.ba5adca",
            "105fdd91.9d22d2",
            "e8df78b.012af88",
            "4de09aa7.179f04",
            "26627082a406277b",
            "79a8517a3d50ba46",
            "8d1ea8610afad551",
            "ed91f7078814f403",
            "ed6b13ca02a5a70d",
            "aeaa99f2.5cf4f8"
        ],
        "x": 3214,
        "y": 59
    },
    {
        "id": "4e981e1c.9c0d",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "When TLE update is asked, goes search for time settings",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "848d6f10.6746c",
            "97d64ebb.eedeb"
        ],
        "x": 144,
        "y": 3699
    },
    {
        "id": "571e2c55.406334",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "When TLE update button is pushed, asks for new TLE on Celestrak website",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b4ed5b61.777588",
            "a011d9bd.cb5668",
            "2002146a.dd37ac",
            "8f00d092.2ceaf",
            "52cc4274.d51c7c",
            "a29ee050.688fc",
            "b9a6ef87.24de3",
            "a43c137e.63e62",
            "75ace4d0.f680ac",
            "be5b3468b95dc183",
            "4af158778ce1bf1e"
        ],
        "x": 174,
        "y": 79
    },
    {
        "id": "3ccbb53f.0e92ea",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Messages to the Dashboard",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "68e5ba45.705be4",
            "7e174054.f4b3",
            "126451f0.88e04e",
            "18880b23.8d3665",
            "76a24cf9.258434",
            "a026019c.78bc9",
            "1e4d8792.74f5a8",
            "cedd76e1.9e8238",
            "7b763b58.51ce74",
            "852b55c9920045c0"
        ],
        "x": 1154,
        "y": 4119
    },
    {
        "id": "a70ba86a.746ad8",
        "type": "group",
        "z": "6ac37828.4c7288",
        "name": "Select satellite position inside visibility windows, calculate angular data for each position and fill the angular database ",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "dce3220a.a2827",
            "2e7fb2ab.ff8a5e",
            "5d531160.429e6",
            "30879888.257e48",
            "88e679ca.dca768",
            "72aca196.278cf",
            "8f9bb2ec.12936",
            "5e4f2147.9249e",
            "fce1105a.6ef5",
            "ca00b8d1.93b088",
            "a53ae528.1172e8",
            "6b922809.e4f268",
            "2668a3d2.59aabc",
            "986279ab.994688",
            "2e404121.6748ae",
            "333f1f0b.07ba1",
            "e9076de9.07737",
            "8361c2b3.30592",
            "5cf3906d.cd20b",
            "c781d830.604888",
            "c5dfe4bd.95e2e8",
            "ce326199.0a85b",
            "ca490983.7ec9b8",
            "88e99eb4.37486",
            "a8b66cd3.d5319",
            "f1175ba2.a05c28",
            "4a6b4791859a7ec7",
            "ddff7293e03f0b82"
        ],
        "x": 154,
        "y": 839
    },
    {
        "id": "68821a62.dd81d4",
        "type": "group",
        "z": "6ac37828.4c7288",
        "name": "SkyView dashboard",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a5ef7279.4f0f6",
            "4a7abf0e.e4e85",
            "eac5880a.b59fb8",
            "36c58d2d.bf0f02",
            "95af4893.c89828",
            "362b3f2b.4d2ac",
            "fc51d4bf.af93b8",
            "c33f4812.c84db8",
            "58db54d0.12d46c",
            "c43a64bf.f83098",
            "d2a2dc9c.b4a27",
            "7cb023f0.0c57bc",
            "da44af67.6b24f",
            "a647cc01.bfdfb",
            "5192d05b.d1875",
            "da50ca5b.310b28",
            "429b1393.6ffd6c",
            "386d7942.156c76",
            "b8207185.f42bd",
            "18f17f32.5f7e71",
            "992c5674.60e4f8",
            "c62dbe90.1b804",
            "69383c6d.0abe04",
            "a4da2217.fb14a",
            "e364185d.295dd8",
            "7133e66d.aacb98",
            "18151515.6d2f0b",
            "b8bf83a3.79c91",
            "48c9278751e6dd80",
            "edb348011caef461",
            "7666c04f07bbb05f",
            "b83d4c26dabed0ee",
            "7bdca02863b868fd",
            "9e71a5834972f14f",
            "13ab995fda488768",
            "70f082f113f3cffb",
            "f1d4084e6377b063",
            "6d1ccf9412d0d665",
            "a9e817f573788987",
            "170b38f03bd0fc97",
            "7233d22172de1941",
            "dc4fd25033b5651f"
        ],
        "x": 334,
        "y": 1339
    },
    {
        "id": "ca417f4.d57648",
        "type": "group",
        "z": "6ac37828.4c7288",
        "name": "Select Station Names Form",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ce2c1d1e.f767",
            "dd210a3f.75a238",
            "e9ccf3f5.9a0dd",
            "62ecd0ac.9f798",
            "ef9996c9.844698",
            "880e080b.6e03c8",
            "43419e4a.69252",
            "9d1f06ad.04cba8"
        ],
        "x": 154,
        "y": 1119
    },
    {
        "id": "f9ac2a4f.ec0f18",
        "type": "group",
        "z": "6ac37828.4c7288",
        "name": "Delete Visibility windows database before fill new data",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6b1d521f.f17bdc",
            "fa7c0ed1.a0037",
            "ea29f6f6.a79b68",
            "3124de43.b13802",
            "12859d93.ff2bb2"
        ],
        "x": 154,
        "y": 419
    },
    {
        "id": "2b159612.3e728a",
        "type": "group",
        "z": "6ac37828.4c7288",
        "name": "Read the satellite position in VTS file and fill the sat position database",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b28fa916.8cecf8",
            "30f8536.28de1ac",
            "ac33343b.ba4e78",
            "d2fa18fb.bb0268",
            "6e83ca21.272f94",
            "17ecad58.1256a3",
            "fe40c70e.60f8c8",
            "6c0fd70b.db8398",
            "f0d578c5.436e78",
            "1a4d810e.14739f",
            "55945d7e.c40f94",
            "bffee3e0.8e31f",
            "44ae3f5e.453b7",
            "b4a46ba6.0c8db8",
            "d96ea2e8.2a85a",
            "cb89ef4c.ba97b",
            "56b0ea89.58abe4",
            "68bafbeb.9ea644",
            "4b6b90eb.77d19",
            "3ce6983f.32dee8",
            "f2b0db0a.891f48",
            "733f7d7b.5f7334",
            "d652d2af.e4153"
        ],
        "x": 154,
        "y": 99
    },
    {
        "id": "4a641fde.c960f",
        "type": "group",
        "z": "6ac37828.4c7288",
        "name": "Read data in visibility windows files and fill the visibility database",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "95d28814.324448",
            "ccdacc27.0b8d5",
            "27642efd.b128c2",
            "2597a39d.2cd17c",
            "41078e88.a6fd9",
            "5011c869.b39c88",
            "66f1c442.2f1dbc",
            "dbe1ad67.c3a45",
            "d84b60ca.de634",
            "c8d1a797.2e0608",
            "df778f9f.fb09e",
            "1692c203.53310e",
            "a54a8ad9.b9fcd8",
            "72c44582.c5e4ec",
            "48bcbb3f.1b82b4",
            "918bdb58.54e5a8",
            "7622255e.b430ec",
            "e4972806.98b458",
            "527ae382.4cd48c",
            "74efb784.8f5f08",
            "da43a5f9.d381a8",
            "39c9f32f.91a26c",
            "93b14ae0.e32aa8",
            "4c4d2bcd.1f4104",
            "518f311d.94f08",
            "c1aa03b9.0e853",
            "1487730a.2f8b9d"
        ],
        "x": 134,
        "y": 599
    },
    {
        "id": "2345ff89d3122291",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "CUSTOM TLE INJECTION :BLUE1",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5aa49bbf.e8b304",
            "4538bc69.22afe4",
            "127ee21c.b3153e",
            "3d2822d5.9f85de",
            "5927d4ed.88df2c",
            "4f22e057.0b261",
            "e3a04705.5ea298",
            "806158a8.2a45d8",
            "bad3f015.92d69",
            "c4bc0507.a5aa28",
            "912d16a.67297e8",
            "f047630c.597cf",
            "788aabf0.013d94",
            "6dcb91d.1b8e47",
            "ef029d22.ba5f5",
            "f6ee9f4a.0abf9",
            "5b94fea4bc8be85c",
            "d733ae2362598440",
            "e946fe5a6f3b792e",
            "b3804737c3bc7442",
            "dd63fe1a15842d7c",
            "db13b17e988b264f",
            "d0db2a049689d1eb",
            "292964d19c921b46",
            "fe5ea50b57aa1c32",
            "17bd6cd48b2a4ff4",
            "b8234c2a75bb5ae9",
            "3481f1216259b66e",
            "a82cd02c21cae659",
            "cf8728c9f3d62ae1",
            "9218e67ae12ff56e",
            "0a501f0d14245ad2",
            "59d5c5d7591c060f",
            "0b382f17aa76d1e4",
            "211ce65b221c6d6b",
            "f5304b8a408542c8",
            "d83b568b192310f6",
            "c24543b528ceac66",
            "c940a9398f89f223",
            "c07207dbde9b5985",
            "a117569a1ea3ef31",
            "59990b6f61e2e4b7",
            "b12b6db8e50017f8",
            "6e09578b5c3977d8",
            "89e69845755f4c77",
            "08298fee71f7bff1",
            "af9822fbee098e88",
            "09b6f94b45eb28b7",
            "6e46ffd229497b6c",
            "40b0f757fccedcae",
            "58f4cd6a92f77065",
            "823834c6c8859a3a",
            "8dffd9504e4178a6",
            "0bf45204b0f771f7",
            "24f7737fe3d4b910",
            "2b2fa0a36bd2a3c4",
            "97a158c453e2a327",
            "cbd32898497f1878",
            "e064d761f7b93a0c",
            "80b8871a94e1c476",
            "13e6783f699d391f",
            "396dad2ae32bfc99"
        ],
        "x": 154,
        "y": 639
    },
    {
        "id": "4be805205e728ae6",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "TLE Request to Display in dashboard",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "68a04f6a.3ad01",
            "3e3626b1.c6cc4a",
            "74fcd845.6038d8",
            "4336a6fd.067998",
            "a972d547.ac2aa8",
            "eacad089ec7f2e6f",
            "4aa96994a4b16522",
            "90616c77ddc20a7b",
            "85bda3f55da806af"
        ],
        "x": 134,
        "y": 4319
    },
    {
        "id": "32829735bc4f3d16",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "CUSTOM TLE INJECTION :  RED1",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f49cc726b786fa1e",
            "b41819f36e747855",
            "5ba1af6f8dddc83a",
            "975910363c080bd1",
            "eaa614457517634c",
            "c98c1a2e433103ab",
            "8b8d076ee67ea589",
            "9bef072d9c28af30",
            "3ff9651d74d8f481",
            "c3969790825257b7",
            "2cfdedfca9832603",
            "2ec49ab58b009cf6",
            "05269e71ae136bf8",
            "9a301d139b066c7b",
            "79a7ad9924b7b167",
            "a58b1046b5db4021",
            "c3ac477d2c124c79",
            "869f204096c7196c",
            "f876564f6733f147",
            "91672903e0e718ac",
            "20fb915262d58f6c",
            "3d2439aa3fec2104",
            "357b1c9d4fd47fb2",
            "122962f6cadc8f0a",
            "5b9993033376ecbe",
            "d91c7be73ae23eb7",
            "2d02dd85c78408df",
            "d284f0c7f6dae0d5",
            "423f11cfef7f70ae",
            "41a32e4cc747f910"
        ],
        "x": 1094,
        "y": 2039
    },
    {
        "id": "3dd210d88054dfaa",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Telemetry flow from TinyGS API",
        "style": {
            "label": true
        },
        "nodes": [
            "bc58e5ec55a98be1",
            "c7eaa84961499300",
            "10f3d8edfb57378f",
            "5c9f53db8c9861c7",
            "ca60a913a04c776b",
            "58539589f8fcb0c9",
            "c15b273a542fde54",
            "9f1af8dc1eb5e870",
            "502dff010f3a7547",
            "1316eb234f76fca6",
            "fd1e7f82277b7ef9",
            "13dd1dc8e33f6fa8",
            "bac813c77cbdeddf",
            "dc8f652dc05f134f",
            "753a66a0e91c8b65"
        ],
        "x": 134,
        "y": 4599
    },
    {
        "id": "f47ebdbe9aa02fbc",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "PHR1B TLE INJECTION",
        "style": {
            "label": true,
            "stroke": "#777777",
            "color": "#000000"
        },
        "nodes": [
            "0ddd48be7ff5da84",
            "3006319b8fdd4fb3",
            "02e0e1d732f50700",
            "70f11a2962c5200c",
            "30e9c44a36e2a7e3",
            "ee267f8df3cc8adb",
            "498533a743c018ee",
            "1dbead4c928ed8d1",
            "8382a53a41598013",
            "d14cf312fe0a60e0",
            "c8ba9d7bacfdb53a",
            "f6fcc56248f740f9",
            "e8094a552d3b4227",
            "035c0a7ed2fe3ee2",
            "1bb78f1585330b5c"
        ],
        "x": 214,
        "y": 3039
    },
    {
        "id": "9a5f859dacc543ae",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "PHRNEO4 TLE INJECTION",
        "style": {
            "label": true,
            "stroke": "#777777",
            "color": "#000000"
        },
        "nodes": [
            "83de099b2fa78eaa",
            "a5c604765ba0012f",
            "5306b898760f6177",
            "af694b9214904c89",
            "22cfa6c3a9fd3b68",
            "1a705817a9b1fd99",
            "55f25125e4360666",
            "9e1f5debf634ca3b",
            "abedf550a283a82e",
            "aebcd6a0a5d13023",
            "ed97241f5a2c195c",
            "b30d48e22e8faab5",
            "a1bc0b9e16a50e7c",
            "c564d0a1ae3e8ebc",
            "5312b82aabb220d1"
        ],
        "x": 234,
        "y": 3279
    },
    {
        "id": "69e1011093603bba",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "PHRNEO3 TLE INJECTION",
        "style": {
            "label": true,
            "stroke": "#777777",
            "color": "#000000"
        },
        "nodes": [
            "71543d1f07fc776a",
            "2344a2a78d98bf1d",
            "d35acc815acea49d",
            "a387ab4ec014cdc2",
            "37f4e2f7dffac770",
            "d97b6cdaaa326f22",
            "1fef9e3ba77e6407",
            "efae4a1d579c52c5",
            "e980327ca9595d9e",
            "dafaa8891883163a",
            "e79ac0bebb08ed4b",
            "bbdd5b9313b88193",
            "a25fb990a2d35418",
            "f342466cf1c63a12",
            "044b0506b8870c46"
        ],
        "x": 234,
        "y": 3479
    },
    {
        "id": "fdab8259e2b1d755",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "CUSTOM TLE INJECTION :  BLUE2",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b1a6eae4087cf52e",
            "b36449ae06ea6d4b",
            "0fa18a38f4979444",
            "300a5f9b3e5610e9",
            "9c0726a2f40a137c",
            "b5f34062935e7af8",
            "cf2fec6522ad59fa",
            "5ea62317d86adb82",
            "8e07129de29d6275",
            "8b03c51e093f2c4c",
            "0332bdb0c4adede2",
            "ba262834438ed618",
            "f1360f4af585f4eb",
            "e90771e3cf2a5243",
            "9852c9a4a96528b0",
            "5b013355edf609df",
            "4f5929f4e0faf499",
            "2f2029df22bca851",
            "a52354b13f5aea11",
            "440df756d3e898f2",
            "801aa94ea770b941",
            "a5a65bebe02a5dda",
            "d9d638fce045ffc5",
            "920cc58f06625984",
            "a99ad14c3f06b98d",
            "140f986615a031cc",
            "2b6a6c592423cc9a",
            "bb8a0fc95f3a4a04",
            "58480317df48f4a4",
            "e5336f4911b2008e",
            "dd93dec169a1923b",
            "95d6bb19d909612d",
            "f98d6fa3076bb7ac",
            "0ea9525a009058f4"
        ],
        "x": 1074,
        "y": 1499
    },
    {
        "id": "d79f942338defd7f",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "PHR TLE INJECTION",
        "style": {
            "label": true,
            "stroke": "#777777",
            "color": "#000000"
        },
        "nodes": [
            "fdeaa62f.5f5688",
            "fed8e554.829fa8",
            "f852b5f6.c99b98",
            "28c8f85d.5c8e08",
            "58575d12.429a94",
            "ff820ff.bf83af",
            "2678f85d.20ec28",
            "34aeb0d4c2a0550e",
            "ed46efe0511874af",
            "d3529a4d4ad201b1",
            "070901a887bb28c2",
            "28d0dbe164b06cd6",
            "225f7a9616f10423",
            "dd1d078a375fef72",
            "521bf868aa8d0de1",
            "57bf8da0f9e70613",
            "168c927c614295a8",
            "ccf9f6d431ed64cc",
            "279cfe02df54c94f"
        ],
        "x": 454,
        "y": 399
    },
    {
        "id": "4c6998b4.6db838",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "name": "Time & TLE setter and storage from Dashboard",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2072d02e.cd2d4",
            "d2005c55.4ffd3",
            "4be84d73.e987b4",
            "d3182296.0de68",
            "8d74ca2b.7c5e38",
            "39db62d0.356f5e",
            "957fd7c.e6c7828",
            "220556fdf5358e27",
            "8755a720eb60c55f",
            "3cd463b18e414c52",
            "2ee441367340e50a",
            "2806b3dc1156fe5a",
            "aaf05bae2b29d885",
            "93d6ced5d286773b",
            "20e12284ea245aef",
            "9f05f084ce0ae8be",
            "844dc894dbd219b5"
        ],
        "x": 124,
        "y": -1
    },
    {
        "id": "72a2d4bc14d948f6",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "CUSTOM TLE INJECTION :  RED2",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "da3ff15e3ef8af72",
            "ed8485e00f8f0b52",
            "f20ce87449bb0473",
            "2b815f20effd914e",
            "cfd7ba48b38a5b82",
            "56746b3aeb555fac",
            "9a3b7338d1630535",
            "a43e55cd5a3e6552",
            "fe098b3fe6fc5e5d",
            "28536d82d866d850",
            "d228f02b7f113d98",
            "417260ed0a2e03cd",
            "065828855a228883",
            "8030a4be7cd955df",
            "29a4edb4fa25f4b5",
            "0115afccfe51ac28",
            "39026bbb7cb7ba50",
            "fbf93b8de66480d8",
            "a09d39652649b0ee",
            "a5456a0e14ff4e9f",
            "34fc69acb40802e3",
            "8ea64980c2a72e58",
            "dfaaccde186ca7ea",
            "cf1650ce74575478",
            "6362160fac60ddf5",
            "c5b6622faa92cafa",
            "ca7fb27883619287"
        ],
        "x": 1014,
        "y": 2539
    },
    {
        "id": "25671b51f351320d",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Checks Celestrack status",
        "style": {
            "label": true,
            "stroke": "#001f60",
            "color": "#000000"
        },
        "nodes": [
            "a57a4be5d794050d",
            "dcc5f3bfad012804",
            "041a53fbb9393209",
            "f22d599e751d9314",
            "ea046aa05eff206f",
            "a90db6e1e3f13fb6",
            "eaed2112c0d57b25",
            "c0b63df6732ea889",
            "adebc33415b96346"
        ],
        "x": 3434,
        "y": 1219
    },
    {
        "id": "d986a879ef5d40e6",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d014e76a2cb25da1",
            "dc0f2d6745c193a0",
            "e2704cd5c5caefc4",
            "046634799b95f29c",
            "e7057fba696ff651",
            "433296a4b830bcfb",
            "711dcfce6c678eae",
            "4f3dd26d2f95cced",
            "90eece077405292b",
            "ec27d3d9dfde1036",
            "8c1a3dd594ede97b",
            "bf5a0c7c968ace0f"
        ],
        "x": 2744,
        "y": 1159
    },
    {
        "id": "9a9dfd74ece6e34c",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "data-base rescure with tle-latest.txt",
        "style": {
            "label": true
        },
        "nodes": [
            "976ed181456d5d92",
            "1b4cf2db17592916",
            "bc15dda52775a710",
            "8063232e20158d5a",
            "f30d12dd2058bef2",
            "19a75b7b1a234d67",
            "c06408fdecb6945d",
            "5a7f69a63e04e750",
            "82adf290f9b9473d",
            "beaf0a11e85d749d",
            "877350886188357e",
            "5adba86582d125c4",
            "11bfbb0c7f9356a8",
            "ebe80588c2cea7ea",
            "bb6892277131a073",
            "1f87636507e0aa01",
            "05a7b7228758721a",
            "742c36d88c0795e6",
            "a6585fdd8837e646",
            "5bf24823ff268871",
            "6cfe4705ace96064",
            "70b73ab02c552d95",
            "e94dd6a4d99bc2fb",
            "8677dba8b1f81479",
            "7216a78efe87f871",
            "402dd68eef637e28",
            "81503c71337a55a1",
            "321b54bc830393f5",
            "d787aa78e7f7c69f",
            "0616c975f506d2ad",
            "f9e0d8bfc76d2ea9",
            "a0ea95e83db4cacd",
            "4fc4cfd68a0b6570",
            "4c44820c369f21d8",
            "cc2f6f7ecc60d930",
            "5a357a4ae6a6d5b3",
            "90ab2f29db897acf",
            "695184832771955f",
            "cb779cec6c69d361",
            "c6a21b7e1f49e8fc",
            "bbd8d175663cbb34",
            "a329faec55f61f76",
            "1cc6fcbc62a009cb",
            "698067ded04938d2",
            "1a85a8622aac2584",
            "243383b13419e82a",
            "52dbdd123e7091c0",
            "5d93b6830d1ac092",
            "6d364e3e0869fe41",
            "5ab99c0c9192c682",
            "b0cbf5198d5ebd45",
            "1926d3943dce7523",
            "b448f6837eae385f",
            "c26754142d9a49d1",
            "1dd663aebe5da599",
            "f7f41c5df86844a6",
            "34c234d7767900b6"
        ],
        "x": 3454,
        "y": 379
    },
    {
        "id": "cc681a6adf75def8",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d9e846e0881012e5",
            "141ed3697cd1dfac",
            "c2a41e275ecf4f5c",
            "0d170e1b6fd4c30e",
            "efefb3362e012b40",
            "cb9310778af334ad",
            "5ed6f3470a993d7b",
            "94b1921bd754c60b",
            "15abf54442e621d9",
            "2bf663a53ca7f644",
            "08371a8e834ed3fa",
            "0f1749dffdc1aa6d",
            "9958904edb2cfd1b",
            "393a1e981904174c",
            "dc5b4ad11e8803c5",
            "f51d9a2fa3b7d473",
            "2c13afbda9e52345",
            "06cfe774b26c29fa",
            "f58b20b85a2b8c78",
            "af796903ae846c21",
            "93c897bf15c62e48",
            "b003810dbf6c337b",
            "f7ebd85fb66e8ba8",
            "4bbd3c0c495c20c2",
            "871fa62da5d6f2d3",
            "14f42ed5aa544e59",
            "85cd4e1c9d9c1da6",
            "adef8fa7dbebb37b",
            "8bab780e92b8d51c",
            "2a3a2826f85ab105",
            "6af08d975548cc25",
            "c72f4568fae52ea3",
            "ea3e20f1e27896c4",
            "b25b73d8412b6ddc",
            "e1da563798b90ae6",
            "cc6d05c65118620c",
            "23676e5567207271",
            "fc7b43f896ea0de4",
            "e129837eb4ccaf57",
            "1843d3ddde194a97",
            "d1724687d9c4c3ec",
            "7de2968a8e624b25",
            "3bfc0f2ba6c05001",
            "13569978a3569fd7",
            "e3144d94fa7f4289",
            "0591ba7c899f79a7",
            "adc095e9c8bedc11",
            "6de4b497a2c76f7c",
            "fa1aab6e4e36588a",
            "1804efc1087bda5e"
        ],
        "x": 274,
        "y": 879
    },
    {
        "id": "25175e791aace242",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a84ab3f7542dc7d7",
            "59f0af37772f7809",
            "75898c448da41d9b",
            "0459a753baf9804e",
            "9a557e78e282adf5",
            "9408b8be30e4d1e1",
            "d3c05f7d483838d3",
            "5380ca71e906d654",
            "4fe261bcde86207b",
            "0382aa483506bf85",
            "98a121fd8de28a07",
            "638f737ddc095845",
            "398243434e303641",
            "a6a08c4c60e3b076",
            "6b0e97aea0b6c13f",
            "56b381ee693e862d",
            "1bcdc463107e2623",
            "422b4ba538b856bb",
            "93819bb8e14795f6",
            "96ca05303ead4be4",
            "628c6a08a412dafb",
            "20fe3cf00d6d8d74",
            "36ef89910aa71044",
            "45de4882c5a79210",
            "b02d6627d083eda4",
            "50baedb79c837b7a",
            "10b7e2efcf4bceed",
            "6145fb925045db76",
            "4e01a7fd7c89227b",
            "f80fbb75ac931adb",
            "ee322054c8b52c91",
            "a73e597c386ed559",
            "b2248e50a89f65dd",
            "8f235a4905cf2bd5",
            "feaf23544b13a5e8",
            "f3f0e7784b20d802",
            "6c8ac12042ef66cc",
            "655c0e8355008133",
            "d5b6f460e058c367",
            "4e8702575833e6dc",
            "1fffd5617ac64ef6",
            "bdcf206d83036e87",
            "913450b2c67760a2",
            "371e83f16c99d88f",
            "4bbfbf595e7501c0",
            "ce62107af64ea46c",
            "eb65e451b5859e1f",
            "fd2e07415eb92a59",
            "8a0e268904d232b4",
            "348f2fc735a457f3"
        ],
        "x": 274,
        "y": 1379
    },
    {
        "id": "4797f1c91f3170ab",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4ff5f137bfdc5a22",
            "040d30245b16c5f6",
            "68e75b3afc4a1b2e",
            "e09f86134bef0309",
            "30ae118bd0a59ff3",
            "277eb99ba931bbbd",
            "dba8813876f0d0ca",
            "9e27c070e912be54",
            "84d4dab13d9299f7",
            "1dc7dffde56d50df",
            "4249508a88e4e54b",
            "30da78f88f2fc950",
            "a7c6d6ea84154338",
            "c287e551330adea5",
            "77a8b9510ab5d91f",
            "1f88c01d828d2bf6",
            "a022f4488d277df4",
            "6dfa9833c4e4022c",
            "ce5fb1f5f244caf4",
            "f129a4cbbb3e0680",
            "a3447dcc20a433a0",
            "52865fa7ddf3ff0a",
            "67c4594ded185b3d",
            "41c27e398905a252",
            "9ddb56227135c408",
            "f2a6a0829f133b85",
            "0dc73d3ef63bc457",
            "1204d905a2f7cf1c",
            "37344c7ff017b179",
            "ea518f9a0cf28767",
            "ac05d363e8776ec0",
            "4c11754c10320aed",
            "d85d77d25fc56aee",
            "078eb6a97ad6c8bb",
            "77dbd23c0cfe5c0c",
            "1e542c2b5c054796",
            "a393ec95bc59b0a7",
            "1054fc71f09cdbc3",
            "0f5a462fd1ca3105",
            "eaa9b33c1978ee52",
            "c1c9d1585e036f74",
            "8c61f2c925a530dd",
            "b07be964a2dd252c",
            "88b988f2e6af1756",
            "a2beac1bb901c9fa",
            "a942a9a6bfafa8b4",
            "6d295facb58534db"
        ],
        "x": 274,
        "y": 1899
    },
    {
        "id": "8cebe66fd2fcaadb",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "574e4c417983ae7a",
            "01f18e70add9cff6",
            "28e13a47f346754b",
            "2c9dd808c4ca3a93",
            "43fe77bc4e6abaed",
            "1a68b79650ce256c",
            "a884a5c3b089819b",
            "67e6cbab14e31052",
            "0e6a02d99be79c23",
            "4ec3d403ce05e87e",
            "8244fccf9e54d094",
            "572ea7f7bbdb519c",
            "12707641a0b5ee0f",
            "bec9e498ba6375f3",
            "a685d38f741e406c",
            "a5ab075dec117627",
            "aca2fd577b8d3530",
            "304d9d148ebb0b73",
            "da34361c0bc8a0d4",
            "778c8dd30b120205",
            "759607475b021dc9",
            "431eeb01877ef487",
            "cdd3a74ebed64c0c",
            "919da6dcca5bbecd",
            "32b62171234a6921",
            "c2cfc98b25448aa9",
            "08e3bf0683b3d546",
            "509a775aef530a40",
            "8ca362e8efdf666d",
            "03f0c3acad703049",
            "26768359472e0a6a",
            "1e796b63f590ed7a",
            "6fbc52778806a647",
            "7f35e7c874c50cc9",
            "5daadcf0f9c7100f",
            "3c216d6765ee437b",
            "3ef7d4b96b8b3e13",
            "410cc39e441842d1",
            "acc462f8ed83cc95",
            "a6c1e74ca5e04589",
            "c74445c268b19ff2",
            "973705437f127078",
            "e0b321cf4095815b",
            "e317b596f623c6e0",
            "d5406f9936f94e70",
            "d2aaaa0cb331e647",
            "640205c575264d82",
            "cb96ef13fcd94cf9",
            "5baef58dd260f51c",
            "0db05beef3d64877",
            "9a96fd2e4bde66f1",
            "e1c315f120a309e0"
        ],
        "x": 264,
        "y": 2419
    },
    {
        "id": "6207162a83e4a4d1",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "21cb21048ea72ed1",
            "5995f43888228028",
            "b34eebed99433c97",
            "4f58bdb6277957c9",
            "f663528e83935a5a",
            "232f9530e9483fd0",
            "e3a1c188f10c4bad",
            "2d62d383e359e3e4",
            "139d87a61de8fb2d",
            "38021a7090e5c90b"
        ],
        "x": 264,
        "y": 2939
    },
    {
        "id": "bde6ea157d76a8b0",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bd28d1663b4119ac",
            "0746bb87e1d7be83",
            "460ef4f0359fa20c",
            "ef3dc7e1d721b2f9",
            "f1a02d339ab15d13",
            "451c5be989d9294c",
            "dcabc7e9b475cd6d",
            "99ee3d83f0302c37",
            "d32b325c8b1fc9af",
            "eff4798c71085513",
            "02d6f47bfaedd5f8",
            "957e182059950b33",
            "060259ab7d13bac7",
            "48a92cf63a85120a",
            "cb8980db9babe5c0",
            "c14e2956fb7324a5",
            "4c61af07d5440b24",
            "5077a8cd215dacf8",
            "ede8891b57271a85",
            "93d678661c5d817a",
            "491df3b4c3bf3409",
            "76f76b6abf7d0b24",
            "847550e87814fba4",
            "69685c5cf75fe033",
            "3e84b71925909505",
            "1ad21657b2842d69",
            "8faff6b8783bf065",
            "088b1c5b1d35457e",
            "c9a6464f7d2da62a",
            "8187c89370bdbf5a",
            "68f8a4538f23291d",
            "65d2f35495558a56",
            "2b24ea015282a48a",
            "40a6d644acf51561",
            "46b03384f7d40a32",
            "eade1819e9df8266"
        ],
        "x": 254,
        "y": 379
    },
    {
        "id": "9364dbbaeae7efcc",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "029bbc417ee358dc",
            "3c3d942c136c7826",
            "7855c24fe1f2a894",
            "14e9f3349ffe258f",
            "10c966ac962761f1",
            "a924b29b46320d1c",
            "3dfe2f2f65db65d6",
            "0a2949f7bc6bbd3f",
            "d9a5bc7406abf2fc",
            "a9a84e889621e77f"
        ],
        "x": 1174,
        "y": 39
    },
    {
        "id": "ef7c6a255dddba2f",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6fe4f4018bc8dbf6",
            "c09ff10b2a7d849b",
            "c6a0f7e3ae8f5e2a",
            "21d004d8a0b3ad1d",
            "565906a73ac8bfd6",
            "df01864d55b31aa5",
            "6258d262ba03c5bd",
            "36edc6de3f4aea19"
        ],
        "x": 2454,
        "y": 639
    },
    {
        "id": "8634c7d9435a8b95",
        "type": "group",
        "z": "62804953b962105f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d80cb154.b2fe",
            "a43cf0c3ca8f0fd8",
            "f680cce196c2f842",
            "f5218ce3ebeb34dc",
            "2953ffcc68f6be38",
            "371f634149e6590c",
            "11d1c90a96340c32",
            "758e3d3b8fb58f33"
        ],
        "x": 194,
        "y": 359
    },
    {
        "id": "e570253ed9784b6a",
        "type": "group",
        "z": "62804953b962105f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "09d7a983b9b9ba06",
            "4e5dd8e0ab94d018",
            "b48acc271cc4016c",
            "1861660879507ceb",
            "8077005c0f87eec7",
            "fcb6777d67efa239",
            "c67ec5067dc22890",
            "1c5f8b40f6f0c84d"
        ],
        "x": 174,
        "y": 119
    },
    {
        "id": "1d9db200c8c462a8",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ad55ac567e7d4286",
            "3c8cd23b8aa07ad9",
            "3ea47d3224650771",
            "962e1373fd8386f8",
            "0f2dbd34dd8c8d1c",
            "9e64e7461634b119",
            "e3c11e24c860be14",
            "316d50ec298861de",
            "39003ad824e44026",
            "aa939b6e05f7588d",
            "df82e82bf7ac3a5b",
            "d7e5761a91b6312d",
            "45ee86e0b247dfe2",
            "b35be834446d4aa7",
            "b36a9e198f579d6f",
            "f711fb70318c34f1",
            "fa23d8f8cd010485",
            "e24b2b4e0994443f",
            "2a32578c6833009a",
            "935ff25d886f0f1d",
            "2810c1a354194b23",
            "0416658a7e68ff94",
            "a3a6900ac880ed4d",
            "ab7c9532b74823ba",
            "719dfd890f629b79",
            "665016211d444ab6",
            "ffdcb73d3f9fb6a0",
            "3fa042c7226d650a",
            "131185f8d180b61b",
            "6d46f5b9e54454ec",
            "bbe011784c4e8416",
            "4f6a448fcc452112"
        ],
        "x": 3014,
        "y": 2779
    },
    {
        "id": "9c8f7f2b5249150e",
        "type": "group",
        "z": "a9c7c6499fb06192",
        "name": "Initialize missing JSONs",
        "style": {
            "label": true
        },
        "nodes": [
            "1f15540a163a20fa",
            "4922ac523bdc91d3",
            "5dbba84369f71a58",
            "1688d203d6d2922f",
            "af5aae43d30de7ee",
            "6acd64861c2ddf3a",
            "db5372ec605c6c64",
            "6374784edd2511fd",
            "0d97d48b885c1636"
        ],
        "x": 3434,
        "y": 4479
    },
    {
        "id": "a61b6b0beb4dae17",
        "type": "group",
        "z": "4ddfcb5d4ffd885f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "466bbc6fbc14edb5",
            "96f133ced1f48432",
            "3261e2adbf75e542",
            "963cb2a06bd831f9",
            "f31bd0fc8ff9cb9b",
            "926e8ab171ef1799",
            "5d78468f5708a3a7",
            "8d2ed2bbdcaf4084"
        ],
        "x": 54,
        "y": 679
    },
    {
        "id": "1475cac370a7ea02",
        "type": "group",
        "z": "4ddfcb5d4ffd885f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8cc23f520ddf1bcb",
            "e553d56e1c2f4824",
            "6830a5c9e7fcfcff",
            "744e8e51f18b2f2a",
            "da8610c96e96ee64",
            "a0a5b0f5b87c588f",
            "1c9766a5428969ad",
            "868d8d56042016ef"
        ],
        "x": 54,
        "y": 279
    },
    {
        "id": "12b73901907ee423",
        "type": "group",
        "z": "4ddfcb5d4ffd885f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "79b07c9deaca4821",
            "8bb75c59299e6da3",
            "726fe71bde08e4c8",
            "27ae954d12838df7",
            "08430eee228f26d7",
            "47cb2f9785ebd863",
            "83174910077b059e",
            "6bdf2e2484a0da64"
        ],
        "x": 54,
        "y": 79
    },
    {
        "id": "5335f31d2952084e",
        "type": "group",
        "z": "4ddfcb5d4ffd885f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ab66bbb721a17c46",
            "91701124e6aeddba",
            "15d619667444cffc",
            "ded1c2801fd6ed57",
            "e618c621cf58c52e",
            "43ec01f8f568bd93",
            "0ac92b32c17d312a",
            "e1aef5bdca676aae"
        ],
        "x": 54,
        "y": 479
    },
    {
        "id": "741fd77f6d9b3131",
        "type": "group",
        "z": "a37cc3392dfe3850",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e3ccf0456fcafedf",
            "d71f38be32964178",
            "af6690aaa1d5506e",
            "b21dfa55a8be32b8",
            "37ad0f5db69a0a92",
            "6254fed12b6d11e0",
            "b4c30d74303d3fda",
            "35aa96592eb7f377",
            "0b4745eab2465a5c",
            "ddb2c2c3841de05a",
            "66fe466045cd8ec4",
            "bccd3a1ae1354ea5",
            "66ac162682cb0dca",
            "9cf0270e24f5e7d2",
            "bd44410470f18aea",
            "7faa69c7a8fb5867",
            "8bb69708b193a7da",
            "0a13adeab708b2b4",
            "c5123fa5946ce9f8",
            "c3d85f2f1e1374d7",
            "d81801e66dd0e3e2",
            "105cf8995e9907cd",
            "5b28ae6e8ef675ca",
            "d1a214987ab144c3",
            "90fb241377880fb6",
            "c48f161fd1a57e8b",
            "3853f0aecc249b02",
            "60708c380b4d96f0"
        ],
        "x": 74,
        "y": 99
    },
    {
        "id": "6011c97c4327735d",
        "type": "group",
        "z": "a37cc3392dfe3850",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "997bd118e9898efa",
            "74ffb890146508df",
            "2db28dd3c2868aaf",
            "2eb94a5f6b339506",
            "ef392ad28cd90a7b",
            "8e0b25ba91d60a62",
            "9d0812e3d98d6f29"
        ],
        "x": 74,
        "y": 439
    },
    {
        "id": "cb0fed7.3a64e1",
        "type": "group",
        "z": "107c9bc.328b364",
        "g": "7041cc0d.5676f4",
        "name": "",
        "style": {
            "label": false,
            "stroke": "none"
        },
        "nodes": [
            "960b681e.848468",
            "4bd1d7a3.884648",
            "931b309d.f0a88",
            "13038277.3984de",
            "f05b1c73.c8a0a",
            "b417d0ae.ea66a",
            "1505a844.d0fcc8",
            "bc9a8d46d71b2c0a",
            "2f1ac6a9637d1abe",
            "5e2a36a63fa13335",
            "1df6f4783011c9ba",
            "a74eff43bace63eb",
            "92a3306af8afe631",
            "3186623bfab93670",
            "4519c16515fddae3",
            "eee1275b3aa61402",
            "1e6c927613bb91ab"
        ],
        "x": 124,
        "y": 199,
        "w": 942,
        "h": 482
    },
    {
        "id": "d9532912.7a0608",
        "type": "ui_tab",
        "name": "MCS Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dc3b3b9c.d231c8",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#434747",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Antoine-Theme",
                "default": "#4B7930",
                "baseColor": "#038add",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#038add",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#585755",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#000000",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#182834",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#01174b",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#00567a",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#212c31",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 6,
                "py": 0
            }
        }
    },
    {
        "id": "3dabe8df.a10df8",
        "type": "ui_group",
        "name": "Mission Monitoring",
        "tab": "d9532912.7a0608",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "89c6e42c.26d338",
        "type": "ui_group",
        "name": "Satellite Tracker",
        "tab": "d9532912.7a0608",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e85e692d.e47bb8",
        "type": "ui_group",
        "name": "Ground Stations Database",
        "tab": "d9532912.7a0608",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ce913522.c3fc68",
        "type": "ui_group",
        "name": "Space Situation Worldmap - REAL LIVE",
        "tab": "478e14fd.681fac",
        "order": 2,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "b10e0a54.7b0198",
        "type": "ui_group",
        "name": "MCS Manager",
        "tab": "d9532912.7a0608",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e7d5b9e4.972fe8",
        "type": "ui_group",
        "name": "SkyView",
        "tab": "d9532912.7a0608",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "478e14fd.681fac",
        "type": "ui_tab",
        "name": "MCS Satellite Tracker",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "11fb2a90.bdba15",
        "type": "ui_group",
        "name": "Logo",
        "tab": "478e14fd.681fac",
        "order": 6,
        "disp": false,
        "width": "4",
        "collapse": false
    },
    {
        "id": "cbb369e33298cfeb",
        "type": "ui_group",
        "name": "BLUE1-TLE-setter",
        "tab": "57235fe8ed92dd71",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1583556bde074290",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 4,
        "width": 10,
        "height": 1
    },
    {
        "id": "67beab82532023a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 5,
        "width": 10,
        "height": 1
    },
    {
        "id": "46c3c02907846283",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 6,
        "width": 10,
        "height": 1
    },
    {
        "id": "4519c4c163d053a5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 7,
        "width": 10,
        "height": 1
    },
    {
        "id": "478cae2b09ba28e9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 8,
        "width": 10,
        "height": 1
    },
    {
        "id": "a201ba2c49e8a699",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 9,
        "width": 10,
        "height": 1
    },
    {
        "id": "f85d87b0d5e49c26",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 10,
        "width": 10,
        "height": 1
    },
    {
        "id": "d033a5789d24d0e0",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 11,
        "width": 10,
        "height": 1
    },
    {
        "id": "fda6580e697af2cb",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 12,
        "width": 10,
        "height": 1
    },
    {
        "id": "87f7140d7230e6cf",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 13,
        "width": 10,
        "height": 1
    },
    {
        "id": "836544a146941eaa",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 14,
        "width": 10,
        "height": 1
    },
    {
        "id": "5a7810372552815e",
        "type": "ui_group",
        "name": "Orbital Maneuver - BLUE1",
        "tab": "57235fe8ed92dd71",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b124d9d71f1e45e8",
        "type": "persist-store",
        "filename": "time-persistence.json",
        "interval": "60"
    },
    {
        "id": "57235fe8ed92dd71",
        "type": "ui_tab",
        "name": "MCS Maneuver Manager - BLUE1",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e3a0a21144e69c21",
        "type": "ui_tab",
        "name": "MCS Maneuver Manager - RED1",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c8a7959a4b0f55f9",
        "type": "ui_group",
        "name": "Orbital Maneuver - RED1",
        "tab": "e3a0a21144e69c21",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c02dcce485dfb187",
        "type": "ui_group",
        "name": "RED1-TLE-setter",
        "tab": "e3a0a21144e69c21",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7cbca3c0b9c25d7c",
        "type": "ui_group",
        "name": "Ergol Calculator",
        "tab": "b266a9c8793c0293",
        "order": 6,
        "disp": true,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1756cdc52869c611",
        "type": "ui_group",
        "name": "Orbital Maneuver - BLUE2",
        "tab": "87d362c0853f521f",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7465a3d35f5541d7",
        "type": "ui_group",
        "name": "Orbital Maneuver - RED2",
        "tab": "0007b54ff2837a35",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "85ebfab4c5310e30",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fb0f170d8067c3d5",
        "order": 6,
        "width": 13,
        "height": 1
    },
    {
        "id": "edf244a47085d4de",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fb0f170d8067c3d5",
        "order": 7,
        "width": 13,
        "height": 1
    },
    {
        "id": "458a7ed67ad4f4f2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fb0f170d8067c3d5",
        "order": 8,
        "width": 13,
        "height": 1
    },
    {
        "id": "a366c2549be7b3c4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fb0f170d8067c3d5",
        "order": 9,
        "width": 13,
        "height": 1
    },
    {
        "id": "10abb0a1e6a0b74f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fb0f170d8067c3d5",
        "order": 10,
        "width": 13,
        "height": 1
    },
    {
        "id": "81d0e5ee7c52f38a",
        "type": "ui_group",
        "name": "BLUE2-TLE-setter",
        "tab": "87d362c0853f521f",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "960e156071a227f3",
        "type": "ui_tab",
        "name": "MCS EO",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cd20a742773dd128",
        "type": "ui_group",
        "name": "Earth Observation Manager",
        "tab": "960e156071a227f3",
        "order": 1,
        "disp": true,
        "width": "36",
        "collapse": false
    },
    {
        "id": "cd81d08b.eebb3",
        "type": "ui_group",
        "z": "9fc2d0daadf97d1e",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "1d33537b5ace1e8e",
        "type": "ui_group",
        "name": "Toolbox",
        "tab": "0007b54ff2837a35",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0deac27858739b34",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "a2b95ac780df025c",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "9bcb1caa9a89abab",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "15ba7d5baa2a390e",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "c58c203b16e24971",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "24bc662896ca4306",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 11,
        "width": 14,
        "height": 1
    },
    {
        "id": "bbc9b7450be95660",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 12,
        "width": 14,
        "height": 1
    },
    {
        "id": "4aca3e8d870a17cf",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 13,
        "width": 14,
        "height": 1
    },
    {
        "id": "2fe7be3768513e6e",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 14,
        "width": 14,
        "height": 1
    },
    {
        "id": "137ac9d75a966d53",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 15,
        "width": 14,
        "height": 1
    },
    {
        "id": "c3df4221bc39e72d",
        "type": "ui_group",
        "name": "Toolbox",
        "tab": "e3a0a21144e69c21",
        "order": 5,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d4e830c4b00daeae",
        "type": "ui_group",
        "name": "RED2-TLE-setter",
        "tab": "0007b54ff2837a35",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e53ba99e58445214",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 3,
        "width": 10,
        "height": 1
    },
    {
        "id": "ae8d4ccb7fb9c3af",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 2,
        "width": 10,
        "height": 1
    },
    {
        "id": "139d0fef1f7ac356",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 1,
        "width": 10,
        "height": 1
    },
    {
        "id": "8de6bb2e.d8b2a8",
        "type": "mongodb",
        "hostname": "mongo",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "csug",
        "name": ""
    },
    {
        "id": "af48d51783d9f2e3",
        "type": "soundfile-directory",
        "directory": "/app/maneuver-manager/"
    },
    {
        "id": "0007b54ff2837a35",
        "type": "ui_tab",
        "name": "MCS Maneuver Manager - RED2",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ada4e0c8.ca2d58",
        "type": "ui_group",
        "z": "62804953b962105f",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "7e85bf4a6d733f1e",
        "type": "ui_group",
        "name": "Settings",
        "tab": "d9532912.7a0608",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "76d99b7f0de6e0e3",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "8888",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "1b52a294.dc93fd",
        "type": "ui_group",
        "name": "three",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "5f97447cee9bbcaf",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "c199f829577fcdc5",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 6,
        "width": 8,
        "height": 1
    },
    {
        "id": "e657bf674f50dc62",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 7,
        "width": 8,
        "height": 1
    },
    {
        "id": "b1d0505b199e4252",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 8,
        "width": 8,
        "height": 1
    },
    {
        "id": "e08732da1bd2b950",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 9,
        "width": 8,
        "height": 1
    },
    {
        "id": "7f391daa53b5778f",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 10,
        "width": 8,
        "height": 1
    },
    {
        "id": "ca20b59eb7bf0394",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 11,
        "width": 8,
        "height": 1
    },
    {
        "id": "122b6068513751ed",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 12,
        "width": 8,
        "height": 1
    },
    {
        "id": "31c5482d78e3776e",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 13,
        "width": 8,
        "height": 1
    },
    {
        "id": "1b5b94f2642c9ae3",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 14,
        "width": 8,
        "height": 1
    },
    {
        "id": "186b4f497fffc21d",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 15,
        "width": 8,
        "height": 1
    },
    {
        "id": "87d362c0853f521f",
        "type": "ui_tab",
        "name": "MCS Maneuver Manager - BLUE2",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "26db63df37f9f62b",
        "type": "ui_group",
        "name": "Toolbox",
        "tab": "57235fe8ed92dd71",
        "order": 6,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "831fc0fb10210de5",
        "type": "ui_group",
        "name": "Toolbox",
        "tab": "87d362c0853f521f",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7a25fb2059642188",
        "type": "ui_tab",
        "name": "Test Three",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e3d98afc2044f607",
        "type": "ui_group",
        "name": "Group test",
        "tab": "7a25fb2059642188",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d783cb980c3979fc",
        "type": "ui_group",
        "name": "Demo",
        "tab": "0449b3b1fea99d52",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "0449b3b1fea99d52",
        "type": "ui_tab",
        "name": "Demo",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5476f1c.1f50a1",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "d14867ca.4a8e08",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "849ffeda.40e4",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "f3269266.ad996",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d14867ca.4a8e08",
        "type": "ui_tab",
        "name": "Tab 1",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f3269266.ad996",
        "type": "ui_tab",
        "name": "Tab 2",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f225da6f.835808",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "7041cc0d.5676f4",
        "name": "Time-out",
        "links": [
            "1ff29f60.5ef8c1",
            "2a0b6d91.16b622",
            "ce2c1d1e.f767"
        ],
        "x": 545,
        "y": 640,
        "wires": []
    },
    {
        "id": "7526a5fd.25462c",
        "type": "ui_media",
        "z": "107c9bc.328b364",
        "g": "8b9773b.b33289",
        "group": "b10e0a54.7b0198",
        "name": "EAE logo",
        "width": 3,
        "height": 3,
        "order": 1,
        "category": "logo",
        "file": "LOGO-ECOLE-DE-LAIR-carre-v8-bis.jpg",
        "layout": "expand",
        "showcontrols": true,
        "loop": true,
        "onstart": true,
        "scope": "local",
        "tooltip": "",
        "x": 1340,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "6ad25ff1.2d9c5",
        "type": "ui_media",
        "z": "107c9bc.328b364",
        "g": "8b9773b.b33289",
        "group": "11fb2a90.bdba15",
        "name": "CSUG logo",
        "width": 4,
        "height": "4",
        "order": 2,
        "category": "logo",
        "file": "CSUG-logo.png",
        "layout": "center",
        "showcontrols": true,
        "loop": true,
        "onstart": true,
        "scope": "local",
        "tooltip": "",
        "x": 1530,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1d1c8521.cf142b",
        "type": "ui_media",
        "z": "107c9bc.328b364",
        "g": "8b9773b.b33289",
        "group": "11fb2a90.bdba15",
        "name": "EAE logo",
        "width": 4,
        "height": "4",
        "order": 1,
        "category": "logo",
        "file": "LOGO-ECOLE-DE-LAIR-carre-v8-bis.jpg",
        "layout": "expand",
        "showcontrols": true,
        "loop": true,
        "onstart": true,
        "scope": "local",
        "tooltip": "",
        "x": 1520,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "37361282.bab14e",
        "type": "ui_media",
        "z": "107c9bc.328b364",
        "g": "8b9773b.b33289",
        "group": "11fb2a90.bdba15",
        "name": "UGA logo",
        "width": 4,
        "height": "4",
        "order": 3,
        "category": "logo",
        "file": "UGA-logo.jpg",
        "layout": "center",
        "showcontrols": false,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 1520,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "960b681e.848468",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Every X minutes",
        "mode": "link",
        "links": [
            "b9a6ef87.24de3"
        ],
        "x": 745,
        "y": 520,
        "wires": []
    },
    {
        "id": "4bd1d7a3.884648",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "START VTS",
        "links": [
            "90cba714.f229f8",
            "eda817f1.b02c58",
            "f0b7682.7fe4098"
        ],
        "x": 755,
        "y": 400,
        "wires": []
    },
    {
        "id": "931b309d.f0a88",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "RELOAD DASHBOARD",
        "mode": "link",
        "links": [
            "4336a6fd.067998"
        ],
        "x": 535,
        "y": 600,
        "wires": []
    },
    {
        "id": "13038277.3984de",
        "type": "comment",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "2nd STEP : START VTS ",
        "info": "",
        "x": 270,
        "y": 240,
        "wires": []
    },
    {
        "id": "f05b1c73.c8a0a",
        "type": "comment",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "3rd STEP : TLE UPDATE REQUEST",
        "info": "",
        "x": 560,
        "y": 240,
        "wires": []
    },
    {
        "id": "b417d0ae.ea66a",
        "type": "comment",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "PERMANENT : REFRESH DASHBOARD",
        "info": "",
        "x": 320,
        "y": 580,
        "wires": []
    },
    {
        "id": "1505a844.d0fcc8",
        "type": "ui_button",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "TLE & Visi Windows Update",
        "tooltip": "",
        "color": "",
        "bgcolor": "#477500",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 380,
        "wires": [
            [
                "1df6f4783011c9ba"
            ]
        ]
    },
    {
        "id": "bc9a8d46d71b2c0a",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Trigger-ALL",
        "mode": "link",
        "links": [
            "031daf8ad228e86a",
            "04828409f3c8eb98",
            "1e9676e414d32f76",
            "220556fdf5358e27",
            "32528e58bc954e44",
            "5ab7a667fbb1644d",
            "a117569a1ea3ef31",
            "ba03309eb894bc80",
            "ccf9f6d431ed64cc",
            "e7a2222d78b89f73"
        ],
        "x": 535,
        "y": 520,
        "wires": []
    },
    {
        "id": "2f1ac6a9637d1abe",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "TLE Blue1 updated OUT",
        "links": [
            "6c044cebf58617f5",
            "db74ac0a48d974d3",
            "31deccc384baab58",
            "7eba3e10420b1e8e",
            "32fdcf88c6843826",
            "eb86a48d805b0b8b",
            "2b4ccb74f56e22c2",
            "899754fdb746a767",
            "bbbaae8e174467a6",
            "3653af24f4f57ebd",
            "0d62970b216a315a",
            "b75bd948c971663a"
        ],
        "x": 645,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "5e2a36a63fa13335",
        "type": "ui_button",
        "z": "107c9bc.328b364",
        "d": true,
        "g": "cb0fed7.3a64e1",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "#477500",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 640,
        "wires": [
            [
                "931b309d.f0a88"
            ]
        ]
    },
    {
        "id": "1df6f4783011c9ba",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "TLE VISI UP",
        "mode": "link",
        "links": [
            "25b09542c21ac510",
            "3124de43.b13802",
            "51f47fc0821c4093",
            "6254fed12b6d11e0"
        ],
        "x": 485,
        "y": 380,
        "wires": []
    },
    {
        "id": "a74eff43bace63eb",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python memxterminator.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 750,
        "y": 320,
        "wires": [
            [
                "eee1275b3aa61402",
                "1e6c927613bb91ab"
            ],
            [
                "4519c16515fddae3"
            ],
            []
        ]
    },
    {
        "id": "92a3306af8afe631",
        "type": "ui_button",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Delete MEMs",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 340,
        "wires": [
            [
                "a74eff43bace63eb"
            ]
        ]
    },
    {
        "id": "3186623bfab93670",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "MEM FLUSH",
        "links": [
            "0a13adeab708b2b4",
            "5ab99c0c9192c682"
        ],
        "x": 405,
        "y": 300,
        "wires": [
            [
                "a74eff43bace63eb"
            ]
        ]
    },
    {
        "id": "4519c16515fddae3",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "FLUSHMEM ERR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 420,
        "wires": []
    },
    {
        "id": "eee1275b3aa61402",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "FLUSHMEM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 460,
        "wires": []
    },
    {
        "id": "1e6c927613bb91ab",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "MEM FLUSH OUT",
        "mode": "link",
        "links": [
            "ecb276912a78b4e7",
            "d1a214987ab144c3"
        ],
        "x": 1005,
        "y": 260,
        "wires": []
    },
    {
        "id": "e0ec963913cbf7a9",
        "type": "ui_worldmap",
        "z": "107c9bc.328b364",
        "group": "cd20a742773dd128",
        "order": 12,
        "width": "15",
        "height": "11",
        "name": "",
        "lat": "",
        "lon": "",
        "zoom": "",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "hide",
        "layers": "hide",
        "panit": "true",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "true",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriO,EsriDG,NatGeo,UKOS,OpTop,SW",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 1200,
        "y": 340,
        "wires": []
    },
    {
        "id": "bd28d1663b4119ac",
        "type": "ui_form",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "label": "BLUE2 TLE setter",
        "group": "81d0e5ee7c52f38a",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Inclination i (°) [2,4]",
                "value": "incli",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "RAAN Ω (°) [3,4]",
                "value": "raan",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Eccentricity e [7]",
                "value": "ecc",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "AoP ω (°) [3,4]",
                "value": "aop",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Mean Anomaly M [3,4]",
                "value": "meana",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Mean motion N [2,14]",
                "value": "mean",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "incli": "",
            "raan": "",
            "ecc": "",
            "aop": "",
            "meana": "",
            "mean": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 370,
        "y": 560,
        "wires": [
            [
                "48a92cf63a85120a",
                "2022867b6d56e8b3"
            ]
        ]
    },
    {
        "id": "0746bb87e1d7be83",
        "type": "ui_form",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "label": "RED1 TLE setter",
        "group": "c02dcce485dfb187",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Inclination i (°) [2,4]",
                "value": "incli",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "RAAN Ω (°) [3,4]",
                "value": "raan",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Eccentricity e [7]",
                "value": "ecc",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "AoP ω (°) [3,4]",
                "value": "aop",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Mean Anomaly M [3,4]",
                "value": "meana",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Mean motion N [2,14]",
                "value": "mean",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "incli": "",
            "raan": "",
            "ecc": "",
            "aop": "",
            "meana": "",
            "mean": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "custom-class-node-red-button",
        "x": 370,
        "y": 640,
        "wires": [
            [
                "76f76b6abf7d0b24"
            ]
        ]
    },
    {
        "id": "d9e846e0881012e5",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Max slider BLUE 1",
        "func": "\nstart = Date.parse(msg.payload.startdate);\nend = Date.parse(msg.payload.enddate);\nmsg={ui_control: {max:(end-start)/10000} , body: [start/1000, end/1000], topic:\"dates\" };//10sec step between start date and end date\n//msg = {ui_control:{\"min\":0, \"max\":(end-start)/10000}}\n//msg.body = [start/1000, end/1000];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1040,
        "wires": [
            [
                "141ed3697cd1dfac",
                "06cfe774b26c29fa"
            ]
        ]
    },
    {
        "id": "141ed3697cd1dfac",
        "type": "ui_slider",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "label": "Time Slider TLE UPDATE",
        "tooltip": "Time range",
        "group": "cbb369e33298cfeb",
        "order": 4,
        "width": 10,
        "height": 1,
        "passthru": false,
        "outs": "all",
        "topic": "currentValue",
        "topicType": "str",
        "min": "0",
        "max": "50",
        "step": 1,
        "className": "",
        "x": 790,
        "y": 1000,
        "wires": [
            [
                "c2a41e275ecf4f5c",
                "2c13afbda9e52345"
            ]
        ]
    },
    {
        "id": "3d23bd653343df8f",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "triggerin",
        "links": [
            "97d64ebb.eedeb"
        ],
        "x": 95,
        "y": 720,
        "wires": [
            [
                "494dcf060f8953a6"
            ]
        ]
    },
    {
        "id": "c2a41e275ecf4f5c",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 950,
        "y": 1040,
        "wires": [
            [
                "0d170e1b6fd4c30e",
                "cc6d05c65118620c"
            ]
        ]
    },
    {
        "id": "152823c72351c9fd",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "timein",
        "links": [
            "2c13afbda9e52345",
            "0ca55a608cc3687e",
            "b34eebed99433c97",
            "c31b50f7670cb61d",
            "e831a7de1ca333eb",
            "2bf663a53ca7f644",
            "e74b2a1d23886926",
            "c077afd82fb12612",
            "7a765cd7d41b1745",
            "0ca8c09d7cbaeb77",
            "31ebbce3774b619c",
            "f4c8aad646f65aca",
            "9408b8be30e4d1e1",
            "98a121fd8de28a07",
            "1843d3ddde194a97",
            "6c8ac12042ef66cc",
            "0591ba7c899f79a7",
            "a78ed11d5a61eb38",
            "ce62107af64ea46c",
            "af4bc89fa6be7eb4",
            "331566af0f6396ab",
            "277eb99ba931bbbd",
            "1dc7dffde56d50df",
            "77dbd23c0cfe5c0c",
            "c1c9d1585e036f74",
            "67e6cbab14e31052",
            "572ea7f7bbdb519c",
            "3ef7d4b96b8b3e13",
            "cb96ef13fcd94cf9"
        ],
        "x": 95,
        "y": 680,
        "wires": [
            [
                "494dcf060f8953a6"
            ]
        ]
    },
    {
        "id": "0d170e1b6fd4c30e",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Prep string for visu",
        "func": "var timestampSecond = msg.payload.dates[0]+msg.payload.currentValue*10;\n//message body 0 is the start date +10 time the payload 1 because we are in steps of 10 sec\nvar timestampMillisecond = new Date(timestampSecond *1000); \n//inst a new Date obj with ms constructor\ndateString= (timestampMillisecond.toUTCString());\n//dateString= (myDate.toGMTString());\nmsg.datesStartEnd=msg.payload.dates;\nmsg.dateString = dateString;\nmsg.payload =Date.parse(timestampMillisecond);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1040,
        "wires": [
            [
                "efefb3362e012b40",
                "f7ebd85fb66e8ba8"
            ]
        ]
    },
    {
        "id": "efefb3362e012b40",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "group": "cbb369e33298cfeb",
        "order": 5,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "New TLE date",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1360,
        "y": 960,
        "wires": []
    },
    {
        "id": "cb9310778af334ad",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "setpath1-B1",
        "mode": "link",
        "links": [
            "d0db2a049689d1eb"
        ],
        "x": 2125,
        "y": 1040,
        "wires": []
    },
    {
        "id": "21cb21048ea72ed1",
        "type": "ui_slider",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "",
        "label": "Time",
        "tooltip": "Time range",
        "group": "b10e0a54.7b0198",
        "order": 22,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "50",
        "step": 1,
        "x": 510,
        "y": 3020,
        "wires": [
            [
                "f663528e83935a5a",
                "b34eebed99433c97"
            ]
        ]
    },
    {
        "id": "5995f43888228028",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "group": "b10e0a54.7b0198",
        "order": 23,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Date",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 970,
        "y": 3140,
        "wires": []
    },
    {
        "id": "b34eebed99433c97",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 665,
        "y": 3000,
        "wires": []
    },
    {
        "id": "4f58bdb6277957c9",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "Max slider HOME",
        "func": "\nstart = Date.parse(msg.payload.startdate);\nend = Date.parse(msg.payload.enddate);\nmsg = {ui_control:{max:(end-start)/10000}};//10sec step between start date and end date\nmsg.body = [start/1000, end/1000];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 3060,
        "wires": [
            [
                "f663528e83935a5a",
                "21cb21048ea72ed1"
            ]
        ]
    },
    {
        "id": "f663528e83935a5a",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 650,
        "y": 3060,
        "wires": [
            [
                "232f9530e9483fd0",
                "e3a1c188f10c4bad"
            ]
        ]
    },
    {
        "id": "232f9530e9483fd0",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "Time visi",
        "func": "var datecurrent = msg.body[0]+msg.payload[1]*10;\n\nvar myDate = new Date(datecurrent *1000);\ndate= (myDate.toGMTString());\n\nmsg.payload = date\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 3140,
        "wires": [
            [
                "5995f43888228028"
            ]
        ]
    },
    {
        "id": "e3a1c188f10c4bad",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "Preparation",
        "func": "msg = {curr : {max : msg.payload[1]}, ui_control : {max : msg.ui_control.max}, body : {min : msg.body[0]}};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 3060,
        "wires": [
            [
                "2d62d383e359e3e4"
            ]
        ]
    },
    {
        "id": "2d62d383e359e3e4",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 3060,
        "wires": [
            [
                "139d87a61de8fb2d",
                "38021a7090e5c90b"
            ]
        ]
    },
    {
        "id": "139d87a61de8fb2d",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "setpath1-HOME",
        "mode": "link",
        "links": [
            "29a4edb4fa25f4b5",
            "440df756d3e898f2",
            "a58b1046b5db4021",
            "d0db2a049689d1eb"
        ],
        "x": 1675,
        "y": 3060,
        "wires": []
    },
    {
        "id": "029bbc417ee358dc",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "name": "Mongo PeritimeB1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 160,
        "wires": []
    },
    {
        "id": "38021a7090e5c90b",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "to Propagator",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1740,
        "y": 2980,
        "wires": []
    },
    {
        "id": "3c3d942c136c7826",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "name": "query for perigee time",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 140,
        "wires": [
            [
                "7855c24fe1f2a894",
                "10c966ac962761f1",
                "d9a5bc7406abf2fc",
                "3dfe2f2f65db65d6"
            ]
        ]
    },
    {
        "id": "7855c24fe1f2a894",
        "type": "mongodb in",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 1800,
        "y": 160,
        "wires": [
            [
                "029bbc417ee358dc"
            ]
        ]
    },
    {
        "id": "14e9f3349ffe258f",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1280,
        "y": 140,
        "wires": [
            [
                "3c3d942c136c7826"
            ]
        ]
    },
    {
        "id": "10c966ac962761f1",
        "type": "mongodb in",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 1800,
        "y": 120,
        "wires": [
            [
                "a924b29b46320d1c"
            ]
        ]
    },
    {
        "id": "a924b29b46320d1c",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "name": "Mongo PeritimeR1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 120,
        "wires": []
    },
    {
        "id": "574e4c417983ae7a",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "setpath1-R2",
        "mode": "link",
        "links": [
            "29a4edb4fa25f4b5"
        ],
        "x": 2205,
        "y": 2540,
        "wires": []
    },
    {
        "id": "3dfe2f2f65db65d6",
        "type": "mongodb in",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 1800,
        "y": 80,
        "wires": [
            [
                "0a2949f7bc6bbd3f"
            ]
        ]
    },
    {
        "id": "0a2949f7bc6bbd3f",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "name": "Mongo PeritimeR2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 80,
        "wires": []
    },
    {
        "id": "d9a5bc7406abf2fc",
        "type": "mongodb in",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 1800,
        "y": 200,
        "wires": [
            [
                "a9a84e889621e77f"
            ]
        ]
    },
    {
        "id": "a9a84e889621e77f",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "name": "Mongo PeritimeB2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 200,
        "wires": []
    },
    {
        "id": "5ed6f3470a993d7b",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Max slider BLUE 1",
        "func": "\nstart = Date.parse(msg.payload.startdate);\nend = Date.parse(msg.payload.enddate);\n// the dates have to be in ms and we want a 10 sec step so we divide the range by \n// 10000\nmsg = {ui_control:{max:(end-start)/10000}};//10sec step between start date and end date\n//we can set the max of the slide by giving it the input \n// {ui_control:{max:valeur}}\nmsg.body = [start/1000, end/1000];\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1140,
        "wires": [
            [
                "94b1921bd754c60b",
                "15abf54442e621d9"
            ]
        ]
    },
    {
        "id": "94b1921bd754c60b",
        "type": "ui_slider",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "label": "Time Slider Maneuver",
        "tooltip": "Time range",
        "group": "5a7810372552815e",
        "order": 5,
        "width": 10,
        "height": 1,
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "50",
        "step": 1,
        "className": "",
        "x": 740,
        "y": 1100,
        "wires": [
            [
                "15abf54442e621d9",
                "2bf663a53ca7f644"
            ]
        ]
    },
    {
        "id": "15abf54442e621d9",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 1140,
        "wires": [
            [
                "08371a8e834ed3fa"
            ]
        ]
    },
    {
        "id": "2bf663a53ca7f644",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 915,
        "y": 1100,
        "wires": []
    },
    {
        "id": "08371a8e834ed3fa",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Time visi",
        "func": "var datecurrent = msg.body[0]+msg.payload[1]*10;\n\nvar myDate = new Date(datecurrent *1000);\ndate= (myDate.toGMTString());\n\nmsg.dateString= date;\n\nmsg.payload  = datecurrent*1000\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1140,
        "wires": [
            [
                "0f1749dffdc1aa6d",
                "9958904edb2cfd1b"
            ]
        ]
    },
    {
        "id": "0f1749dffdc1aa6d",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "group": "5a7810372552815e",
        "order": 6,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Date",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1150,
        "y": 1120,
        "wires": []
    },
    {
        "id": "9958904edb2cfd1b",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "b1 time setter maneuver OUT",
        "mode": "link",
        "links": [
            "d96813c8d3d9d7b7",
            "d00909eb53b1d325"
        ],
        "x": 1125,
        "y": 1180,
        "wires": []
    },
    {
        "id": "393a1e981904174c",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Time setter blue 1",
        "info": "",
        "x": 2010,
        "y": 920,
        "wires": []
    },
    {
        "id": "01f18e70add9cff6",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "r2 time setter maneuver OUT",
        "mode": "link",
        "links": [
            "bcb457bab790c38d"
        ],
        "x": 1055,
        "y": 2800,
        "wires": []
    },
    {
        "id": "460ef4f0359fa20c",
        "type": "ui_form",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "label": "RED2 TLE setter",
        "group": "d4e830c4b00daeae",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Inclination i (°) [2,4]",
                "value": "incli",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "RAAN Ω (°) [3,4]",
                "value": "raan",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Eccentricity e [7]",
                "value": "ecc",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "AoP ω (°) [3,4]",
                "value": "aop",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Mean Anomaly M [3,4]",
                "value": "meana",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Mean motion N [2,14]",
                "value": "mean",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "incli": "",
            "raan": "",
            "ecc": "",
            "aop": "",
            "meana": "",
            "mean": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "custom-class-node-red-button",
        "x": 370,
        "y": 720,
        "wires": [
            [
                "088b1c5b1d35457e"
            ]
        ]
    },
    {
        "id": "ef3dc7e1d721b2f9",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "blue2-tle-storage",
        "filename": "blue2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 930,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "f1a02d339ab15d13",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "red2-tle-storage",
        "filename": "red2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 920,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "dc5b4ad11e8803c5",
        "type": "ui_text_input",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "label": "B1 Time TLE",
        "tooltip": "",
        "group": "cbb369e33298cfeb",
        "order": 3,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "datetime-local",
        "delay": "0",
        "topic": "timepicker",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 610,
        "y": 920,
        "wires": [
            [
                "f58b20b85a2b8c78",
                "1843d3ddde194a97"
            ]
        ]
    },
    {
        "id": "f51d9a2fa3b7d473",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Slider update",
        "func": "var startDateMilli = Date.parse(msg.payload.dates.startdate);\n\nvar endDateMilli = Date.parse(msg.payload.dates.enddate);\nvar pickedDateMilli = msg.payload.timepicker;\n\nvar sliderPosition = (pickedDateMilli-startDateMilli)/10000;\nmsg.datesStartEnd=[startDateMilli/1000,endDateMilli/1000];\nmsg.payload = sliderPosition;\nmsg.pickedDate = pickedDateMilli;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 960,
        "wires": [
            [
                "141ed3697cd1dfac",
                "93c897bf15c62e48"
            ]
        ]
    },
    {
        "id": "2c13afbda9e52345",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 965,
        "y": 1000,
        "wires": []
    },
    {
        "id": "06cfe774b26c29fa",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "body to payload",
        "rules": [
            {
                "t": "move",
                "p": "body",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "ui_control",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1040,
        "wires": [
            [
                "c2a41e275ecf4f5c"
            ]
        ]
    },
    {
        "id": "f58b20b85a2b8c78",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 750,
        "y": 960,
        "wires": [
            [
                "f51d9a2fa3b7d473",
                "23676e5567207271"
            ]
        ]
    },
    {
        "id": "af796903ae846c21",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 960,
        "wires": [
            [
                "f58b20b85a2b8c78"
            ]
        ]
    },
    {
        "id": "93c897bf15c62e48",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Prep string for visu",
        "func": "\n\nvar timestampMillisecond = new Date(msg.pickedDate); \n\ndateString= (timestampMillisecond.toUTCString());\n\nmsg.dateString = dateString;\nmsg.payload =msg.pickedDate;\n//msg.datesStartEnd=msg.datesStartEnd;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 960,
        "wires": [
            [
                "efefb3362e012b40",
                "f7ebd85fb66e8ba8"
            ]
        ]
    },
    {
        "id": "b003810dbf6c337b",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "B1 time-time-tle-request",
        "links": [
            "27e3cd807b7dd36f"
        ],
        "x": 1305,
        "y": 1120,
        "wires": [
            [
                "e1da563798b90ae6"
            ]
        ]
    },
    {
        "id": "f7ebd85fb66e8ba8",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "B1 Timestamp checker",
        "func": "var TLETimestampSec=msg.payload/1000;\n// convert the timestamp of the new TLE in sec\nvar endDateSec=msg.datesStartEnd[1];\n// extrqct the enddate\nvar aDayinSec=86400;\n// store number of sec in a day\nvar dayBeforeStartSec=msg.datesStartEnd[0]-aDayinSec;\n// compute the time stamp of a day before the startdate\nif(TLETimestampSec>endDateSec){\n    msg.errorMessage=\"TLE date greater than end of sim\";\n    msg.errorFlag=true;\n}\nelse if(!(Number.isInteger(TLETimestampSec))){\n    msg.errorMessage=\"TLE date is note a number\";\n    msg.errorFlag=true;\n}\nelse if(TLETimestampSec<dayBeforeStartSec){\n    msg.errorMessage=\"TLE date too old\";\n    msg.errorFlag=true;\n}\nelse{\n    msg.errorMessage=\"TLE timestamp updated \";\n    msg.errorFlag=false;\n    msg.payload=msg.payload;\n}\n\n//because of the join wait we need to move from msg.payload\n//msg.dateTLE=msg.payload;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1040,
        "wires": [
            [
                "4bbd3c0c495c20c2",
                "871fa62da5d6f2d3"
            ]
        ]
    },
    {
        "id": "4bbd3c0c495c20c2",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "error checker",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1590,
        "y": 1040,
        "wires": [
            [
                "8bab780e92b8d51c",
                "14f42ed5aa544e59"
            ],
            [
                "adef8fa7dbebb37b"
            ]
        ]
    },
    {
        "id": "871fa62da5d6f2d3",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "group": "cbb369e33298cfeb",
        "order": 6,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Date update status:",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1590,
        "y": 1000,
        "wires": []
    },
    {
        "id": "14f42ed5aa544e59",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "blue1-date-storage",
        "filename": "blue1-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1800,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "85cd4e1c9d9c1da6",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2110,
        "y": 1120,
        "wires": [
            [
                "8bab780e92b8d51c"
            ]
        ]
    },
    {
        "id": "adef8fa7dbebb37b",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "blue1-date-storage-out",
        "filename": "blue1-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1940,
        "y": 1120,
        "wires": [
            [
                "85cd4e1c9d9c1da6"
            ]
        ]
    },
    {
        "id": "8bab780e92b8d51c",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1820,
        "y": 1040,
        "wires": [
            [
                "e129837eb4ccaf57"
            ]
        ]
    },
    {
        "id": "2a3a2826f85ab105",
        "type": "complete",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Date updated go",
        "scope": [
            "14f42ed5aa544e59"
        ],
        "uncaught": false,
        "x": 1240,
        "y": 1160,
        "wires": [
            [
                "ea3e20f1e27896c4"
            ]
        ]
    },
    {
        "id": "6af08d975548cc25",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "is from button",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1740,
        "y": 1120,
        "wires": [
            [
                "adef8fa7dbebb37b"
            ]
        ]
    },
    {
        "id": "c72f4568fae52ea3",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1580,
        "y": 1120,
        "wires": [
            [
                "6af08d975548cc25"
            ]
        ]
    },
    {
        "id": "ea3e20f1e27896c4",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "delay=0",
        "func": "msg.delay=0;\nmsg.flush=true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 1160,
        "wires": [
            [
                "c72f4568fae52ea3"
            ]
        ]
    },
    {
        "id": "b25b73d8412b6ddc",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "delay5",
        "func": "msg.delay=5000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1200,
        "wires": [
            [
                "c72f4568fae52ea3"
            ]
        ]
    },
    {
        "id": "e1da563798b90ae6",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "button",
        "func": "msg.payload=\"button\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1120,
        "wires": [
            [
                "c72f4568fae52ea3"
            ]
        ]
    },
    {
        "id": "cc6d05c65118620c",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "dateb1",
        "mode": "link",
        "links": [
            "fc7b43f896ea0de4"
        ],
        "x": 1075,
        "y": 1080,
        "wires": []
    },
    {
        "id": "23676e5567207271",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "dateb1",
        "mode": "link",
        "links": [
            "fc7b43f896ea0de4"
        ],
        "x": 825,
        "y": 920,
        "wires": []
    },
    {
        "id": "fc7b43f896ea0de4",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "dateb1 in",
        "links": [
            "23676e5567207271",
            "cc6d05c65118620c",
            "ae79887d2de014b8"
        ],
        "x": 1305,
        "y": 1200,
        "wires": [
            [
                "b25b73d8412b6ddc"
            ]
        ]
    },
    {
        "id": "19cdc35c8aa36a2d",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "name": "Move to dateTLE",
        "info": "It seems that the parser ignores the object field name that i set earlier in B1 Timestamp checker nameingly \"dateTLE\" it is a problem becquse the date stays in payload and after because of the \"join-wait\" it will be erased",
        "x": 2000,
        "y": 1200,
        "wires": []
    },
    {
        "id": "13f24bd28d6f61be",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "name": "Json 02/05/23",
        "info": "I try to use a parser to write the time stamp in the date-storage file as a json string because i think it explains the field changes ",
        "x": 2030,
        "y": 840,
        "wires": []
    },
    {
        "id": "b13f26ebfd29f450",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "name": "removed after json up left",
        "info": "",
        "x": 2030,
        "y": 1240,
        "wires": []
    },
    {
        "id": "e129837eb4ccaf57",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 1040,
        "wires": [
            [
                "cb9310778af334ad"
            ]
        ]
    },
    {
        "id": "494dcf060f8953a6",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 100,
        "y": 840,
        "wires": [
            [
                "d60bc19a3bf147c0"
            ]
        ]
    },
    {
        "id": "d60bc19a3bf147c0",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 150,
        "y": 880,
        "wires": [
            [
                "4f58bdb6277957c9",
                "770a98795c591195"
            ]
        ]
    },
    {
        "id": "2072d02e.cd2d4",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "Time-Setter-Out2",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d"
        ],
        "x": 655,
        "y": 240,
        "wires": []
    },
    {
        "id": "d2005c55.4ffd3",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "Set path_8",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_8",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 240,
        "wires": [
            [
                "2072d02e.cd2d4",
                "844dc894dbd219b5"
            ]
        ]
    },
    {
        "id": "4be84d73.e987b4",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "sortie persist",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 480,
        "y": 300,
        "wires": []
    },
    {
        "id": "d3182296.0de68",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "triggerin",
        "links": [
            "97d64ebb.eedeb"
        ],
        "x": 165,
        "y": 300,
        "wires": [
            [
                "20e12284ea245aef"
            ]
        ]
    },
    {
        "id": "8d74ca2b.7c5e38",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "time",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 440,
        "y": 160,
        "wires": []
    },
    {
        "id": "39db62d0.356f5e",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "MACHINE DEPENDENCE",
        "info": "time-persistence.json\n",
        "x": 480,
        "y": 80,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "957fd7c.e6c7828",
        "type": "ui_form",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "label": "Time Setter",
        "group": "3dabe8df.a10df8",
        "order": 7,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Start Date",
                "value": "startdate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "End Date",
                "value": "enddate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startdate": "",
            "enddate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 260,
        "y": 160,
        "wires": [
            [
                "8d74ca2b.7c5e38",
                "8755a720eb60c55f"
            ]
        ]
    },
    {
        "id": "220556fdf5358e27",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "TLE Update time request",
        "links": [
            "27e3cd807b7dd36f",
            "5bf00d0b73be675b",
            "bc9a8d46d71b2c0a",
            "bd8de8502f02c463",
            "db7e42c1aee637bd",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6"
        ],
        "x": 165,
        "y": 220,
        "wires": [
            [
                "20e12284ea245aef"
            ]
        ]
    },
    {
        "id": "451c5be989d9294c",
        "type": "ui_form",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "label": "BLUE1 TLE setter",
        "group": "cbb369e33298cfeb",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Inclination i (°) [2,4]",
                "value": "incli",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "RAAN Ω (°) [3,4]",
                "value": "raan",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Eccentricity e [7]",
                "value": "ecc",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "AoP ω (°) [3,4]",
                "value": "aop",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Mean Anomaly M [3,4]",
                "value": "meana",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Mean motion N [2,14]",
                "value": "mean",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "incli": "",
            "raan": "",
            "ecc": "",
            "aop": "",
            "meana": "",
            "mean": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 370,
        "y": 460,
        "wires": [
            [
                "02d6f47bfaedd5f8"
            ]
        ]
    },
    {
        "id": "8755a720eb60c55f",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 490,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "dcabc7e9b475cd6d",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "blue1-tle-storage",
        "filename": "blue1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 930,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "3cd463b18e414c52",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 690,
        "y": 40,
        "wires": [
            [
                "2ee441367340e50a"
            ]
        ]
    },
    {
        "id": "2ee441367340e50a",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 860,
        "y": 40,
        "wires": [
            [
                "93d6ced5d286773b"
            ]
        ]
    },
    {
        "id": "2806b3dc1156fe5a",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "3cd463b18e414c52"
            ]
        ]
    },
    {
        "id": "aaf05bae2b29d885",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "04/05/23",
        "info": "Deco pour test sans persist",
        "x": 610,
        "y": 120,
        "wires": []
    },
    {
        "id": "93d6ced5d286773b",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "unwrap",
        "func": "msg.payload=msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "20e12284ea245aef",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "9f05f084ce0ae8be"
            ]
        ]
    },
    {
        "id": "9f05f084ce0ae8be",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 300,
        "y": 300,
        "wires": [
            [
                "d2005c55.4ffd3",
                "4be84d73.e987b4"
            ]
        ]
    },
    {
        "id": "99ee3d83f0302c37",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "insure the tle format is respected",
        "func": "\n//msg.payload.incli=msg.payload.incli.toLocaleString('fr-FR',{minimumSignificantDigits: 6, maximumSignificantDigits: 7, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.incli = Intl.NumberFormat(undefined, {minimumSignificantDigits: 2, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.incli);\n//msg.payload.raan= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.raan);\n//msg.payload.raan=msg.payload.raan.toLocaleString('fr-FR',{minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.ecc=Intl.NumberFormat(undefined,{minimumSignificantDigits: 7, maximumFractionDigits: 0}).format(msg.payload.ecc);\n//msg.payload.aop= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.aop);\n//msg.payload.meana= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.meana);\n//msg.payload.mean=Intl.NumberFormat(undefined,{minimumSignificantDigits: 2, maximumSignificantDigits: 2, minimumFractionDigits: 14, maximumFractionDigits: 14}).format(msg.payload.mean)\nvar minimalEcc =0.0000001;\nvar eccFormat =10000000;\nmsg.payload.incli=Number(msg.payload.incli).toFixed(4);\nmsg.payload.incli=msg.payload.incli.padStart(8,'0');\nmsg.payload.raan=Number(msg.payload.raan).toFixed(4);\nmsg.payload.raan=msg.payload.raan.padStart(8,'0');\nmsg.payload.ecc=Number(msg.payload.ecc);\nif(msg.payload.ecc<minimalEcc){\n    msg.payload.ecc=msg.payload.ecc+minimalEcc;\n}\n//150523 Ajout des Numb() et String() pour l ecc\nmsg.payload.ecc=(msg.payload.ecc*eccFormat)\nmsg.payload.ecc=(msg.payload.ecc).toFixed(0);\n//150523 supression de la parti decimal par securité\nmsg.payload.ecc=String(msg.payload.ecc).padStart(7,'0');\n//150523 We erased the test in TLE 2 edit so we need to have\n//inc at a fixed 8 char for that reason we changed the pad 7->8\nmsg.payload.aop= Number(msg.payload.aop).toFixed(4);\nmsg.payload.aop= msg.payload.aop.padStart(8,'0');\nmsg.payload.meana= Number(msg.payload.meana).toFixed(4);\nmsg.payload.meana= msg.payload.meana.padStart(8,'0');\nmsg.payload.mean= Number(msg.payload.mean).toFixed(14);\nmsg.payload.mean= msg.payload.mean.padStart(17,'0');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 460,
        "wires": [
            [
                "957e182059950b33",
                "060259ab7d13bac7",
                "2b24ea015282a48a"
            ]
        ]
    },
    {
        "id": "d32b325c8b1fc9af",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "to TLE visualizer B1",
        "mode": "link",
        "links": [
            "593a52079dbca503"
        ],
        "x": 715,
        "y": 500,
        "wires": []
    },
    {
        "id": "eff4798c71085513",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "from TLE visu",
        "links": [
            "14d7295f97317f5a"
        ],
        "x": 795,
        "y": 500,
        "wires": [
            [
                "dcabc7e9b475cd6d"
            ]
        ]
    },
    {
        "id": "02d6f47bfaedd5f8",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "test TLE sanity",
        "func": "if(msg.payload.incli>180 || msg.payload.incli<0){\n    msg.errorMessage=\"Error inclination out of bounds i E [0;180]\"}\n    \nelse if (msg.payload.raan>360 || msg.payload.raan<0){\n    msg.errorMessage=\"Error RAAN out of bounds RAAN E [0;180]\"}\n    \nelse if (msg.payload.aop>360 || msg.payload.aop<0){\n    msg.errorMessage=\"Error Argument of perigee out of bounds AoP E [0;360]\"}\n    \nelse if (msg.payload.meana>360 || msg.payload.meana<0){\n    msg.errorMessage=\"Error mean anomaly out of bounds M E [0;360]\"}\n    \nelse if (msg.payload.ecc>1 || msg.payload.ecc<0){\n    msg.errorMessage=\"Error eccentricity out of bounds e E [0;1]\"}\nelse if (msg.payload.mean>16.42 || msg.payload.mean<0){\n    msg.errorMessage=\"Error Mean motion out of bounds N E [0;16.42]\"}\n    else{msg.errorMessage=\"TLE Accepted\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 460,
        "wires": [
            [
                "99ee3d83f0302c37"
            ]
        ]
    },
    {
        "id": "957e182059950b33",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "property": "errorMessage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "TLE Accepted",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 500,
        "wires": [
            [
                "d32b325c8b1fc9af"
            ],
            []
        ]
    },
    {
        "id": "060259ab7d13bac7",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "group": "cbb369e33298cfeb",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "TLE check",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 460,
        "wires": []
    },
    {
        "id": "48a92cf63a85120a",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "test TLE sanity",
        "func": "if(msg.payload.incli>180 || msg.payload.incli<0){\n    msg.errorMessage=\"Error inclination out of bounds i E [0;180]\"}\n    \nelse if (msg.payload.raan>360 || msg.payload.raan<0){\n    msg.errorMessage=\"Error RAAN out of bounds RAAN E [0;180]\"}\n    \nelse if (msg.payload.aop>360 || msg.payload.aop<0){\n    msg.errorMessage=\"Error Argument of perigee out of bounds AoP E [0;360]\"}\n    \nelse if (msg.payload.meana>360 || msg.payload.meana<0){\n    msg.errorMessage=\"Error mean anomaly out of bounds M E [0;360]\"}\n    \nelse if (msg.payload.ecc>1 || msg.payload.ecc<0){\n    msg.errorMessage=\"Error eccentricity out of bounds e E [0;1]\"}\nelse if (msg.payload.mean>16.42 || msg.payload.mean<0){\n    msg.errorMessage=\"Error Mean motion out of bounds N E [0;16.42]\"}\n    else{msg.errorMessage=\"TLE Accepted\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 560,
        "wires": [
            [
                "cb8980db9babe5c0"
            ]
        ]
    },
    {
        "id": "cb8980db9babe5c0",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "insure the tle format is respected",
        "func": "\n//msg.payload.incli=msg.payload.incli.toLocaleString('fr-FR',{minimumSignificantDigits: 6, maximumSignificantDigits: 7, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.incli = Intl.NumberFormat(undefined, {minimumSignificantDigits: 2, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.incli);\n//msg.payload.raan= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.raan);\n//msg.payload.raan=msg.payload.raan.toLocaleString('fr-FR',{minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.ecc=Intl.NumberFormat(undefined,{minimumSignificantDigits: 7, maximumFractionDigits: 0}).format(msg.payload.ecc);\n//msg.payload.aop= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.aop);\n//msg.payload.meana= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.meana);\n//msg.payload.mean=Intl.NumberFormat(undefined,{minimumSignificantDigits: 2, maximumSignificantDigits: 2, minimumFractionDigits: 14, maximumFractionDigits: 14}).format(msg.payload.mean)\nvar minimalEcc =0.0000001;\nvar eccFormat =10000000;\nmsg.payload.incli=Number(msg.payload.incli).toFixed(4);\nmsg.payload.incli=msg.payload.incli.padStart(8,'0');\nmsg.payload.raan=Number(msg.payload.raan).toFixed(4);\nmsg.payload.raan=msg.payload.raan.padStart(8,'0');\nmsg.payload.ecc=Number(msg.payload.ecc);\nif(msg.payload.ecc<minimalEcc){\n    msg.payload.ecc=msg.payload.ecc+minimalEcc;\n}\n//150523 Ajout des Numb() et String() pour l ecc\nmsg.payload.ecc=(msg.payload.ecc*eccFormat)\nmsg.payload.ecc=(msg.payload.ecc).toFixed(0);\n//150523 supression de la parti decimal par securité\nmsg.payload.ecc=String(msg.payload.ecc).padStart(7,'0');\n//150523 We erased the test in TLE 2 edit so we need to have\n//inc at a fixed 8 char for that reason we changed the pad 7->8\nmsg.payload.aop= Number(msg.payload.aop).toFixed(4);\nmsg.payload.aop= msg.payload.aop.padStart(8,'0');\nmsg.payload.meana= Number(msg.payload.meana).toFixed(4);\nmsg.payload.meana= msg.payload.meana.padStart(8,'0');\nmsg.payload.mean= Number(msg.payload.mean).toFixed(14);\nmsg.payload.mean= msg.payload.mean.padStart(17,'0');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 560,
        "wires": [
            [
                "c14e2956fb7324a5",
                "ede8891b57271a85",
                "40a6d644acf51561",
                "c8396e397cfe2fbb"
            ]
        ]
    },
    {
        "id": "c14e2956fb7324a5",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "group": "81d0e5ee7c52f38a",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "TLE check",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 560,
        "wires": []
    },
    {
        "id": "4c61af07d5440b24",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "group": "c02dcce485dfb187",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "TLE check",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 640,
        "wires": []
    },
    {
        "id": "5077a8cd215dacf8",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "group": "d4e830c4b00daeae",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "TLE check",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 720,
        "wires": []
    },
    {
        "id": "a84ab3f7542dc7d7",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "Max slider BLUE 2",
        "func": "\nstart = Date.parse(msg.payload.startdate);\nend = Date.parse(msg.payload.enddate);\nmsg={ui_control: {max:(end-start)/10000} , body: [start/1000, end/1000], topic:\"dates\" };//10sec step between start date and end date\n//msg = {ui_control:{\"min\":0, \"max\":(end-start)/10000}}\n//msg.body = [start/1000, end/1000];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1540,
        "wires": [
            [
                "638f737ddc095845",
                "feaf23544b13a5e8"
            ]
        ]
    },
    {
        "id": "59f0af37772f7809",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 910,
        "y": 1540,
        "wires": [
            [
                "75898c448da41d9b",
                "f80fbb75ac931adb"
            ]
        ]
    },
    {
        "id": "75898c448da41d9b",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "Prep string for visu",
        "func": "var timestampSecond = msg.payload.dates[0]+msg.payload.currentValue*10;\n//message body 0 is the start date +10 time the payload 1 because we are in steps of 10 sec\nvar timestampMillisecond = new Date(timestampSecond *1000); \n//inst a new Date obj with ms constructor\ndateString= (timestampMillisecond.toUTCString());\n//dateString= (myDate.toGMTString());\nmsg.datesStartEnd=msg.payload.dates;\nmsg.dateString = dateString;\nmsg.payload =Date.parse(timestampMillisecond);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1540,
        "wires": [
            [
                "1bcdc463107e2623",
                "d5b6f460e058c367"
            ]
        ]
    },
    {
        "id": "0459a753baf9804e",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "Max slider BLUE 2",
        "func": "\nstart = Date.parse(msg.payload.startdate);\nend = Date.parse(msg.payload.enddate);\n// the dates have to be in ms and we want a 10 sec step so we divide the range by \n// 10000\nmsg = {ui_control:{max:(end-start)/10000}};//10sec step between start date and end date\n//we can set the max of the slide by giving it the input \n// {ui_control:{max:valeur}}\nmsg.body = [start/1000, end/1000];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1660,
        "wires": [
            [
                "9a557e78e282adf5",
                "f3f0e7784b20d802",
                "bdcf206d83036e87"
            ]
        ]
    },
    {
        "id": "9a557e78e282adf5",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 830,
        "y": 1640,
        "wires": [
            [
                "d3c05f7d483838d3"
            ]
        ]
    },
    {
        "id": "9408b8be30e4d1e1",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 915,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d3c05f7d483838d3",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "Time visi",
        "func": "var datecurrent = msg.body[0]+msg.payload[1]*10;\n\nvar myDate = new Date(datecurrent *1000);\ndate= (myDate.toUTCString());\n\nmsg.dateString= date;\n\nmsg.payload  = datecurrent*1000\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1640,
        "wires": [
            [
                "5380ca71e906d654",
                "655c0e8355008133"
            ]
        ]
    },
    {
        "id": "5380ca71e906d654",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "b2 time setter maneuver OUT",
        "mode": "link",
        "links": [
            "4bfd62750d6233be"
        ],
        "x": 1075,
        "y": 1680,
        "wires": []
    },
    {
        "id": "4fe261bcde86207b",
        "type": "ui_text_input",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "",
        "label": "B2 Time TLE",
        "tooltip": "",
        "group": "81d0e5ee7c52f38a",
        "order": 3,
        "width": 15,
        "height": 1,
        "passthru": true,
        "mode": "datetime-local",
        "delay": "0",
        "topic": "timepicker",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 570,
        "y": 1420,
        "wires": [
            [
                "398243434e303641",
                "6c8ac12042ef66cc"
            ]
        ]
    },
    {
        "id": "0382aa483506bf85",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "Slider update",
        "func": "var startDateMilli = Date.parse(msg.payload.dates.startdate);\n\nvar endDateMilli = Date.parse(msg.payload.dates.enddate);\nvar pickedDateMilli = msg.payload.timepicker;\n\nvar sliderPosition = (pickedDateMilli-startDateMilli)/10000;\nmsg.datesStartEnd=[startDateMilli/1000,endDateMilli/1000];\nmsg.payload = sliderPosition;\nmsg.pickedDate = pickedDateMilli;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1460,
        "wires": [
            [
                "6b0e97aea0b6c13f",
                "feaf23544b13a5e8"
            ]
        ]
    },
    {
        "id": "98a121fd8de28a07",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 945,
        "y": 1500,
        "wires": []
    },
    {
        "id": "638f737ddc095845",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "body to payload",
        "rules": [
            {
                "t": "move",
                "p": "body",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "ui_control",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1540,
        "wires": [
            [
                "59f0af37772f7809"
            ]
        ]
    },
    {
        "id": "398243434e303641",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 710,
        "y": 1460,
        "wires": [
            [
                "0382aa483506bf85",
                "ee322054c8b52c91"
            ]
        ]
    },
    {
        "id": "a6a08c4c60e3b076",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1460,
        "wires": [
            [
                "398243434e303641"
            ]
        ]
    },
    {
        "id": "6b0e97aea0b6c13f",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "Prep string for visu",
        "func": "\n\nvar timestampMillisecond = new Date(msg.pickedDate); \n\ndateString= (timestampMillisecond.toUTCString());\n\nmsg.dateString = dateString;\nmsg.payload =msg.pickedDate;\n//msg.datesStartEnd=msg.datesStartEnd;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1460,
        "wires": [
            [
                "1bcdc463107e2623",
                "d5b6f460e058c367"
            ]
        ]
    },
    {
        "id": "56b381ee693e862d",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "B2  time-time-tle-request",
        "links": [
            "5bf00d0b73be675b"
        ],
        "x": 1215,
        "y": 1600,
        "wires": [
            [
                "4e01a7fd7c89227b"
            ]
        ]
    },
    {
        "id": "1bcdc463107e2623",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "B2 Timestamp checker",
        "func": "var TLETimestampSec=msg.payload/1000;\n// convert the timestamp of the new TLE in sec\nvar endDateSec=msg.datesStartEnd[1];\n// extrqct the enddate\nvar aDayinSec=86400;\n// store number of sec in a day\nvar dayBeforeStartSec=msg.datesStartEnd[0]-aDayinSec;\n// compute the time stamp of a day before the startdate\nif(TLETimestampSec>endDateSec){\n    msg.errorMessage=\"TLE date greater than end of sim\";\n    msg.errorFlag=true;\n}\nelse if(!(Number.isInteger(TLETimestampSec))){\n    msg.errorMessage=\"TLE date is note a number\";\n    msg.errorFlag=true;\n}\nelse if(TLETimestampSec<dayBeforeStartSec){\n    msg.errorMessage=\"TLE date too old\";\n    msg.errorFlag=true;\n}\nelse{\n    msg.errorMessage=\"TLE timestamp updated \";\n    msg.errorFlag=false;\n    msg.payload=msg.payload;\n}\n\n//because of the join wait we need to move from msg.payload\n//msg.dateTLE=msg.payload;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1540,
        "wires": [
            [
                "422b4ba538b856bb",
                "93819bb8e14795f6"
            ]
        ]
    },
    {
        "id": "422b4ba538b856bb",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "error checker",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1530,
        "y": 1540,
        "wires": [
            [
                "36ef89910aa71044",
                "96ca05303ead4be4",
                "1fffd5617ac64ef6"
            ],
            [
                "20fe3cf00d6d8d74"
            ]
        ]
    },
    {
        "id": "93819bb8e14795f6",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "group": "81d0e5ee7c52f38a",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Date update status:",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1550,
        "y": 1480,
        "wires": []
    },
    {
        "id": "96ca05303ead4be4",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "blue2-date-storage",
        "filename": "blue2-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1770,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "628c6a08a412dafb",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2030,
        "y": 1600,
        "wires": [
            [
                "36ef89910aa71044"
            ]
        ]
    },
    {
        "id": "20fe3cf00d6d8d74",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "blue2-date-storage-out",
        "filename": "blue2-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1860,
        "y": 1600,
        "wires": [
            [
                "628c6a08a412dafb"
            ]
        ]
    },
    {
        "id": "36ef89910aa71044",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 1540,
        "wires": [
            [
                "b2248e50a89f65dd"
            ]
        ]
    },
    {
        "id": "45de4882c5a79210",
        "type": "complete",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "Date updated go",
        "scope": [
            "96ca05303ead4be4"
        ],
        "uncaught": false,
        "x": 1140,
        "y": 1640,
        "wires": [
            [
                "10b7e2efcf4bceed"
            ]
        ]
    },
    {
        "id": "b02d6627d083eda4",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "is from button",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1660,
        "y": 1600,
        "wires": [
            [
                "20fe3cf00d6d8d74",
                "913450b2c67760a2"
            ]
        ]
    },
    {
        "id": "50baedb79c837b7a",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1490,
        "y": 1600,
        "wires": [
            [
                "b02d6627d083eda4"
            ]
        ]
    },
    {
        "id": "10b7e2efcf4bceed",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "delay=0",
        "func": "msg.delay=0;\nmsg.flush=true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1640,
        "wires": [
            [
                "50baedb79c837b7a"
            ]
        ]
    },
    {
        "id": "6145fb925045db76",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "delay5",
        "func": "msg.delay=5000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1680,
        "wires": [
            [
                "50baedb79c837b7a"
            ]
        ]
    },
    {
        "id": "4e01a7fd7c89227b",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "button",
        "func": "msg.payload=\"button\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1600,
        "wires": [
            [
                "50baedb79c837b7a"
            ]
        ]
    },
    {
        "id": "f80fbb75ac931adb",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "dateb2",
        "mode": "link",
        "links": [
            "a73e597c386ed559"
        ],
        "x": 1015,
        "y": 1580,
        "wires": []
    },
    {
        "id": "ee322054c8b52c91",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "dateb2",
        "mode": "link",
        "links": [
            "a73e597c386ed559"
        ],
        "x": 815,
        "y": 1420,
        "wires": []
    },
    {
        "id": "a73e597c386ed559",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "dateb2 in",
        "links": [
            "ee322054c8b52c91",
            "f80fbb75ac931adb"
        ],
        "x": 1215,
        "y": 1680,
        "wires": [
            [
                "6145fb925045db76"
            ]
        ]
    },
    {
        "id": "b2248e50a89f65dd",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 1540,
        "wires": [
            [
                "8f235a4905cf2bd5"
            ]
        ]
    },
    {
        "id": "8f235a4905cf2bd5",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "setpath1-B2",
        "mode": "link",
        "links": [
            "440df756d3e898f2"
        ],
        "x": 2075,
        "y": 1540,
        "wires": []
    },
    {
        "id": "feaf23544b13a5e8",
        "type": "ui_slider",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "",
        "label": "Time Slider TLE UPDATE",
        "tooltip": "Time range",
        "group": "81d0e5ee7c52f38a",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "currentValue",
        "topicType": "str",
        "min": "0",
        "max": "50",
        "step": 1,
        "className": "",
        "x": 750,
        "y": 1500,
        "wires": [
            [
                "98a121fd8de28a07",
                "59f0af37772f7809"
            ]
        ]
    },
    {
        "id": "f3f0e7784b20d802",
        "type": "ui_slider",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "",
        "label": "Time Slider Maneuver",
        "tooltip": "Time range",
        "group": "1756cdc52869c611",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "50",
        "step": 1,
        "className": "",
        "x": 740,
        "y": 1600,
        "wires": [
            [
                "9a557e78e282adf5",
                "9408b8be30e4d1e1"
            ]
        ]
    },
    {
        "id": "1843d3ddde194a97",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 725,
        "y": 920,
        "wires": []
    },
    {
        "id": "6c8ac12042ef66cc",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 675,
        "y": 1420,
        "wires": []
    },
    {
        "id": "655c0e8355008133",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "group": "1756cdc52869c611",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Date",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1090,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d5b6f460e058c367",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "group": "81d0e5ee7c52f38a",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "New TLE date:",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1320,
        "y": 1460,
        "wires": []
    },
    {
        "id": "770a98795c591195",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "name": "FROM TIME PERSITENCE",
        "mode": "link",
        "links": [
            "4e8702575833e6dc",
            "d1724687d9c4c3ec",
            "1054fc71f09cdbc3",
            "a6c1e74ca5e04589"
        ],
        "x": 245,
        "y": 880,
        "wires": []
    },
    {
        "id": "4e8702575833e6dc",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "FROM TIME PERSISTENCE IN",
        "links": [
            "770a98795c591195"
        ],
        "x": 375,
        "y": 1580,
        "wires": [
            [
                "a6a08c4c60e3b076",
                "a84ab3f7542dc7d7",
                "0459a753baf9804e",
                "4bbfbf595e7501c0"
            ]
        ]
    },
    {
        "id": "d1724687d9c4c3ec",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "FROM TIME PERSISTENCE IN",
        "links": [
            "770a98795c591195"
        ],
        "x": 435,
        "y": 1040,
        "wires": [
            [
                "af796903ae846c21",
                "d9e846e0881012e5",
                "5ed6f3470a993d7b",
                "e3144d94fa7f4289"
            ]
        ]
    },
    {
        "id": "1fffd5617ac64ef6",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "test time setterb2 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 1460,
        "wires": []
    },
    {
        "id": "7de2968a8e624b25",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "test time setterb2 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 1260,
        "wires": []
    },
    {
        "id": "bdcf206d83036e87",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "test time setterb2 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 1760,
        "wires": []
    },
    {
        "id": "913450b2c67760a2",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "test time setterb2 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1870,
        "y": 1700,
        "wires": []
    },
    {
        "id": "ede8891b57271a85",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "property": "errorMessage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "TLE Accepted",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 600,
        "wires": [
            [
                "93d678661c5d817a"
            ],
            []
        ]
    },
    {
        "id": "93d678661c5d817a",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "to TLE visualizer B2",
        "mode": "link",
        "links": [
            "615ee30217f7cb03"
        ],
        "x": 715,
        "y": 600,
        "wires": []
    },
    {
        "id": "491df3b4c3bf3409",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "from TLE visu b2",
        "links": [
            "7c09800c74235140"
        ],
        "x": 795,
        "y": 600,
        "wires": [
            [
                "ef3dc7e1d721b2f9",
                "a9e1c7b8b8ba82b1"
            ]
        ]
    },
    {
        "id": "1804efc1087bda5e",
        "type": "ui_text_input",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "label": "B1 Time Manoeuver",
        "tooltip": "",
        "group": "5a7810372552815e",
        "order": 4,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "datetime-local",
        "delay": "0",
        "topic": "timepicker",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 400,
        "y": 1180,
        "wires": [
            [
                "7de2968a8e624b25",
                "fa1aab6e4e36588a"
            ]
        ]
    },
    {
        "id": "3bfc0f2ba6c05001",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Slider update",
        "func": "var startDateMilli = Date.parse(msg.payload.dates.startdate);\n\nvar endDateMilli = Date.parse(msg.payload.dates.enddate);\nvar pickedDateMilli = msg.payload.timepicker;\n\nvar sliderPosition = (pickedDateMilli-startDateMilli)/10000;\nmsg.datesStartEnd=[startDateMilli/1000,endDateMilli/1000];\nmsg.payload = sliderPosition;\nmsg.pickedDate = pickedDateMilli;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1220,
        "wires": [
            [
                "94b1921bd754c60b",
                "adc095e9c8bedc11"
            ]
        ]
    },
    {
        "id": "13569978a3569fd7",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 750,
        "y": 1220,
        "wires": [
            [
                "3bfc0f2ba6c05001"
            ]
        ]
    },
    {
        "id": "e3144d94fa7f4289",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1220,
        "wires": [
            [
                "13569978a3569fd7"
            ]
        ]
    },
    {
        "id": "0591ba7c899f79a7",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 725,
        "y": 1180,
        "wires": []
    },
    {
        "id": "adc095e9c8bedc11",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Prep string for visu",
        "func": "\n\nvar timestampMillisecond = new Date(msg.pickedDate); \n\ndateString= (timestampMillisecond.toUTCString());\n\nmsg.dateString = dateString;\nmsg.payload =msg.pickedDate;\n//msg.datesStartEnd=msg.datesStartEnd;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1260,
        "wires": [
            [
                "0f1749dffdc1aa6d",
                "9958904edb2cfd1b"
            ]
        ]
    },
    {
        "id": "6de4b497a2c76f7c",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 1110,
        "y": 1220,
        "wires": []
    },
    {
        "id": "371e83f16c99d88f",
        "type": "ui_text_input",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "",
        "label": "B2 Time Manoeuver",
        "tooltip": "",
        "group": "1756cdc52869c611",
        "order": 2,
        "width": 15,
        "height": 1,
        "passthru": true,
        "mode": "datetime-local",
        "delay": "0",
        "topic": "timepicker",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 400,
        "y": 1700,
        "wires": [
            [
                "348f2fc735a457f3"
            ]
        ]
    },
    {
        "id": "4bbfbf595e7501c0",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1740,
        "wires": [
            [
                "eb65e451b5859e1f"
            ]
        ]
    },
    {
        "id": "ce62107af64ea46c",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 695,
        "y": 1700,
        "wires": []
    },
    {
        "id": "eb65e451b5859e1f",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 730,
        "y": 1740,
        "wires": [
            [
                "fd2e07415eb92a59"
            ]
        ]
    },
    {
        "id": "fd2e07415eb92a59",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "Slider update",
        "func": "var startDateMilli = Date.parse(msg.payload.dates.startdate);\n\nvar endDateMilli = Date.parse(msg.payload.dates.enddate);\nvar pickedDateMilli = msg.payload.timepicker;\n\nvar sliderPosition = (pickedDateMilli-startDateMilli)/10000;\nmsg.datesStartEnd=[startDateMilli/1000,endDateMilli/1000];\nmsg.payload = sliderPosition;\nmsg.pickedDate = pickedDateMilli;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1740,
        "wires": [
            [
                "8a0e268904d232b4",
                "f3f0e7784b20d802"
            ]
        ]
    },
    {
        "id": "8a0e268904d232b4",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": "Prep string for visu",
        "func": "\n\nvar timestampMillisecond = new Date(msg.pickedDate); \n\ndateString= (timestampMillisecond.toUTCString());\n\nmsg.dateString = dateString;\nmsg.payload = msg.pickedDate;\n//msg.datesStartEnd=msg.datesStartEnd;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1780,
        "wires": [
            [
                "655c0e8355008133",
                "5380ca71e906d654"
            ]
        ]
    },
    {
        "id": "4ff5f137bfdc5a22",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "Max slider RED1",
        "func": "\nstart = Date.parse(msg.payload.startdate);\nend = Date.parse(msg.payload.enddate);\nmsg={ui_control: {max:(end-start)/10000} , body: [start/1000, end/1000], topic:\"dates\" };//10sec step between start date and end date\n//msg = {ui_control:{\"min\":0, \"max\":(end-start)/10000}}\n//msg.body = [start/1000, end/1000];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2060,
        "wires": [
            [
                "4249508a88e4e54b",
                "d85d77d25fc56aee"
            ]
        ]
    },
    {
        "id": "040d30245b16c5f6",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 2060,
        "wires": [
            [
                "68e75b3afc4a1b2e",
                "37344c7ff017b179"
            ]
        ]
    },
    {
        "id": "68e75b3afc4a1b2e",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "Prep string for visu",
        "func": "var timestampSecond = msg.payload.dates[0]+msg.payload.currentValue*10;\n//message body 0 is the start date +10 time the payload 1 because we are in steps of 10 sec\nvar timestampMillisecond = new Date(timestampSecond *1000); \n//inst a new Date obj with ms constructor\ndateString= (timestampMillisecond.toUTCString());\n//dateString= (myDate.toGMTString());\nmsg.datesStartEnd=msg.payload.dates;\nmsg.dateString = dateString;\nmsg.payload =Date.parse(timestampMillisecond);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 2060,
        "wires": [
            [
                "1f88c01d828d2bf6",
                "a393ec95bc59b0a7"
            ]
        ]
    },
    {
        "id": "e09f86134bef0309",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "Max slider RED1",
        "func": "\nstart = Date.parse(msg.payload.startdate);\nend = Date.parse(msg.payload.enddate);\n// the dates have to be in ms and we want a 10 sec step so we divide the range by \n// 10000\nmsg = {ui_control:{max:(end-start)/10000}};//10sec step between start date and end date\n//we can set the max of the slide by giving it the input \n// {ui_control:{max:valeur}}\nmsg.body = [start/1000, end/1000];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2160,
        "wires": [
            [
                "30ae118bd0a59ff3",
                "078eb6a97ad6c8bb"
            ]
        ]
    },
    {
        "id": "30ae118bd0a59ff3",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 790,
        "y": 2160,
        "wires": [
            [
                "dba8813876f0d0ca"
            ]
        ]
    },
    {
        "id": "277eb99ba931bbbd",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 875,
        "y": 2120,
        "wires": []
    },
    {
        "id": "dba8813876f0d0ca",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "Time visi",
        "func": "var datecurrent = msg.body[0]+msg.payload[1]*10;\n\nvar myDate = new Date(datecurrent *1000);\ndate= (myDate.toGMTString());\n\nmsg.dateString= date;\n\nmsg.payload  = datecurrent*1000\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2160,
        "wires": [
            [
                "1e542c2b5c054796",
                "a942a9a6bfafa8b4"
            ]
        ]
    },
    {
        "id": "9e27c070e912be54",
        "type": "ui_text_input",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "",
        "label": "R1 Time TLE",
        "tooltip": "",
        "group": "c02dcce485dfb187",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "datetime-local",
        "delay": "0",
        "topic": "timepicker",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 530,
        "y": 1940,
        "wires": [
            [
                "30da78f88f2fc950",
                "77dbd23c0cfe5c0c"
            ]
        ]
    },
    {
        "id": "84d4dab13d9299f7",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "Slider update",
        "func": "var startDateMilli = Date.parse(msg.payload.dates.startdate);\n\nvar endDateMilli = Date.parse(msg.payload.dates.enddate);\nvar pickedDateMilli = msg.payload.timepicker;\n\nvar sliderPosition = (pickedDateMilli-startDateMilli)/10000;\nmsg.datesStartEnd=[startDateMilli/1000,endDateMilli/1000];\nmsg.payload = sliderPosition;\nmsg.pickedDate = pickedDateMilli;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1980,
        "wires": [
            [
                "c287e551330adea5",
                "d85d77d25fc56aee"
            ]
        ]
    },
    {
        "id": "1dc7dffde56d50df",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 905,
        "y": 2020,
        "wires": []
    },
    {
        "id": "4249508a88e4e54b",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "body to payload",
        "rules": [
            {
                "t": "move",
                "p": "body",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "ui_control",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 2060,
        "wires": [
            [
                "040d30245b16c5f6"
            ]
        ]
    },
    {
        "id": "30da78f88f2fc950",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 670,
        "y": 1980,
        "wires": [
            [
                "84d4dab13d9299f7",
                "ea518f9a0cf28767"
            ]
        ]
    },
    {
        "id": "a7c6d6ea84154338",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 1980,
        "wires": [
            [
                "30da78f88f2fc950"
            ]
        ]
    },
    {
        "id": "c287e551330adea5",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "Prep string for visu",
        "func": "\n\nvar timestampMillisecond = new Date(msg.pickedDate); \n\ndateString= (timestampMillisecond.toUTCString());\n\nmsg.dateString = dateString;\nmsg.payload =msg.pickedDate;\n//msg.datesStartEnd=msg.datesStartEnd;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1980,
        "wires": [
            [
                "1f88c01d828d2bf6",
                "a393ec95bc59b0a7"
            ]
        ]
    },
    {
        "id": "77a8b9510ab5d91f",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "R1  time-time-tle-request",
        "links": [
            "bd8de8502f02c463"
        ],
        "x": 1185,
        "y": 2100,
        "wires": [
            [
                "1204d905a2f7cf1c"
            ]
        ]
    },
    {
        "id": "1f88c01d828d2bf6",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "R1 Timestamp checker",
        "func": "var TLETimestampSec=msg.payload/1000;\n// convert the timestamp of the new TLE in sec\nvar endDateSec=msg.datesStartEnd[1];\n// extrqct the enddate\nvar aDayinSec=86400;\n// store number of sec in a day\nvar dayBeforeStartSec=msg.datesStartEnd[0]-aDayinSec;\n// compute the time stamp of a day before the startdate\nif(TLETimestampSec>endDateSec){\n    msg.errorMessage=\"TLE date greater than end of sim\";\n    msg.errorFlag=true;\n}\nelse if(!(Number.isInteger(TLETimestampSec))){\n    msg.errorMessage=\"TLE date is note a number\";\n    msg.errorFlag=true;\n}\nelse if(TLETimestampSec<dayBeforeStartSec){\n    msg.errorMessage=\"TLE date too old\";\n    msg.errorFlag=true;\n}\nelse{\n    msg.errorMessage=\"TLE timestamp updated \";\n    msg.errorFlag=false;\n    msg.payload=msg.payload;\n}\n\n//because of the join wait we need to move from msg.payload\n//msg.dateTLE=msg.payload;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 2060,
        "wires": [
            [
                "a022f4488d277df4",
                "6dfa9833c4e4022c"
            ]
        ]
    },
    {
        "id": "a022f4488d277df4",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "error checker",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1490,
        "y": 2060,
        "wires": [
            [
                "52865fa7ddf3ff0a",
                "ce5fb1f5f244caf4"
            ],
            [
                "a3447dcc20a433a0"
            ]
        ]
    },
    {
        "id": "6dfa9833c4e4022c",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "group": "c02dcce485dfb187",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Date update status:",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1510,
        "y": 2000,
        "wires": []
    },
    {
        "id": "ce5fb1f5f244caf4",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "red1-date-storage",
        "filename": "red1-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1730,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "f129a4cbbb3e0680",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1990,
        "y": 2120,
        "wires": [
            [
                "52865fa7ddf3ff0a"
            ]
        ]
    },
    {
        "id": "a3447dcc20a433a0",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "red1-date-storage-out",
        "filename": "red1-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1820,
        "y": 2120,
        "wires": [
            [
                "f129a4cbbb3e0680"
            ]
        ]
    },
    {
        "id": "52865fa7ddf3ff0a",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 2060,
        "wires": [
            [
                "4c11754c10320aed"
            ]
        ]
    },
    {
        "id": "67c4594ded185b3d",
        "type": "complete",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "Date updated go",
        "scope": [
            "ce5fb1f5f244caf4"
        ],
        "uncaught": false,
        "x": 1100,
        "y": 2160,
        "wires": [
            [
                "f2a6a0829f133b85"
            ]
        ]
    },
    {
        "id": "41c27e398905a252",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "is from button",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1620,
        "y": 2120,
        "wires": [
            [
                "a3447dcc20a433a0"
            ]
        ]
    },
    {
        "id": "9ddb56227135c408",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1450,
        "y": 2120,
        "wires": [
            [
                "41c27e398905a252"
            ]
        ]
    },
    {
        "id": "f2a6a0829f133b85",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "delay=0",
        "func": "msg.delay=0;\nmsg.flush=true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2160,
        "wires": [
            [
                "9ddb56227135c408"
            ]
        ]
    },
    {
        "id": "0dc73d3ef63bc457",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "delay5",
        "func": "msg.delay=5000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2200,
        "wires": [
            [
                "9ddb56227135c408"
            ]
        ]
    },
    {
        "id": "1204d905a2f7cf1c",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "button",
        "func": "msg.payload=\"button\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2120,
        "wires": [
            [
                "9ddb56227135c408"
            ]
        ]
    },
    {
        "id": "37344c7ff017b179",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "dater1",
        "mode": "link",
        "links": [
            "ac05d363e8776ec0"
        ],
        "x": 975,
        "y": 2100,
        "wires": []
    },
    {
        "id": "ea518f9a0cf28767",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "dater1",
        "mode": "link",
        "links": [
            "ac05d363e8776ec0"
        ],
        "x": 775,
        "y": 1940,
        "wires": []
    },
    {
        "id": "ac05d363e8776ec0",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "dater1 in",
        "links": [
            "37344c7ff017b179",
            "ea518f9a0cf28767"
        ],
        "x": 1175,
        "y": 2200,
        "wires": [
            [
                "0dc73d3ef63bc457"
            ]
        ]
    },
    {
        "id": "4c11754c10320aed",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 2060,
        "wires": [
            [
                "a2beac1bb901c9fa"
            ]
        ]
    },
    {
        "id": "d85d77d25fc56aee",
        "type": "ui_slider",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "",
        "label": "Time Slider TLE UPDATE",
        "tooltip": "Time range",
        "group": "c02dcce485dfb187",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "currentValue",
        "topicType": "str",
        "min": "0",
        "max": "50",
        "step": 1,
        "className": "",
        "x": 710,
        "y": 2020,
        "wires": [
            [
                "1dc7dffde56d50df",
                "040d30245b16c5f6"
            ]
        ]
    },
    {
        "id": "078eb6a97ad6c8bb",
        "type": "ui_slider",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "",
        "label": "Time Slider Maneuver",
        "tooltip": "Time range",
        "group": "c8a7959a4b0f55f9",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "50",
        "step": 1,
        "className": "",
        "x": 700,
        "y": 2120,
        "wires": [
            [
                "30ae118bd0a59ff3",
                "277eb99ba931bbbd"
            ]
        ]
    },
    {
        "id": "77dbd23c0cfe5c0c",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 635,
        "y": 1940,
        "wires": []
    },
    {
        "id": "1e542c2b5c054796",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "group": "c8a7959a4b0f55f9",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Date",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1050,
        "y": 2120,
        "wires": []
    },
    {
        "id": "a393ec95bc59b0a7",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "group": "c02dcce485dfb187",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "New TLE date:",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1280,
        "y": 1980,
        "wires": []
    },
    {
        "id": "1054fc71f09cdbc3",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "FROM TIME PERSISTENCE IN",
        "links": [
            "770a98795c591195"
        ],
        "x": 335,
        "y": 2100,
        "wires": [
            [
                "a7c6d6ea84154338",
                "4ff5f137bfdc5a22",
                "e09f86134bef0309",
                "eaa9b33c1978ee52"
            ]
        ]
    },
    {
        "id": "0f5a462fd1ca3105",
        "type": "ui_text_input",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "",
        "label": "R1 Time Manoeuver",
        "tooltip": "",
        "group": "c8a7959a4b0f55f9",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "datetime-local",
        "delay": "0",
        "topic": "timepicker",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 400,
        "y": 2220,
        "wires": [
            [
                "6d295facb58534db"
            ]
        ]
    },
    {
        "id": "eaa9b33c1978ee52",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 2260,
        "wires": [
            [
                "8c61f2c925a530dd"
            ]
        ]
    },
    {
        "id": "c1c9d1585e036f74",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 695,
        "y": 2220,
        "wires": []
    },
    {
        "id": "8c61f2c925a530dd",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 690,
        "y": 2260,
        "wires": [
            [
                "b07be964a2dd252c"
            ]
        ]
    },
    {
        "id": "b07be964a2dd252c",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "Slider update",
        "func": "var startDateMilli = Date.parse(msg.payload.dates.startdate);\n\nvar endDateMilli = Date.parse(msg.payload.dates.enddate);\nvar pickedDateMilli = msg.payload.timepicker;\n\nvar sliderPosition = (pickedDateMilli-startDateMilli)/10000;\nmsg.datesStartEnd=[startDateMilli/1000,endDateMilli/1000];\nmsg.payload = sliderPosition;\nmsg.pickedDate = pickedDateMilli;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2260,
        "wires": [
            [
                "88b988f2e6af1756",
                "078eb6a97ad6c8bb"
            ]
        ]
    },
    {
        "id": "88b988f2e6af1756",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "Prep string for visu",
        "func": "\n\nvar timestampMillisecond = new Date(msg.pickedDate); \n\ndateString= (timestampMillisecond.toUTCString());\n\nmsg.dateString = dateString;\nmsg.payload = msg.pickedDate;\n//msg.datesStartEnd=msg.datesStartEnd;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2300,
        "wires": [
            [
                "1e542c2b5c054796",
                "a942a9a6bfafa8b4"
            ]
        ]
    },
    {
        "id": "a2beac1bb901c9fa",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "setpath1-R1",
        "mode": "link",
        "links": [
            "a58b1046b5db4021"
        ],
        "x": 2065,
        "y": 2020,
        "wires": []
    },
    {
        "id": "a942a9a6bfafa8b4",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": "r1 time setter maneuver OUT",
        "mode": "link",
        "links": [
            "c705204386ed11b2"
        ],
        "x": 1035,
        "y": 2220,
        "wires": []
    },
    {
        "id": "76f76b6abf7d0b24",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "test TLE sanity",
        "func": "if(msg.payload.incli>180 || msg.payload.incli<0){\n    msg.errorMessage=\"Error inclination out of bounds i E [0;180]\"}\n    \nelse if (msg.payload.raan>360 || msg.payload.raan<0){\n    msg.errorMessage=\"Error RAAN out of bounds RAAN E [0;180]\"}\n    \nelse if (msg.payload.aop>360 || msg.payload.aop<0){\n    msg.errorMessage=\"Error Argument of perigee out of bounds AoP E [0;360]\"}\n    \nelse if (msg.payload.meana>360 || msg.payload.meana<0){\n    msg.errorMessage=\"Error mean anomaly out of bounds M E [0;360]\"}\n    \nelse if (msg.payload.ecc>1 || msg.payload.ecc<0){\n    msg.errorMessage=\"Error eccentricity out of bounds e E [0;1]\"}\nelse if (msg.payload.mean>16.42 || msg.payload.mean<0){\n    msg.errorMessage=\"Error Mean motion out of bounds N E [0;16.42]\"}\n    else{msg.errorMessage=\"TLE Accepted\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 640,
        "wires": [
            [
                "847550e87814fba4"
            ]
        ]
    },
    {
        "id": "847550e87814fba4",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "insure the tle format is respected",
        "func": "\n//msg.payload.incli=msg.payload.incli.toLocaleString('fr-FR',{minimumSignificantDigits: 6, maximumSignificantDigits: 7, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.incli = Intl.NumberFormat(undefined, {minimumSignificantDigits: 2, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.incli);\n//msg.payload.raan= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.raan);\n//msg.payload.raan=msg.payload.raan.toLocaleString('fr-FR',{minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.ecc=Intl.NumberFormat(undefined,{minimumSignificantDigits: 7, maximumFractionDigits: 0}).format(msg.payload.ecc);\n//msg.payload.aop= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.aop);\n//msg.payload.meana= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.meana);\n//msg.payload.mean=Intl.NumberFormat(undefined,{minimumSignificantDigits: 2, maximumSignificantDigits: 2, minimumFractionDigits: 14, maximumFractionDigits: 14}).format(msg.payload.mean)\nvar minimalEcc =0.0000001;\nvar eccFormat =10000000;\nmsg.payload.incli=Number(msg.payload.incli).toFixed(4);\nmsg.payload.incli=msg.payload.incli.padStart(8,'0');\nmsg.payload.raan=Number(msg.payload.raan).toFixed(4);\nmsg.payload.raan=msg.payload.raan.padStart(8,'0');\nmsg.payload.ecc=Number(msg.payload.ecc);\nif(msg.payload.ecc<minimalEcc){\n    msg.payload.ecc=msg.payload.ecc+minimalEcc;\n}\n//150523 Ajout des Numb() et String() pour l ecc\nmsg.payload.ecc=(msg.payload.ecc*eccFormat)\nmsg.payload.ecc=(msg.payload.ecc).toFixed(0);\n//150523 supression de la parti decimal par securité\nmsg.payload.ecc=String(msg.payload.ecc).padStart(7,'0');\n//150523 We erased the test in TLE 2 edit so we need to have\n//inc at a fixed 8 char for that reason we changed the pad 7->8\nmsg.payload.aop= Number(msg.payload.aop).toFixed(4);\nmsg.payload.aop= msg.payload.aop.padStart(8,'0');\nmsg.payload.meana= Number(msg.payload.meana).toFixed(4);\nmsg.payload.meana= msg.payload.meana.padStart(8,'0');\nmsg.payload.mean= Number(msg.payload.mean).toFixed(14);\nmsg.payload.mean= msg.payload.mean.padStart(17,'0');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 640,
        "wires": [
            [
                "8faff6b8783bf065",
                "4c61af07d5440b24",
                "46b03384f7d40a32"
            ]
        ]
    },
    {
        "id": "69685c5cf75fe033",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "red1-tle-storage",
        "filename": "red1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 920,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "3e84b71925909505",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "R1 from TLE visu",
        "links": [
            "0dba4519868b1259"
        ],
        "x": 795,
        "y": 680,
        "wires": [
            [
                "69685c5cf75fe033"
            ]
        ]
    },
    {
        "id": "1ad21657b2842d69",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "to TLE visualizer R1",
        "mode": "link",
        "links": [
            "f6134059e93eb4e6"
        ],
        "x": 715,
        "y": 680,
        "wires": []
    },
    {
        "id": "8faff6b8783bf065",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "property": "errorMessage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "TLE Accepted",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 680,
        "wires": [
            [
                "1ad21657b2842d69"
            ],
            []
        ]
    },
    {
        "id": "088b1c5b1d35457e",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "test TLE sanity",
        "func": "if(msg.payload.incli>180 || msg.payload.incli<0){\n    msg.errorMessage=\"Error inclination out of bounds i E [0;180]\"}\n    \nelse if (msg.payload.raan>360 || msg.payload.raan<0){\n    msg.errorMessage=\"Error RAAN out of bounds RAAN E [0;180]\"}\n    \nelse if (msg.payload.aop>360 || msg.payload.aop<0){\n    msg.errorMessage=\"Error Argument of perigee out of bounds AoP E [0;360]\"}\n    \nelse if (msg.payload.meana>360 || msg.payload.meana<0){\n    msg.errorMessage=\"Error mean anomaly out of bounds M E [0;360]\"}\n    \nelse if (msg.payload.ecc>1 || msg.payload.ecc<0){\n    msg.errorMessage=\"Error eccentricity out of bounds e E [0;1]\"}\nelse if (msg.payload.mean>16.42 || msg.payload.mean<0){\n    msg.errorMessage=\"Error Mean motion out of bounds N E [0;16.42]\"}\n    else{msg.errorMessage=\"TLE Accepted\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 720,
        "wires": [
            [
                "c9a6464f7d2da62a"
            ]
        ]
    },
    {
        "id": "c9a6464f7d2da62a",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "insure the tle format is respected",
        "func": "\n//msg.payload.incli=msg.payload.incli.toLocaleString('fr-FR',{minimumSignificantDigits: 6, maximumSignificantDigits: 7, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.incli = Intl.NumberFormat(undefined, {minimumSignificantDigits: 2, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.incli);\n//msg.payload.raan= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.raan);\n//msg.payload.raan=msg.payload.raan.toLocaleString('fr-FR',{minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.ecc=Intl.NumberFormat(undefined,{minimumSignificantDigits: 7, maximumFractionDigits: 0}).format(msg.payload.ecc);\n//msg.payload.aop= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.aop);\n//msg.payload.meana= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.meana);\n//msg.payload.mean=Intl.NumberFormat(undefined,{minimumSignificantDigits: 2, maximumSignificantDigits: 2, minimumFractionDigits: 14, maximumFractionDigits: 14}).format(msg.payload.mean)\nvar minimalEcc =0.0000001;\nvar eccFormat =10000000;\nmsg.payload.incli=Number(msg.payload.incli).toFixed(4);\nmsg.payload.incli=msg.payload.incli.padStart(8,'0');\nmsg.payload.raan=Number(msg.payload.raan).toFixed(4);\nmsg.payload.raan=msg.payload.raan.padStart(8,'0');\nmsg.payload.ecc=Number(msg.payload.ecc);\nif(msg.payload.ecc<minimalEcc){\n    msg.payload.ecc=msg.payload.ecc+minimalEcc;\n}\n//150523 Ajout des Numb() et String() pour l ecc\nmsg.payload.ecc=(msg.payload.ecc*eccFormat)\nmsg.payload.ecc=(msg.payload.ecc).toFixed(0);\n//150523 supression de la parti decimal par securité\nmsg.payload.ecc=String(msg.payload.ecc).padStart(7,'0');\n//150523 We erased the test in TLE 2 edit so we need to have\n//inc at a fixed 8 char for that reason we changed the pad 7->8\nmsg.payload.aop= Number(msg.payload.aop).toFixed(4);\nmsg.payload.aop= msg.payload.aop.padStart(8,'0');\nmsg.payload.meana= Number(msg.payload.meana).toFixed(4);\nmsg.payload.meana= msg.payload.meana.padStart(8,'0');\nmsg.payload.mean= Number(msg.payload.mean).toFixed(14);\nmsg.payload.mean= msg.payload.mean.padStart(17,'0');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 720,
        "wires": [
            [
                "8187c89370bdbf5a",
                "5077a8cd215dacf8",
                "eade1819e9df8266"
            ]
        ]
    },
    {
        "id": "8187c89370bdbf5a",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "property": "errorMessage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "TLE Accepted",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 760,
        "wires": [
            [
                "68f8a4538f23291d"
            ],
            []
        ]
    },
    {
        "id": "68f8a4538f23291d",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "to TLE visualizer R2",
        "mode": "link",
        "links": [
            "318e7cdc76dec879"
        ],
        "x": 715,
        "y": 760,
        "wires": []
    },
    {
        "id": "65d2f35495558a56",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "R2 from TLE visu",
        "links": [
            "66d15938b7436bdc"
        ],
        "x": 795,
        "y": 760,
        "wires": [
            [
                "f1a02d339ab15d13"
            ]
        ]
    },
    {
        "id": "28e13a47f346754b",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "Max slider RED 2",
        "func": "\nstart = Date.parse(msg.payload.startdate);\nend = Date.parse(msg.payload.enddate);\nmsg={ui_control: {max:(end-start)/10000} , body: [start/1000, end/1000], topic:\"dates\" };//10sec step between start date and end date\n//msg = {ui_control:{\"min\":0, \"max\":(end-start)/10000}}\n//msg.body = [start/1000, end/1000];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2600,
        "wires": [
            [
                "12707641a0b5ee0f",
                "5daadcf0f9c7100f"
            ]
        ]
    },
    {
        "id": "2c9dd808c4ca3a93",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 880,
        "y": 2600,
        "wires": [
            [
                "43fe77bc4e6abaed",
                "26768359472e0a6a"
            ]
        ]
    },
    {
        "id": "43fe77bc4e6abaed",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "Prep string for visu",
        "func": "var timestampSecond = msg.payload.dates[0]+msg.payload.currentValue*10;\n//message body 0 is the start date +10 time the payload 1 because we are in steps of 10 sec\nvar timestampMillisecond = new Date(timestampSecond *1000); \n//inst a new Date obj with ms constructor\ndateString= (timestampMillisecond.toUTCString());\n//dateString= (myDate.toGMTString());\nmsg.datesStartEnd=msg.payload.dates;\nmsg.dateString = dateString;\nmsg.payload =Date.parse(timestampMillisecond);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2600,
        "wires": [
            [
                "304d9d148ebb0b73",
                "acc462f8ed83cc95",
                "e0b321cf4095815b"
            ]
        ]
    },
    {
        "id": "1a68b79650ce256c",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "Max slider RED 2",
        "func": "\nstart = Date.parse(msg.payload.startdate);\nend = Date.parse(msg.payload.enddate);\n// the dates have to be in ms and we want a 10 sec step so we divide the range by \n// 10000\nmsg = {ui_control:{max:(end-start)/10000}};//10sec step between start date and end date\n//we can set the max of the slide by giving it the input \n// {ui_control:{max:valeur}}\nmsg.body = [start/1000, end/1000];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 2700,
        "wires": [
            [
                "a884a5c3b089819b",
                "3c216d6765ee437b"
            ]
        ]
    },
    {
        "id": "a884a5c3b089819b",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 800,
        "y": 2700,
        "wires": [
            [
                "0e6a02d99be79c23"
            ]
        ]
    },
    {
        "id": "67e6cbab14e31052",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 885,
        "y": 2660,
        "wires": []
    },
    {
        "id": "0e6a02d99be79c23",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "Time visi",
        "func": "var datecurrent = msg.body[0]+msg.payload[1]*10;\n\nvar myDate = new Date(datecurrent *1000);\ndate= (myDate.toGMTString());\n\nmsg.dateString= date;\n\nmsg.payload  = datecurrent*1000\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 2700,
        "wires": [
            [
                "410cc39e441842d1",
                "01f18e70add9cff6"
            ]
        ]
    },
    {
        "id": "4ec3d403ce05e87e",
        "type": "ui_text_input",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "",
        "label": "R2 Time TLE",
        "tooltip": "",
        "group": "d4e830c4b00daeae",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "datetime-local",
        "delay": "0",
        "topic": "timepicker",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 540,
        "y": 2480,
        "wires": [
            [
                "bec9e498ba6375f3",
                "3ef7d4b96b8b3e13",
                "e317b596f623c6e0"
            ]
        ]
    },
    {
        "id": "8244fccf9e54d094",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "Slider update",
        "func": "var startDateMilli = Date.parse(msg.payload.dates.startdate);\n\nvar endDateMilli = Date.parse(msg.payload.dates.enddate);\nvar pickedDateMilli = msg.payload.timepicker;\n\nvar sliderPosition = (pickedDateMilli-startDateMilli)/10000;\nmsg.datesStartEnd=[startDateMilli/1000,endDateMilli/1000];\nmsg.payload = sliderPosition;\nmsg.pickedDate = pickedDateMilli;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2520,
        "wires": [
            [
                "a5ab075dec117627",
                "5daadcf0f9c7100f"
            ]
        ]
    },
    {
        "id": "572ea7f7bbdb519c",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 915,
        "y": 2560,
        "wires": []
    },
    {
        "id": "12707641a0b5ee0f",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "body to payload",
        "rules": [
            {
                "t": "move",
                "p": "body",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "ui_control",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 2600,
        "wires": [
            [
                "2c9dd808c4ca3a93"
            ]
        ]
    },
    {
        "id": "bec9e498ba6375f3",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 680,
        "y": 2520,
        "wires": [
            [
                "8244fccf9e54d094",
                "1e796b63f590ed7a"
            ]
        ]
    },
    {
        "id": "a685d38f741e406c",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2520,
        "wires": [
            [
                "bec9e498ba6375f3"
            ]
        ]
    },
    {
        "id": "a5ab075dec117627",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "Prep string for visu",
        "func": "\n\nvar timestampMillisecond = new Date(msg.pickedDate); \n\ndateString= (timestampMillisecond.toUTCString());\n\nmsg.dateString = dateString;\nmsg.payload =msg.pickedDate;\n//msg.datesStartEnd=msg.datesStartEnd;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2520,
        "wires": [
            [
                "304d9d148ebb0b73",
                "acc462f8ed83cc95"
            ]
        ]
    },
    {
        "id": "aca2fd577b8d3530",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "B2  time-time-tle-request",
        "links": [
            "5bf00d0b73be675b"
        ],
        "x": 1185,
        "y": 2660,
        "wires": [
            [
                "03f0c3acad703049"
            ]
        ]
    },
    {
        "id": "304d9d148ebb0b73",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "R2 Timestamp checker",
        "func": "var TLETimestampSec=msg.payload/1000;\n// convert the timestamp of the new TLE in sec\nvar endDateSec=msg.datesStartEnd[1];\n// extrqct the enddate\nvar aDayinSec=86400;\n// store number of sec in a day\nvar dayBeforeStartSec=msg.datesStartEnd[0]-aDayinSec;\n// compute the time stamp of a day before the startdate\nif(TLETimestampSec>endDateSec){\n    msg.errorMessage=\"TLE date greater than end of sim\";\n    msg.errorFlag=true;\n}\nelse if(!(Number.isInteger(TLETimestampSec))){\n    msg.errorMessage=\"TLE date is note a number\";\n    msg.errorFlag=true;\n}\nelse if(TLETimestampSec<dayBeforeStartSec){\n    msg.errorMessage=\"TLE date too old\";\n    msg.errorFlag=true;\n}\nelse{\n    msg.errorMessage=\"TLE timestamp updated \";\n    msg.errorFlag=false;\n    msg.payload=msg.payload;\n}\n\n//because of the join wait we need to move from msg.payload\n//msg.dateTLE=msg.payload;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 2600,
        "wires": [
            [
                "da34361c0bc8a0d4",
                "778c8dd30b120205",
                "973705437f127078"
            ]
        ]
    },
    {
        "id": "da34361c0bc8a0d4",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "error checker",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1500,
        "y": 2600,
        "wires": [
            [
                "919da6dcca5bbecd",
                "759607475b021dc9",
                "c74445c268b19ff2"
            ],
            [
                "cdd3a74ebed64c0c"
            ]
        ]
    },
    {
        "id": "778c8dd30b120205",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "group": "d4e830c4b00daeae",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Date update status:",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1520,
        "y": 2540,
        "wires": []
    },
    {
        "id": "759607475b021dc9",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "red2-date-storage",
        "filename": "red2-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1740,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "431eeb01877ef487",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2000,
        "y": 2660,
        "wires": [
            [
                "919da6dcca5bbecd"
            ]
        ]
    },
    {
        "id": "cdd3a74ebed64c0c",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "red2-date-storage-out",
        "filename": "red2-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1830,
        "y": 2660,
        "wires": [
            [
                "431eeb01877ef487"
            ]
        ]
    },
    {
        "id": "919da6dcca5bbecd",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 2600,
        "wires": [
            [
                "7f35e7c874c50cc9"
            ]
        ]
    },
    {
        "id": "32b62171234a6921",
        "type": "complete",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "Date updated go",
        "scope": [
            "759607475b021dc9"
        ],
        "uncaught": false,
        "x": 1110,
        "y": 2700,
        "wires": [
            [
                "509a775aef530a40"
            ]
        ]
    },
    {
        "id": "c2cfc98b25448aa9",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "is from button",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1630,
        "y": 2660,
        "wires": [
            [
                "cdd3a74ebed64c0c",
                "d5406f9936f94e70"
            ]
        ]
    },
    {
        "id": "08e3bf0683b3d546",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1460,
        "y": 2660,
        "wires": [
            [
                "c2cfc98b25448aa9"
            ]
        ]
    },
    {
        "id": "509a775aef530a40",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "delay=0",
        "func": "msg.delay=0;\nmsg.flush=true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2700,
        "wires": [
            [
                "08e3bf0683b3d546"
            ]
        ]
    },
    {
        "id": "8ca362e8efdf666d",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "delay5",
        "func": "msg.delay=5000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 2740,
        "wires": [
            [
                "08e3bf0683b3d546"
            ]
        ]
    },
    {
        "id": "03f0c3acad703049",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "button",
        "func": "msg.payload=\"button\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 2660,
        "wires": [
            [
                "08e3bf0683b3d546"
            ]
        ]
    },
    {
        "id": "26768359472e0a6a",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "dater2",
        "mode": "link",
        "links": [
            "6fbc52778806a647"
        ],
        "x": 985,
        "y": 2640,
        "wires": []
    },
    {
        "id": "1e796b63f590ed7a",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "dater2",
        "mode": "link",
        "links": [
            "6fbc52778806a647"
        ],
        "x": 785,
        "y": 2480,
        "wires": []
    },
    {
        "id": "6fbc52778806a647",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "dater2 in",
        "links": [
            "1e796b63f590ed7a",
            "26768359472e0a6a"
        ],
        "x": 1185,
        "y": 2740,
        "wires": [
            [
                "8ca362e8efdf666d"
            ]
        ]
    },
    {
        "id": "7f35e7c874c50cc9",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 2600,
        "wires": [
            [
                "574e4c417983ae7a"
            ]
        ]
    },
    {
        "id": "5daadcf0f9c7100f",
        "type": "ui_slider",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "",
        "label": "Time Slider TLE UPDATE",
        "tooltip": "Time range",
        "group": "d4e830c4b00daeae",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "currentValue",
        "topicType": "str",
        "min": "0",
        "max": "50",
        "step": 1,
        "className": "",
        "x": 720,
        "y": 2560,
        "wires": [
            [
                "572ea7f7bbdb519c",
                "2c9dd808c4ca3a93"
            ]
        ]
    },
    {
        "id": "3c216d6765ee437b",
        "type": "ui_slider",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "",
        "label": "Time Slider Maneuver",
        "tooltip": "Time range",
        "group": "7465a3d35f5541d7",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "50",
        "step": 1,
        "className": "",
        "x": 710,
        "y": 2660,
        "wires": [
            [
                "a884a5c3b089819b",
                "67e6cbab14e31052"
            ]
        ]
    },
    {
        "id": "3ef7d4b96b8b3e13",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 645,
        "y": 2480,
        "wires": []
    },
    {
        "id": "410cc39e441842d1",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "group": "7465a3d35f5541d7",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Date",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1060,
        "y": 2660,
        "wires": []
    },
    {
        "id": "acc462f8ed83cc95",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "group": "d4e830c4b00daeae",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "New TLE date:",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1290,
        "y": 2520,
        "wires": []
    },
    {
        "id": "a6c1e74ca5e04589",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "FROM TIME PERSISTENCE IN",
        "links": [
            "770a98795c591195"
        ],
        "x": 345,
        "y": 2640,
        "wires": [
            [
                "a685d38f741e406c",
                "28e13a47f346754b",
                "1a68b79650ce256c",
                "640205c575264d82"
            ]
        ]
    },
    {
        "id": "c74445c268b19ff2",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "test time setterb2 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1740,
        "y": 2520,
        "wires": []
    },
    {
        "id": "973705437f127078",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "test time setterb2 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 2460,
        "wires": []
    },
    {
        "id": "e0b321cf4095815b",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "test time setterb2 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 2460,
        "wires": []
    },
    {
        "id": "e317b596f623c6e0",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "test time setterb2 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 2460,
        "wires": []
    },
    {
        "id": "d5406f9936f94e70",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "test time setterb2 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1840,
        "y": 2760,
        "wires": []
    },
    {
        "id": "d2aaaa0cb331e647",
        "type": "ui_text_input",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "",
        "label": "R2 Time Manoeuver",
        "tooltip": "",
        "group": "7465a3d35f5541d7",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "datetime-local",
        "delay": "0",
        "topic": "timepicker",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 390,
        "y": 2760,
        "wires": [
            [
                "e1c315f120a309e0"
            ]
        ]
    },
    {
        "id": "640205c575264d82",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 2800,
        "wires": [
            [
                "5baef58dd260f51c"
            ]
        ]
    },
    {
        "id": "cb96ef13fcd94cf9",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 715,
        "y": 2760,
        "wires": []
    },
    {
        "id": "5baef58dd260f51c",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 2800,
        "wires": [
            [
                "0db05beef3d64877"
            ]
        ]
    },
    {
        "id": "0db05beef3d64877",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "Slider update",
        "func": "var startDateMilli = Date.parse(msg.payload.dates.startdate);\n\nvar endDateMilli = Date.parse(msg.payload.dates.enddate);\nvar pickedDateMilli = msg.payload.timepicker;\n\nvar sliderPosition = (pickedDateMilli-startDateMilli)/10000;\nmsg.datesStartEnd=[startDateMilli/1000,endDateMilli/1000];\nmsg.payload = sliderPosition;\nmsg.pickedDate = pickedDateMilli;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2800,
        "wires": [
            [
                "9a96fd2e4bde66f1",
                "3c216d6765ee437b"
            ]
        ]
    },
    {
        "id": "9a96fd2e4bde66f1",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": "Prep string for visu",
        "func": "\n\nvar timestampMillisecond = new Date(msg.pickedDate); \n\ndateString= (timestampMillisecond.toUTCString());\n\nmsg.dateString = dateString;\nmsg.payload = msg.pickedDate;\n//msg.datesStartEnd=msg.datesStartEnd;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2840,
        "wires": [
            [
                "410cc39e441842d1",
                "01f18e70add9cff6"
            ]
        ]
    },
    {
        "id": "844dc894dbd219b5",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "setpath 8 time output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 180,
        "wires": []
    },
    {
        "id": "2b24ea015282a48a",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "Audio BLUE1 out",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 1075,
        "y": 420,
        "wires": []
    },
    {
        "id": "40a6d644acf51561",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "AUDIO BLUE2",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 1075,
        "y": 520,
        "wires": []
    },
    {
        "id": "46b03384f7d40a32",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "AUDIO RED1",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 1075,
        "y": 600,
        "wires": []
    },
    {
        "id": "eade1819e9df8266",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "AUDIO  RED2",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 1075,
        "y": 680,
        "wires": []
    },
    {
        "id": "6fe4f4018bc8dbf6",
        "type": "mongodb in",
        "z": "dd1202fd.a2e23",
        "g": "ef7c6a255dddba2f",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 2740,
        "y": 940,
        "wires": [
            [
                "df01864d55b31aa5"
            ]
        ]
    },
    {
        "id": "c09ff10b2a7d849b",
        "type": "ui_button",
        "z": "dd1202fd.a2e23",
        "d": true,
        "g": "ef7c6a255dddba2f",
        "name": "",
        "group": "5a7810372552815e",
        "order": 3,
        "width": 10,
        "height": 1,
        "passthru": false,
        "label": "Show current TLE Date",
        "tooltip": "",
        "color": "",
        "bgcolor": "#477500",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2750,
        "y": 980,
        "wires": [
            [
                "6fe4f4018bc8dbf6"
            ]
        ]
    },
    {
        "id": "c6a0f7e3ae8f5e2a",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "d": true,
        "g": "ef7c6a255dddba2f",
        "group": "5a7810372552815e",
        "order": 2,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "TLE Date",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2700,
        "y": 740,
        "wires": []
    },
    {
        "id": "21d004d8a0b3ad1d",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "ef7c6a255dddba2f",
        "name": "300623 Helper that displays the TLE date",
        "info": "",
        "x": 2640,
        "y": 680,
        "wires": []
    },
    {
        "id": "565906a73ac8bfd6",
        "type": "csv",
        "z": "dd1202fd.a2e23",
        "g": "ef7c6a255dddba2f",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 2710,
        "y": 860,
        "wires": [
            [
                "6258d262ba03c5bd"
            ]
        ]
    },
    {
        "id": "df01864d55b31aa5",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "ef7c6a255dddba2f",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2690,
        "y": 900,
        "wires": [
            [
                "565906a73ac8bfd6"
            ]
        ]
    },
    {
        "id": "6258d262ba03c5bd",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "ef7c6a255dddba2f",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2720,
        "y": 820,
        "wires": [
            [
                "36edc6de3f4aea19"
            ]
        ]
    },
    {
        "id": "36edc6de3f4aea19",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "ef7c6a255dddba2f",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp =new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\n\nlet text = utctimestamp.toUTCString();\nmsg.payload=utctimestamp;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 780,
        "wires": [
            [
                "c6a0f7e3ae8f5e2a"
            ]
        ]
    },
    {
        "id": "fa1aab6e4e36588a",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": " Local to UTC",
        "func": "// Example date string\nvar dateString = msg.payload;\n\n// Parse the date string as UTC\nvar date = new Date(dateString);\nvar utcDate = new Date(Date.UTC(\n  date.getFullYear(),           // Year\n  date.getMonth(),              // Month (zero-based)\n  date.getDate(),               // Day\n  date.getHours(),              // Hour\n  date.getMinutes(),            // Minute\n  date.getSeconds()             // Second\n));\n\n// Output the UTC date\nmsg.payload = Number(utcDate);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1180,
        "wires": [
            [
                "0591ba7c899f79a7",
                "13569978a3569fd7",
                "7de2968a8e624b25"
            ]
        ]
    },
    {
        "id": "348f2fc735a457f3",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "25175e791aace242",
        "name": " Local to UTC",
        "func": "// Example date string\nvar dateString = msg.payload;\n\n// Parse the date string as UTC\nvar date = new Date(dateString);\nvar utcDate = new Date(Date.UTC(\n  date.getFullYear(),           // Year\n  date.getMonth(),              // Month (zero-based)\n  date.getDate(),               // Day\n  date.getHours(),              // Hour\n  date.getMinutes(),            // Minute\n  date.getSeconds()             // Second\n));\n\n// Output the UTC date\nmsg.payload = Number(utcDate);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1700,
        "wires": [
            [
                "ce62107af64ea46c",
                "eb65e451b5859e1f"
            ]
        ]
    },
    {
        "id": "6d295facb58534db",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4797f1c91f3170ab",
        "name": " Local to UTC",
        "func": "// Example date string\nvar dateString = msg.payload;\n\n// Parse the date string as UTC\nvar date = new Date(dateString);\nvar utcDate = new Date(Date.UTC(\n  date.getFullYear(),           // Year\n  date.getMonth(),              // Month (zero-based)\n  date.getDate(),               // Day\n  date.getHours(),              // Hour\n  date.getMinutes(),            // Minute\n  date.getSeconds()             // Second\n));\n\n// Output the UTC date\nmsg.payload = Number(utcDate);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2200,
        "wires": [
            [
                "c1c9d1585e036f74",
                "8c61f2c925a530dd"
            ]
        ]
    },
    {
        "id": "e1c315f120a309e0",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "8cebe66fd2fcaadb",
        "name": " Local to UTC",
        "func": "// Example date string\nvar dateString = msg.payload;\n\n// Parse the date string as UTC\nvar date = new Date(dateString);\nvar utcDate = new Date(Date.UTC(\n  date.getFullYear(),           // Year\n  date.getMonth(),              // Month (zero-based)\n  date.getDate(),               // Day\n  date.getHours(),              // Hour\n  date.getMinutes(),            // Minute\n  date.getSeconds()             // Second\n));\n\n// Output the UTC date\nmsg.payload = Number(utcDate);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 2760,
        "wires": [
            [
                "cb96ef13fcd94cf9",
                "5baef58dd260f51c"
            ]
        ]
    },
    {
        "id": "a9e1c7b8b8ba82b1",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "TLE SET 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 540,
        "wires": []
    },
    {
        "id": "c8396e397cfe2fbb",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "TLE SET 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 580,
        "wires": []
    },
    {
        "id": "2022867b6d56e8b3",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "TLE SET 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 620,
        "wires": []
    },
    {
        "id": "e3ccf0456fcafedf",
        "type": "inject",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "On start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 140,
        "wires": [
            [
                "b4c30d74303d3fda",
                "0a13adeab708b2b4",
                "c76818d13ef10a3c"
            ]
        ]
    },
    {
        "id": "d71f38be32964178",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "func": "var time = Date.now();\nvar acceptableTLEAge=1;\n// 150523 How old should the tle be in days\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\nvar TLE1 = msg.payload[1];\nvar epochLastUpdate = Number(TLE1.substring(18,32));\nvar timeSinceUpdate = epoch-epochLastUpdate;\nif(timeSinceUpdate>acceptableTLEAge){\n    msg.updateRequiredFlag=true;\n}\n\nelse{\n    msg.updateRequiredFlag=false;\n}\nmsg.payload={lastupdate:epochLastUpdate,today:epoch};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 220,
        "wires": [
            [
                "af6690aaa1d5506e",
                "b21dfa55a8be32b8"
            ]
        ]
    },
    {
        "id": "af6690aaa1d5506e",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "test update",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 160,
        "wires": []
    },
    {
        "id": "b21dfa55a8be32b8",
        "type": "switch",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "property": "updateRequiredFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 260,
        "wires": [
            [
                "37ad0f5db69a0a92",
                "7faa69c7a8fb5867"
            ],
            [
                "8bb69708b193a7da"
            ]
        ]
    },
    {
        "id": "37ad0f5db69a0a92",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "mode": "link",
        "links": [
            "b9a6ef87.24de3"
        ],
        "x": 1235,
        "y": 240,
        "wires": []
    },
    {
        "id": "6254fed12b6d11e0",
        "type": "link in",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "links": [
            "1df6f4783011c9ba"
        ],
        "x": 245,
        "y": 180,
        "wires": [
            [
                "b4c30d74303d3fda"
            ]
        ]
    },
    {
        "id": "b4c30d74303d3fda",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 390,
        "y": 180,
        "wires": [
            [
                "35aa96592eb7f377"
            ]
        ]
    },
    {
        "id": "35aa96592eb7f377",
        "type": "split",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 550,
        "y": 180,
        "wires": [
            [
                "0b4745eab2465a5c"
            ]
        ]
    },
    {
        "id": "0b4745eab2465a5c",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 220,
        "wires": [
            [
                "ddb2c2c3841de05a"
            ]
        ]
    },
    {
        "id": "ddb2c2c3841de05a",
        "type": "join",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 530,
        "y": 220,
        "wires": [
            [
                "66fe466045cd8ec4"
            ]
        ]
    },
    {
        "id": "66fe466045cd8ec4",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 220,
        "wires": [
            [
                "bccd3a1ae1354ea5"
            ]
        ]
    },
    {
        "id": "bccd3a1ae1354ea5",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"STORK-1\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 220,
        "wires": [
            [
                "d71f38be32964178"
            ]
        ]
    },
    {
        "id": "66ac162682cb0dca",
        "type": "catch",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "scope": [
            "b4c30d74303d3fda"
        ],
        "uncaught": false,
        "x": 930,
        "y": 160,
        "wires": [
            [
                "9cf0270e24f5e7d2"
            ]
        ]
    },
    {
        "id": "9cf0270e24f5e7d2",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "func": "msg.updateRequiredFlag=true;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 160,
        "wires": [
            [
                "b21dfa55a8be32b8",
                "af6690aaa1d5506e"
            ]
        ]
    },
    {
        "id": "bd44410470f18aea",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "mode": "link",
        "links": [
            "c67ec5067dc22890"
        ],
        "x": 1465,
        "y": 200,
        "wires": []
    },
    {
        "id": "7faa69c7a8fb5867",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "TLE outdated",
        "func": "msg.payload=\"tle outdated! Requesting update from celestrak...\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 200,
        "wires": [
            [
                "bd44410470f18aea"
            ]
        ]
    },
    {
        "id": "8bb69708b193a7da",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Mission Ready",
        "func": "msg.payload=\"Mission Ready\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 300,
        "wires": [
            [
                "bd44410470f18aea",
                "105cf8995e9907cd"
            ]
        ]
    },
    {
        "id": "0a13adeab708b2b4",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "FLUSH MEM ON START",
        "mode": "link",
        "links": [
            "3186623bfab93670"
        ],
        "x": 345,
        "y": 140,
        "wires": []
    },
    {
        "id": "c5123fa5946ce9f8",
        "type": "join-wait",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "paths": "[\"path_1\",\"path_2\",\"path_3\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": true,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "undefined",
        "timeout": "5",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "false",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 940,
        "y": 300,
        "wires": [
            [
                "90fb241377880fb6"
            ],
            []
        ]
    },
    {
        "id": "c3d85f2f1e1374d7",
        "type": "change",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "c5123fa5946ce9f8"
            ]
        ]
    },
    {
        "id": "d81801e66dd0e3e2",
        "type": "link in",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "PATH1 ONSTART MEM",
        "links": [
            "105cf8995e9907cd",
            "adebc33415b96346"
        ],
        "x": 555,
        "y": 280,
        "wires": [
            [
                "c3d85f2f1e1374d7",
                "b6bfe9d256813cc5",
                "60708c380b4d96f0"
            ]
        ]
    },
    {
        "id": "105cf8995e9907cd",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "MISSION READY",
        "mode": "link",
        "links": [
            "d81801e66dd0e3e2"
        ],
        "x": 1425,
        "y": 320,
        "wires": []
    },
    {
        "id": "5b28ae6e8ef675ca",
        "type": "change",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 320,
        "wires": [
            [
                "c5123fa5946ce9f8"
            ]
        ]
    },
    {
        "id": "d1a214987ab144c3",
        "type": "link in",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "PATH2 ON START MEM",
        "links": [
            "1e6c927613bb91ab"
        ],
        "x": 555,
        "y": 320,
        "wires": [
            [
                "5b28ae6e8ef675ca",
                "04ed1738e951fc7c"
            ]
        ]
    },
    {
        "id": "90fb241377880fb6",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "mode": "link",
        "links": [
            "04828409f3c8eb98",
            "118f0f492f55ac0a",
            "1e9676e414d32f76",
            "220556fdf5358e27",
            "32528e58bc954e44",
            "34c17ae1e756d864",
            "af9822fbee098e88",
            "c9235065a31da113",
            "ccf9f6d431ed64cc",
            "e7a2222d78b89f73"
        ],
        "x": 1045,
        "y": 300,
        "wires": []
    },
    {
        "id": "997bd118e9898efa",
        "type": "inject",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 640,
        "wires": [
            [
                "2db28dd3c2868aaf"
            ]
        ]
    },
    {
        "id": "74ffb890146508df",
        "type": "file",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 200,
        "y": 560,
        "wires": [
            [
                "2eb94a5f6b339506"
            ]
        ]
    },
    {
        "id": "2db28dd3c2868aaf",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "",
        "func": "function getDayOfYear(date) {\n  var start = new Date(Date.UTC(date.getUTCFullYear(), 0, 0));\n  var diff = date - start;\n  var oneDay = 1000 * 60 * 60 * 24;\n  var dayOfYear = Math.floor(diff / oneDay);\n  \n  return dayOfYear;\n}\n\nvar now=new Date(Date.now());/* creation d une variable now pour le stockage du timestamp \nde la date et heure de l'instant present via la methode statique now()*/\nconsole.log(now);\n\n\n\n\n\nvar dayOfYear=getDayOfYear(now);\nconsole.log(dayOfYear);\nvar dateStartSim=new Date( Date.UTC(now.getUTCFullYear(), 0, dayOfYear));\nconsole.log(dateStartSim);\nvar dateEndSim= new Date( Date.UTC(now.getUTCFullYear(), 0, dayOfYear+1));\nconsole.log(dateEndSim);\n\n\nvar dateStartSimString = (dateStartSim.toISOString() );\n// stockage de la string de la date auj \nvar dateEndSimString = (dateEndSim.toISOString());\n// stockage de la string de demain\n\n\nmsg.payload = {startdate:dateStartSimString, enddate: dateEndSimString};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 600,
        "wires": [
            [
                "74ffb890146508df"
            ]
        ]
    },
    {
        "id": "2eb94a5f6b339506",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "Time persistent was reset by start",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 520,
        "wires": []
    },
    {
        "id": "ef392ad28cd90a7b",
        "type": "comment",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "Modif 12/05/23",
        "info": "\nI deleted a test that was checking for existing dates in the storage file because on a deploy we want to start with a fresh set-up",
        "x": 220,
        "y": 480,
        "wires": []
    },
    {
        "id": "8e0b25ba91d60a62",
        "type": "ui_button",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Simulation time reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "#477500",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 680,
        "wires": [
            [
                "2db28dd3c2868aaf",
                "9d0812e3d98d6f29"
            ]
        ]
    },
    {
        "id": "9d0812e3d98d6f29",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "timereset",
        "mode": "link",
        "links": [
            "7be31cfcdfdde09c"
        ],
        "x": 395,
        "y": 700,
        "wires": []
    },
    {
        "id": "c76818d13ef10a3c",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "START",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 60,
        "wires": []
    },
    {
        "id": "c48f161fd1a57e8b",
        "type": "change",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 360,
        "wires": [
            [
                "c5123fa5946ce9f8"
            ]
        ]
    },
    {
        "id": "3853f0aecc249b02",
        "type": "link in",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "REFRESH DB",
        "links": [
            "1dd663aebe5da599"
        ],
        "x": 555,
        "y": 360,
        "wires": [
            [
                "c48f161fd1a57e8b",
                "1126c89aab66fa84"
            ]
        ]
    },
    {
        "id": "60708c380b4d96f0",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "REFRESH DBS ON START",
        "mode": "link",
        "links": [
            "c26754142d9a49d1"
        ],
        "x": 645,
        "y": 260,
        "wires": []
    },
    {
        "id": "1126c89aab66fa84",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "ON START DB REFRESHED",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 460,
        "wires": []
    },
    {
        "id": "04ed1738e951fc7c",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "OEM DELETED",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 500,
        "wires": []
    },
    {
        "id": "b6bfe9d256813cc5",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "TLE AGE OK",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 540,
        "wires": []
    },
    {
        "id": "830078cd.5ce018",
        "type": "comment",
        "z": "3913ac76.e7a7a4",
        "g": "1fd96d24.c576c3",
        "name": "Remove a database content",
        "info": "",
        "x": 380,
        "y": 400,
        "wires": []
    },
    {
        "id": "80466439.be38c8",
        "type": "ui_form",
        "z": "3913ac76.e7a7a4",
        "g": "1fd96d24.c576c3",
        "name": "",
        "label": "Remove Ground Station",
        "group": "e85e692d.e47bb8",
        "order": 2,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "GS Name",
                "value": "Name",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Name": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 210,
        "y": 460,
        "wires": [
            [
                "95062db2.f9d1d"
            ]
        ]
    },
    {
        "id": "cc07039e.b636d",
        "type": "mongodb out",
        "z": "3913ac76.e7a7a4",
        "g": "1fd96d24.c576c3",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete ground station csug@127.0.0.1",
        "collection": "ground_stations",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 790,
        "y": 420,
        "wires": []
    },
    {
        "id": "95062db2.f9d1d",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "1fd96d24.c576c3",
        "name": "Query to remove a GS",
        "func": "msg.payload = {name: msg.payload.Name};\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 460,
        "wires": [
            [
                "cc07039e.b636d",
                "883d17a2.efed38",
                "4a4284af.a91d7c"
            ]
        ]
    },
    {
        "id": "883d17a2.efed38",
        "type": "mongodb out",
        "z": "3913ac76.e7a7a4",
        "g": "1fd96d24.c576c3",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete visbility windows csug@127.0.0.1",
        "collection": "visibility_windows",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 800,
        "y": 460,
        "wires": []
    },
    {
        "id": "4a4284af.a91d7c",
        "type": "mongodb out",
        "z": "3913ac76.e7a7a4",
        "g": "1fd96d24.c576c3",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete angular csug@127.0.0.1",
        "collection": "angular",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 770,
        "y": 500,
        "wires": []
    },
    {
        "id": "7f54d608.f66d18",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "select name of the station",
        "func": "//msg.topic =msg.payload;\nname = msg.payload[0].name\nnames = name.split('\"')[0]\nmsg.payload = names\nmsg.topic = [msg.var-1, name]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 740,
        "wires": [
            [
                "71548a7e.e894d4"
            ]
        ]
    },
    {
        "id": "71548a7e.e894d4",
        "type": "change",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/GS_Database/Sat_Antenna_Tracker_\" & msg.payload & \".TXT\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 740,
        "wires": [
            [
                "e6efdf13.cfcb6"
            ]
        ]
    },
    {
        "id": "725004f9.2e6f1c",
        "type": "csv",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2510,
        "y": 740,
        "wires": [
            [
                "550ae2ac.c7d07c",
                "11567371c0f67cc9"
            ]
        ]
    },
    {
        "id": "550ae2ac.c7d07c",
        "type": "json",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2690,
        "y": 740,
        "wires": [
            [
                "783d60bf.56ed4"
            ]
        ]
    },
    {
        "id": "783d60bf.56ed4",
        "type": "file",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "Pursuit-file-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2890,
        "y": 740,
        "wires": [
            [
                "fcb2e5a3.0e2f78",
                "a4ff9b34.579b18",
                "6eba071.10a38f8",
                "9c64b4eb.3ee8b8"
            ]
        ]
    },
    {
        "id": "fcb2e5a3.0e2f78",
        "type": "debug",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "angular print",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3170,
        "y": 660,
        "wires": []
    },
    {
        "id": "fe49e6f5.8df938",
        "type": "link in",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "When Angular Table is filled",
        "links": [
            "320c2a31.d95b16",
            "efc64324.fb423",
            "88e679ca.dca768"
        ],
        "x": 230,
        "y": 740,
        "wires": [
            [
                "1e6e1bc5.0f5834"
            ]
        ],
        "l": true
    },
    {
        "id": "a71e2b4c.233488",
        "type": "inject",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 290,
        "y": 700,
        "wires": [
            [
                "1e6e1bc5.0f5834"
            ]
        ]
    },
    {
        "id": "9a1fe386.f5e59",
        "type": "delay",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2360,
        "y": 740,
        "wires": [
            [
                "725004f9.2e6f1c"
            ]
        ]
    },
    {
        "id": "a4ff9b34.579b18",
        "type": "link out",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "ANGULAR-out",
        "links": [
            "94c90f48.05a96",
            "a245d25.3ecc83",
            "ebf798e8.bc25e8"
        ],
        "x": 3135,
        "y": 720,
        "wires": []
    },
    {
        "id": "6eba071.10a38f8",
        "type": "link out",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "to reset VTS",
        "links": [
            "58129645.a328f8",
            "d4c14718.d055b8"
        ],
        "x": 3135,
        "y": 780,
        "wires": []
    },
    {
        "id": "efe2c69b.fd76d8",
        "type": "comment",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "MACHINE DEPENDENCE",
        "info": "Stork_Antenna_Tracker_xxxxxxx.txt",
        "x": 2890,
        "y": 680,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "9c64b4eb.3ee8b8",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "message to dashboard10",
        "func": "msg.payload = \"Antenna Tracker files completed\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 840,
        "wires": [
            [
                "601c3227.d4d72c"
            ]
        ]
    },
    {
        "id": "601c3227.d4d72c",
        "type": "link out",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "Antenna files",
        "links": [
            "caf37f66.25fde",
            "6e3e89af.161808",
            "bd944618.65d4c8"
        ],
        "x": 3375,
        "y": 840,
        "wires": []
    },
    {
        "id": "1e6e1bc5.0f5834",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "Query to show GS names",
        "func": "msg.payload = {}\nmsg.projection = {name:1,_id:0}\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 740,
        "wires": [
            [
                "520c3859.aa50c8"
            ]
        ]
    },
    {
        "id": "520c3859.aa50c8",
        "type": "mongodb in",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show stations name",
        "collection": "ground_stations",
        "operation": "find",
        "x": 710,
        "y": 740,
        "wires": [
            [
                "eb2aa14e.a61f4"
            ]
        ]
    },
    {
        "id": "eb2aa14e.a61f4",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "Add a counter to ID",
        "func": "var count = 1\nmsg.payload.forEach(gs => {\n    gs.var = count ++\n})\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 740,
        "wires": [
            [
                "b3db7416.4787d8"
            ]
        ]
    },
    {
        "id": "b3db7416.4787d8",
        "type": "split",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1090,
        "y": 740,
        "wires": [
            [
                "dcefc108.5f804"
            ]
        ]
    },
    {
        "id": "dcefc108.5f804",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "Format payload",
        "func": "msg.var = msg.payload.var\ndelete msg.payload.var\nmsg.payload = [msg.payload]\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 740,
        "wires": [
            [
                "7f54d608.f66d18"
            ]
        ]
    },
    {
        "id": "e6efdf13.cfcb6",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "query to show angular ",
        "func": "msg.payload = {name: msg.payload}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 740,
        "wires": [
            [
                "ce1d15e8.6c1078"
            ]
        ]
    },
    {
        "id": "ce1d15e8.6c1078",
        "type": "mongodb in",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of angular",
        "collection": "angular",
        "operation": "find",
        "x": 2170,
        "y": 740,
        "wires": [
            [
                "9a1fe386.f5e59"
            ]
        ]
    },
    {
        "id": "e57e953b.7cd0a8",
        "type": "comment",
        "z": "3913ac76.e7a7a4",
        "g": "b6d29b3c.89b878",
        "name": "Fill the database",
        "info": "",
        "x": 340,
        "y": 200,
        "wires": []
    },
    {
        "id": "edd76d7d.08bdb",
        "type": "ui_form",
        "z": "3913ac76.e7a7a4",
        "g": "b6d29b3c.89b878",
        "name": "",
        "label": "Add Ground Station",
        "group": "e85e692d.e47bb8",
        "order": 1,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "GS Name",
                "value": "Name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "GS Latitude (°)",
                "value": "Lat",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "GS Longitude (°)",
                "value": "Lon",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "GS Altitude  (m)",
                "value": "Alt",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "GS Elevation (°)",
                "value": "El",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "GS Frequency (MHz)",
                "value": "Freq",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Name": "",
            "Lat": "",
            "Lon": "",
            "Alt": "",
            "El": "",
            "Freq": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "507d36b2.5917f8"
            ]
        ]
    },
    {
        "id": "507d36b2.5917f8",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "b6d29b3c.89b878",
        "name": "Query to add a GS",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.name = msg.payload.Name\ngs.latitude = msg.payload.Lat\ngs.longitude = msg.payload.Lon\ngs.altitude = msg.payload.Alt\ngs.elevation = msg.payload.El\ngs.freq = msg.payload.Freq\ngs.location = \"[\" + msg.payload.Lat + \",\" + msg.payload.Lon + \"]\"\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 240,
        "wires": [
            [
                "90bc963d.ab5238"
            ]
        ]
    },
    {
        "id": "de5fe0c8.0d6bb",
        "type": "mongodb out",
        "z": "3913ac76.e7a7a4",
        "g": "b6d29b3c.89b878",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insertGS-gsdata",
        "collection": "ground_stations",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 880,
        "y": 240,
        "wires": []
    },
    {
        "id": "90bc963d.ab5238",
        "type": "split",
        "z": "3913ac76.e7a7a4",
        "g": "b6d29b3c.89b878",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 670,
        "y": 240,
        "wires": [
            [
                "de5fe0c8.0d6bb"
            ]
        ]
    },
    {
        "id": "11567371c0f67cc9",
        "type": "debug",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "Test DEBUG",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2670,
        "y": 800,
        "wires": []
    },
    {
        "id": "68a04f6a.3ad01",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "Move the data to the override values",
        "func": "//var p = msg.payload.split(\"\\n\");\n//var p = msg.payload[0];\nmsg.satid = msg.payload[0][0]\nmsg.tle1 =  msg.payload[0].tle1;\nmsg.tle2 =  msg.payload[0].tle2;\nmsg.payload = Date.now()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 4400,
        "wires": [
            [
                "3e3626b1.c6cc4a",
                "90616c77ddc20a7b"
            ]
        ]
    },
    {
        "id": "3e3626b1.c6cc4a",
        "type": "tle",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "satid": "ROBUSTA",
        "tle1": "",
        "tle2": "",
        "coordsys": "latlongdeg",
        "name": "(TLE prefilled with sat data)",
        "x": 680,
        "y": 4480,
        "wires": [
            [
                "74fcd845.6038d8",
                "126451f0.88e04e"
            ]
        ]
    },
    {
        "id": "74fcd845.6038d8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "Flight-data message",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\nif(!Array.isArray(msg.payload)){\n   var vel = Math.pow(Math.pow((msg.payload.velocity.x)/1000,2)+Math.pow((msg.payload.velocity.y)/1000,2)+Math.pow((msg.payload.velocity.z)/1000,2),0.5);\n    vela = vel*1000;\n    arrondi = Math.round(vela);\n    vel = arrondi/1000;\n    var alt = msg.payload.position.alt;\n    alta = alt*1\n    arrondi = Math.round(alta);\n    alt = arrondi/1;\n\nif(msg.payload.position.lat>37.0 & msg.payload.position.lat<55.0 & msg.payload.position.lon>-5.0 & msg.payload.position.lon<14.0){\n   return{\n    topic:msg.payload.name,\n    payload: vel,\n    mailing: alt/1000,\n    body: \"Satellite label : \"+msg.payload.name  + \"                                    \"\n    + \"        Sat altitude : \"+msg.payload.position.alt/1000 +\" km \"\n    + \"        Ground position link : https://www.google.com/maps/search/?api=1&query=\"+msg.payload.position.lat+\",\"+msg.payload.position.lon\n    + \"        Sat velocity : \"+vel + \" km/s \"\n    + \"        Flight position link : https://www.google.com/maps/@\"+msg.payload.position.lat+\",\"+msg.payload.position.lon+\",\"+msg.payload.position.alt+\"m/data=!3m1!1e3!4m2!10m1!1e1\"\n    } \n}\nelse {\n  return{\n  topic:msg.payload.name,\n  payload: vel,\n  mailing: alt/1000,\n  body: \"Satellite label : \"+msg.payload.name  + \"                                    \"\n  + \"        Sat altitude : \"+msg.payload.position.alt/1000 +\" km \"\n  + \"        Ground position link : https://www.google.com/maps/search/?api=1&query=\"+msg.payload.position.lat+\",\"+msg.payload.position.lon\n  + \"        Sat velocity : \"+vel + \" km/s \"\n  + \"        Flight position link : https://www.google.com/maps/@\"+msg.payload.position.lat+\",\"+msg.payload.position.lon+\",\"+msg.payload.position.alt+\"m/data=!3m1!1e3!4m2!10m1!1e1\"\n  }\n} \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 4480,
        "wires": [
            [
                "68e5ba45.705be4",
                "76a24cf9.258434",
                "1e4d8792.74f5a8",
                "852b55c9920045c0"
            ]
        ]
    },
    {
        "id": "4336a6fd.067998",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "RELOAD DASHBOARD",
        "links": [
            "2bf26631.0dfbda",
            "ccbc5346.db0ba",
            "931b309d.f0a88"
        ],
        "x": 185,
        "y": 4420,
        "wires": [
            [
                "5c9f53db8c9861c7",
                "eacad089ec7f2e6f"
            ]
        ]
    },
    {
        "id": "a972d547.ac2aa8",
        "type": "complete",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "Trigger when VTS is INIT",
        "scope": [],
        "uncaught": false,
        "x": 270,
        "y": 4380,
        "wires": [
            [
                "eacad089ec7f2e6f"
            ]
        ]
    },
    {
        "id": "aeaa99f2.5cf4f8",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "check X sat",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3670,
        "y": 220,
        "wires": []
    },
    {
        "id": "5aa49bbf.e8b304",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Celestrak_req_NORBI",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.com/NORAD/elements/gp.php?CATNR=51087",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 280,
        "y": 740,
        "wires": [
            [
                "4538bc69.22afe4",
                "d83b568b192310f6"
            ]
        ]
    },
    {
        "id": "4538bc69.22afe4",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 780,
        "wires": [
            [
                "127ee21c.b3153e"
            ],
            []
        ]
    },
    {
        "id": "127ee21c.b3153e",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 300,
        "y": 820,
        "wires": [
            [
                "3d2822d5.9f85de",
                "80b8871a94e1c476"
            ],
            []
        ]
    },
    {
        "id": "3d2822d5.9f85de",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle-celestrak\",\n payload:msg.payload,\n //body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 860,
        "wires": [
            [
                "5927d4ed.88df2c"
            ]
        ]
    },
    {
        "id": "5927d4ed.88df2c",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 270,
        "y": 900,
        "wires": [
            [
                "4f22e057.0b261"
            ]
        ]
    },
    {
        "id": "4f22e057.0b261",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 450,
        "y": 900,
        "wires": [
            [
                "8dffd9504e4178a6",
                "0bf45204b0f771f7",
                "24f7737fe3d4b910",
                "2b2fa0a36bd2a3c4"
            ]
        ]
    },
    {
        "id": "e3a04705.5ea298",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TLE-CUSTOM",
        "func": "\n   return{\n topic:\"tle\",\n paths:null,\n payload:[msg.paths.path_1, msg.paths.path_2],\n body:null\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 860,
        "wires": [
            [
                "09b6f94b45eb28b7",
                "b8234c2a75bb5ae9",
                "823834c6c8859a3a"
            ]
        ]
    },
    {
        "id": "806158a8.2a45d8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TLE-1",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:msg.topic,\n payload:msg.payload[0].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 860,
        "wires": [
            [
                "292964d19c921b46"
            ]
        ]
    },
    {
        "id": "bad3f015.92d69",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TLE-2",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic: msg.topic,\n payload: msg.payload[1].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 900,
        "wires": [
            [
                "e946fe5a6f3b792e"
            ]
        ]
    },
    {
        "id": "c4bc0507.a5aa28",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 1000,
        "wires": [
            [
                "b3804737c3bc7442"
            ]
        ]
    },
    {
        "id": "912d16a.67297e8",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 960,
        "wires": [
            [
                "b3804737c3bc7442"
            ]
        ]
    },
    {
        "id": "f047630c.597cf",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TLE-2-edit",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n// This was changed during the training of the space commandement trainees it aims at keeping the TLE format for inclination greater than 100 with 3 digits\n\n// Latest version has no more test for the inclinaison as formating is done by the tlesetter\n     return{\n topic:\"tle\",\n payload: \"2 13601 \"+msg.paths.path_2.incli+\" \"+msg.paths.path_2.raan+\" \"+msg.paths.path_2.ecc+\" \"+msg.paths.path_2.aop+\" \"+msg.paths.path_2.meana+\" \"+msg.paths.path_2.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 940,
        "wires": [
            [
                "6dcb91d.1b8e47"
            ]
        ]
    },
    {
        "id": "788aabf0.013d94",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 880,
        "wires": [
            [
                "ef029d22.ba5f5"
            ]
        ]
    },
    {
        "id": "6dcb91d.1b8e47",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2210,
        "y": 940,
        "wires": [
            [
                "ef029d22.ba5f5"
            ]
        ]
    },
    {
        "id": "ef029d22.ba5f5",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "paths": "[\"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1880,
        "y": 860,
        "wires": [
            [
                "e3a04705.5ea298",
                "211ce65b221c6d6b"
            ],
            []
        ]
    },
    {
        "id": "f6ee9f4a.0abf9",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "msg.paths.path_1[9] or [10]",
        "info": "",
        "x": 2070,
        "y": 980,
        "wires": []
    },
    {
        "id": "8c66adb9.78a24",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "message to dashboard1",
        "func": "msg.payload = \"VTS initialized\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 4520,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "ccc1c309.94261",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "message to dashboard2",
        "func": "msg.payload = \"Time set\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 4880,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "f4e8516e.d638a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "message to dashboard3",
        "func": "msg.payload = \"VTS PLAY\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 4560,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "97bf463.9b785b8",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "API REST IN",
        "links": [
            "5a569638.12c268",
            "bd9059ba.e28e78"
        ],
        "x": 2825,
        "y": 4600,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "8be87eed.6b61d",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "file updated in",
        "links": [
            "5c29a6fb.e5fb08"
        ],
        "x": 2825,
        "y": 4760,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "3ebdce04.545c52",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "Color Mapping",
        "func": "switch (msg.payload) {\n\ncase \"VTS project files updated\" : \n    msg.color = \"lime\";\n    break;\n    \ncase \"VTS API ready\" : \n    msg.color = \"yellow\";\n    break;\n\ncase \"Time set\" : \n    msg.color = \"yellow\";\n    break; \n    \ncase \"VTS PLAY\" : \n    msg.color = \"lime\";\n    break;  \n\ncase \"VTS initialized\" : \n    msg.color = \"yellow\";\n    break;  \n\ncase \"VTS PAUSE\" : \n    msg.color = \"red\";\n    break;  \n    \ncase \"INIT VTS\" : \n    msg.color = \"yellow\";\n    break;  \n    \ncase \"Visi window written in DB\" : \n    msg.color = \"lime\";\n    break;\n    \ncase \"Angular data written in DB\": \n    msg.color = \"lime\";\n    break;\n    \ncase \"Antenna Tracker files completed\" : \n    msg.color = \"lime\";\n    break;\n    \ndefault : \n    msg.color = \"red\";\n    break;\n}\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3130,
        "y": 4560,
        "wires": [
            []
        ]
    },
    {
        "id": "82142810.e8ee98",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "message to dashboard0",
        "func": "msg.payload = \"VTS PAUSE\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 4840,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "c02b28f9.44f608",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "message to dashboard7",
        "func": "msg.payload = \"INIT VTS\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 4800,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "f48249b.dec28b8",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "angular IN",
        "links": [
            "8e88ac69.5d4e4",
            "bb2c4b73.b325b8",
            "986279ab.994688"
        ],
        "x": 2825,
        "y": 4640,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "becd8ee3.9efcd",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "visi IN",
        "links": [
            "2e62eb9d.201534",
            "48265ed.41847a",
            "918bdb58.54e5a8"
        ],
        "x": 2825,
        "y": 4680,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "bd944618.65d4c8",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "Antenna files IN",
        "links": [
            "a3dc0636.a498c8",
            "f6185593.86e148",
            "601c3227.d4d72c"
        ],
        "x": 2825,
        "y": 4720,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "b538102e.235bb",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "g": "1e404e3b.14ce32",
        "name": "TLE-file-storage",
        "filename": "TLE_STORK.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1580,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "eea2e68b.c73728",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "1e404e3b.14ce32",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1710,
        "y": 220,
        "wires": [
            [
                "a10e1e99.b755e",
                "86ee657f.dfff28"
            ]
        ]
    },
    {
        "id": "f9ce7744.af89a8",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "1e404e3b.14ce32",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1550,
        "y": 220,
        "wires": [
            [
                "eea2e68b.c73728"
            ]
        ]
    },
    {
        "id": "287ac47f.0441ac",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "1e404e3b.14ce32",
        "name": "MACHINE DEPENDENCE",
        "info": "TLE_STORK.txt",
        "x": 1610,
        "y": 120,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "a10e1e99.b755e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "TLE1-2_STORK",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 240,
        "wires": [
            [
                "64e005a8c862bfaf",
                "6f5ae58615d925eb",
                "24e475a7e7cc30b0",
                "0fe194477cfd115a"
            ]
        ]
    },
    {
        "id": "f48c422f.86566",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "TLE injection",
        "info": "",
        "x": 2470,
        "y": 200,
        "wires": []
    },
    {
        "id": "8f9784ae.86ddc8",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Ground Stat injection",
        "info": "",
        "x": 2350,
        "y": 120,
        "wires": []
    },
    {
        "id": "b6ca8b9b.ec16d8",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Last Time Set",
        "info": "",
        "x": 2350,
        "y": 60,
        "wires": []
    },
    {
        "id": "86ee657f.dfff28",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Query to get Stations",
        "func": "msg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 160,
        "wires": [
            [
                "d25089c5.16ad98"
            ]
        ]
    },
    {
        "id": "d25089c5.16ad98",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Get stations",
        "collection": "ground_stations",
        "operation": "find",
        "x": 2550,
        "y": 120,
        "wires": [
            [
                "804d4875e2f1648a"
            ]
        ]
    },
    {
        "id": "f724ce42.a2232",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "AEM-OEM-MEM-VTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4140,
        "y": 140,
        "wires": []
    },
    {
        "id": "58ea7c57.11f754",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "http request LLA",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://backend:8000/vts",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 3900,
        "y": 180,
        "wires": [
            [
                "a5bc4015.3f8fa",
                "72f9a7c1e4e8ac50"
            ]
        ]
    },
    {
        "id": "a5bc4015.3f8fa",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "LLA-VISIBILITY",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4120,
        "y": 180,
        "wires": []
    },
    {
        "id": "3dce35b.ba5adca",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "Sub-Module VTS files Updating",
        "info": "",
        "x": 4110,
        "y": 100,
        "wires": []
    },
    {
        "id": "105fdd91.9d22d2",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "joinwait reload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3900,
        "y": 220,
        "wires": []
    },
    {
        "id": "e8df78b.012af88",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "API request preparation",
        "info": "",
        "x": 3660,
        "y": 100,
        "wires": []
    },
    {
        "id": "4de09aa7.179f04",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "MACHINE DEPENDENCE",
        "info": "TLE_STORK.txt",
        "x": 4130,
        "y": 220,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "848d6f10.6746c",
        "type": "complete",
        "z": "7c68352c.1b47bc",
        "g": "4e981e1c.9c0d",
        "name": "Trigger-Time",
        "scope": [
            "b9a6ef87.24de3"
        ],
        "uncaught": false,
        "x": 240,
        "y": 3740,
        "wires": [
            [
                "97d64ebb.eedeb"
            ]
        ]
    },
    {
        "id": "97d64ebb.eedeb",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "4e981e1c.9c0d",
        "name": "triggerout",
        "links": [
            "f10e7267.4caff",
            "ef2c826e.d9abc",
            "d3182296.0de68",
            "e308961f59c879b4",
            "3d23bd653343df8f"
        ],
        "x": 365,
        "y": 3740,
        "wires": []
    },
    {
        "id": "b4ed5b61.777588",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "Celestrak_request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.com/NORAD/elements/gp.php?CATNR=42792",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 570,
        "y": 220,
        "wires": [
            [
                "a011d9bd.cb5668",
                "be5b3468b95dc183"
            ]
        ]
    },
    {
        "id": "a011d9bd.cb5668",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 220,
        "wires": [
            [
                "2002146a.dd37ac"
            ],
            [
                "8f00d092.2ceaf"
            ]
        ]
    },
    {
        "id": "2002146a.dd37ac",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1040,
        "y": 200,
        "wires": [
            [
                "52cc4274.d51c7c",
                "4af158778ce1bf1e"
            ],
            []
        ]
    },
    {
        "id": "8f00d092.2ceaf",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "HTTP code error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 240,
        "wires": []
    },
    {
        "id": "52cc4274.d51c7c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"TLE data\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 180,
        "wires": [
            [
                "b538102e.235bb",
                "f9ce7744.af89a8"
            ]
        ]
    },
    {
        "id": "a29ee050.688fc",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "Sub-Module TLE sourcing",
        "info": "",
        "x": 330,
        "y": 120,
        "wires": []
    },
    {
        "id": "b9a6ef87.24de3",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "CELESTRAK REQUESTS",
        "links": [
            "960b681e.848468",
            "a763310fdf831c66",
            "4adc50620c1ab5b3",
            "37ad0f5db69a0a92"
        ],
        "x": 215,
        "y": 280,
        "wires": [
            [
                "b4ed5b61.777588",
                "5aa49bbf.e8b304",
                "0ddd48be7ff5da84",
                "83de099b2fa78eaa",
                "71543d1f07fc776a",
                "2c3cb7c6e5582712",
                "fdeaa62f.5f5688"
            ]
        ]
    },
    {
        "id": "a43c137e.63e62",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "Select the Celestrak URL for TLE",
        "info": "",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "75ace4d0.f680ac",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "CELESTRAK DEPENDENCE",
        "info": "Adapt URL link to Celestrak",
        "x": 560,
        "y": 160,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "68e5ba45.705be4",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 1330,
        "y": 4280,
        "wires": [
            [
                "7b763b58.51ce74"
            ]
        ]
    },
    {
        "id": "7e174054.f4b3",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "name": "Sub-Module STORK Dashboard",
        "info": "",
        "x": 1650,
        "y": 4200,
        "wires": []
    },
    {
        "id": "126451f0.88e04e",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "name": "msg13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 4340,
        "wires": []
    },
    {
        "id": "18880b23.8d3665",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "name": "Select the uphere.space URL with sat ID",
        "info": "",
        "x": 1340,
        "y": 4160,
        "wires": []
    },
    {
        "id": "76a24cf9.258434",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "name": "Name to Dashboard",
        "func": "msg.payload = msg.topic\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 4380,
        "wires": [
            [
                "a026019c.78bc9"
            ]
        ]
    },
    {
        "id": "a026019c.78bc9",
        "type": "ui_text",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "group": "89c6e42c.26d338",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Sat name",
        "label": "Satellite name",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1580,
        "y": 4380,
        "wires": []
    },
    {
        "id": "1e4d8792.74f5a8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "name": "Altitude to Dashboard",
        "func": "msg.payload = msg.mailing\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 4420,
        "wires": [
            [
                "cedd76e1.9e8238"
            ]
        ]
    },
    {
        "id": "cedd76e1.9e8238",
        "type": "ui_text",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "group": "89c6e42c.26d338",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Altitude",
        "label": "Altitude (km)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1580,
        "y": 4420,
        "wires": []
    },
    {
        "id": "7b763b58.51ce74",
        "type": "ui_artlessgauge",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "group": "3dabe8df.a10df8",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "Sat Velocity",
        "icon": "fa-rocket",
        "label": "Satellite Velocity",
        "unit": "km/s",
        "layout": "radial",
        "decimals": "3",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 7.2,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 7.8,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1590,
        "y": 4280,
        "wires": []
    },
    {
        "id": "f49cc726b786fa1e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "TLE-CUSTOM",
        "func": "\n   return{\n topic:\"tle\",\n paths:null,\n payload:[msg.paths.path_1, msg.paths.path_2],\n body:null\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 2180,
        "wires": [
            [
                "c98c1a2e433103ab",
                "122962f6cadc8f0a",
                "91672903e0e718ac"
            ]
        ]
    },
    {
        "id": "b41819f36e747855",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "TLE-1",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle1\",\n payload:msg.payload[0].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 2180,
        "wires": [
            [
                "9a301d139b066c7b"
            ]
        ]
    },
    {
        "id": "5ba1af6f8dddc83a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "TLE-2",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle2\",\n payload: msg.payload[1].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 2240,
        "wires": [
            [
                "975910363c080bd1"
            ]
        ]
    },
    {
        "id": "975910363c080bd1",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1430,
        "y": 2240,
        "wires": [
            [
                "eaa614457517634c"
            ]
        ]
    },
    {
        "id": "eaa614457517634c",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1550,
        "y": 2240,
        "wires": [
            [
                "9bef072d9c28af30",
                "c3ac477d2c124c79"
            ]
        ]
    },
    {
        "id": "c98c1a2e433103ab",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "TLE custom",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 2140,
        "wires": []
    },
    {
        "id": "8b8d076ee67ea589",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 2320,
        "wires": [
            [
                "869f204096c7196c"
            ]
        ]
    },
    {
        "id": "9bef072d9c28af30",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 2280,
        "wires": [
            [
                "869f204096c7196c"
            ]
        ]
    },
    {
        "id": "3ff9651d74d8f481",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "TLE-2-edit",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n/*\nif(Number(msg.paths.path_2.incli)>=100){\n     return{\n topic:\"tle\",\n payload: msg.paths.path_3[0]+\" \"+msg.paths.path_3[1]+\" \"+msg.paths.path_2.incli+\" \"+msg.paths.path_2.raan+\" \"+msg.paths.path_2.ecc+\" \"+msg.paths.path_2.aop+\" \"+msg.paths.path_2.meana+\" \"+msg.paths.path_2.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n}\nelse{\n   return{\n topic:\"tle\",\n payload: msg.paths.path_3[0]+\" \"+msg.paths.path_3[1]+\"  \"+msg.paths.path_2.incli+\" \"+msg.paths.path_2.raan+\" \"+msg.paths.path_2.ecc+\" \"+msg.paths.path_2.aop+\" \"+msg.paths.path_2.meana+\" \"+msg.paths.path_2.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n}*/\n\n//                          150523:\n//\n// The setter of B2 R12 might not work 100% yet\nreturn{\n topic:\"tle\",\n payload: \"2 13603 \"+msg.paths.path_2.incli+\" \"+msg.paths.path_2.raan+\" \"+msg.paths.path_2.ecc+\" \"+msg.paths.path_2.aop+\" \"+msg.paths.path_2.meana+\" \"+msg.paths.path_2.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 2260,
        "wires": [
            [
                "2cfdedfca9832603"
            ]
        ]
    },
    {
        "id": "c3969790825257b7",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 2200,
        "wires": [
            [
                "2ec49ab58b009cf6"
            ]
        ]
    },
    {
        "id": "2cfdedfca9832603",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2210,
        "y": 2260,
        "wires": [
            [
                "2ec49ab58b009cf6"
            ]
        ]
    },
    {
        "id": "2ec49ab58b009cf6",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "",
        "paths": "[\"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1880,
        "y": 2160,
        "wires": [
            [
                "f49cc726b786fa1e",
                "400ff9cd912f5dd6"
            ],
            []
        ]
    },
    {
        "id": "05269e71ae136bf8",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "msg.paths.path_1[9] or [10]",
        "info": "",
        "x": 2070,
        "y": 2300,
        "wires": []
    },
    {
        "id": "852b55c9920045c0",
        "type": "ui_iframe",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "group": "89c6e42c.26d338",
        "name": "iframe for Home",
        "order": 3,
        "width": 6,
        "height": 13,
        "url": "https://uphere.space/satellites/42792",
        "origin": "*",
        "scale": 100,
        "x": 1340,
        "y": 4200,
        "wires": [
            []
        ]
    },
    {
        "id": "d733ae2362598440",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "check output blue1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1850,
        "y": 700,
        "wires": []
    },
    {
        "id": "804d4875e2f1648a",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2710,
        "y": 180,
        "wires": [
            [
                "8d2d46d99b3c70d1",
                "47e714de12c6ceba",
                "8943bd9a10115aea"
            ]
        ]
    },
    {
        "id": "64e005a8c862bfaf",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2670,
        "y": 240,
        "wires": [
            [
                "f2107460f7852ca0",
                "bd4011b41b1eed28",
                "be24a5a05268a710"
            ]
        ]
    },
    {
        "id": "09b6f94b45eb28b7",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2390,
        "y": 940,
        "wires": [
            [
                "6e46ffd229497b6c",
                "13e6783f699d391f"
            ]
        ]
    },
    {
        "id": "bb8a0fc95f3a4a04",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2410,
        "y": 1700,
        "wires": [
            [
                "b51e5d79b66eedc6",
                "1a19adb69a35a3a7"
            ]
        ]
    },
    {
        "id": "122962f6cadc8f0a",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2450,
        "y": 2240,
        "wires": [
            [
                "eb6cf227e5b57995",
                "41a32e4cc747f910"
            ]
        ]
    },
    {
        "id": "de7eddc336816d9b",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_6",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_6",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2410,
        "y": 2760,
        "wires": [
            [
                "1da0e65edf84477c",
                "d51fcddeda0e0de7"
            ]
        ]
    },
    {
        "id": "e946fe5a6f3b792e",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1450,
        "y": 900,
        "wires": [
            [
                "db13b17e988b264f"
            ]
        ]
    },
    {
        "id": "db13b17e988b264f",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1450,
        "y": 940,
        "wires": [
            [
                "dd63fe1a15842d7c",
                "912d16a.67297e8"
            ]
        ]
    },
    {
        "id": "b3804737c3bc7442",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "paths": "[\"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1880,
        "y": 980,
        "wires": [
            [
                "f047630c.597cf"
            ],
            []
        ]
    },
    {
        "id": "dd63fe1a15842d7c",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 920,
        "wires": [
            [
                "b3804737c3bc7442"
            ]
        ]
    },
    {
        "id": "c3ac477d2c124c79",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 2240,
        "wires": [
            [
                "869f204096c7196c"
            ]
        ]
    },
    {
        "id": "869f204096c7196c",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "",
        "paths": "[\"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1880,
        "y": 2260,
        "wires": [
            [
                "3ff9651d74d8f481"
            ],
            []
        ]
    },
    {
        "id": "6f5ae58615d925eb",
        "type": "ui_text",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "group": "3dabe8df.a10df8",
        "order": 6,
        "width": 6,
        "height": 3,
        "name": "TLE display",
        "label": "TLE",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2670,
        "y": 280,
        "wires": []
    },
    {
        "id": "26627082a406277b",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "OEM-VTS-Update",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"10\"\t    },\t    \"satellites\": [\t      {\t            \"name\": \"Sat\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_1[0],\t            \"line2\": msg.paths.path_1[1]\t        },\t        {\t            \"name\": \"PLEIADES1A\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_2[0],\t            \"line2\": msg.paths.path_2[1]\t        },\t        {\t            \"name\": \"PLEIADES1B\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_11[0],\t            \"line2\": msg.paths.path_11[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO3\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_10[0],\t            \"line2\": msg.paths.path_10[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO4\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_9[0],\t            \"line2\": msg.paths.path_9[1]\t        },\t        {\t            \"name\": \"BLUE1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_3[0],\t            \"line2\": msg.paths.path_3[1]\t        },\t        {\t            \"name\": \"BLUE2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_4[0],\t            \"line2\": msg.paths.path_4[1]\t        },\t        {\t            \"name\": \"RED1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_5[0],\t            \"line2\": msg.paths.path_5[1]\t        },\t        {\t            \"name\": \"RED2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_6[0],\t            \"line2\": msg.paths.path_6[1]\t        }\t    ],\t    \"groundStations\": [\t        msg.paths.path_7\t    ],\t    \"options\": {\t        \t        \"LLA\": {}\t        \t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3650,
        "y": 140,
        "wires": [
            [
                "8d1ea8610afad551"
            ]
        ]
    },
    {
        "id": "79a8517a3d50ba46",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"10\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"Sat\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_1[0],\t            \"line2\": msg.paths.path_1[1]\t        },\t        {\t            \"name\": \"PLEIADES1A\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_2[0],\t            \"line2\": msg.paths.path_2[1]\t        },\t        {\t            \"name\": \"PLEIADES1B\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_11[0],\t            \"line2\": msg.paths.path_11[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO3\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_10[0],\t            \"line2\": msg.paths.path_10[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO4\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_9[0],\t            \"line2\": msg.paths.path_9[1]\t        },\t        {\t            \"name\": \"BLUE1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_3[0],\t            \"line2\": msg.paths.path_3[1]\t        },\t        {\t            \"name\": \"BLUE2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_4[0],\t            \"line2\": msg.paths.path_4[1]\t        },\t        {\t            \"name\": \"RED1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_5[0],\t            \"line2\": msg.paths.path_5[1]\t        },\t        {\t            \"name\": \"RED2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_6[0],\t            \"line2\": msg.paths.path_6[1]\t        }\t    ],\t    \"groundStations\": [\t        msg.paths.path_7\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        }\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3660,
        "y": 180,
        "wires": [
            [
                "105fdd91.9d22d2",
                "58ea7c57.11f754"
            ]
        ]
    },
    {
        "id": "ed91f7078814f403",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "",
        "paths": "[\"path_12\",\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3400,
        "y": 160,
        "wires": [
            [
                "26627082a406277b",
                "79a8517a3d50ba46",
                "aeaa99f2.5cf4f8"
            ],
            []
        ]
    },
    {
        "id": "bc58e5ec55a98be1",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "tinygsdata-function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"TinyGS API data\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 4680,
        "wires": [
            [
                "58539589f8fcb0c9"
            ]
        ]
    },
    {
        "id": "c7eaa84961499300",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 4680,
        "wires": [
            [
                "bc58e5ec55a98be1"
            ],
            []
        ]
    },
    {
        "id": "10f3d8edfb57378f",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 4680,
        "wires": [
            [
                "c7eaa84961499300"
            ],
            []
        ]
    },
    {
        "id": "5c9f53db8c9861c7",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "tinygsapi_request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.tinygs.com/v1/packets",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 250,
        "y": 4680,
        "wires": [
            [
                "10f3d8edfb57378f"
            ]
        ]
    },
    {
        "id": "ca60a913a04c776b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "tinyGS-CHECK",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 4640,
        "wires": []
    },
    {
        "id": "58539589f8fcb0c9",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1090,
        "y": 4680,
        "wires": [
            [
                "c15b273a542fde54"
            ]
        ]
    },
    {
        "id": "c15b273a542fde54",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "loop1",
        "func": "\n//msg.payload.packets.forEach(item => {\n//    if(item.satellite = \"Norbi\"){\n//        return item\n//    }\n\n//})\n\nvar json_data = msg.payload;\nvar result = [];\n\nfor(var i in json_data)\n    result.push([i, json_data [i]]);\n\nmsg.payload = result;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 4680,
        "wires": [
            [
                "9f1af8dc1eb5e870"
            ]
        ]
    },
    {
        "id": "9f1af8dc1eb5e870",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "reshape",
        "func": "msg.payload = msg.payload[0][1];\nreturn msg;\n\n\n\n//msg.payload[0][1].forEach(item => {\n//    if(item.satellite = \"Norbi\"){\n//        msg.payload = item.satellite;\n//        return msg;\n//    }\n\n//})\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 4680,
        "wires": [
            [
                "502dff010f3a7547",
                "ca60a913a04c776b"
            ]
        ]
    },
    {
        "id": "502dff010f3a7547",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "loop2",
        "func": "//msg.payload.forEach(item => {\n//msg.payload = item[10];\n//    return msg;\n    //if(item.satellite == \"Norbi\"){\n    //    msg.payload = item.satellite;\n    //    return msg;\n    //}\n//})\n\nvar arraylen = msg.payload.length;\nvar result = [];\nfor(var i=0;i<arraylen;i++){\n    if(msg.payload[i].satellite==\"Norbi\"){\n        result.push(msg.payload[i].parsed.payload.tinygsMainVoltage);\n        result.push(msg.payload[i].parsed.payload.tinygsTemp);\n        result.push(msg.payload[i].parsed.payload.tinygsLoadPower);\n    }\n    \n}\nmsg.payload = result;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 4680,
        "wires": [
            [
                "bac813c77cbdeddf",
                "753a66a0e91c8b65",
                "dc8f652dc05f134f"
            ]
        ]
    },
    {
        "id": "1316eb234f76fca6",
        "type": "ui_artlessgauge",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "group": "3dabe8df.a10df8",
        "order": 4,
        "width": 3,
        "height": 3,
        "name": "Battery Temp",
        "icon": "fa-thermometer-half",
        "label": "Battery Temp",
        "unit": "°C",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#ff0000",
                "t": "min",
                "dot": 0
            },
            {
                "val": 40,
                "col": "#ff0000",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1890,
        "y": 4720,
        "wires": []
    },
    {
        "id": "fd1e7f82277b7ef9",
        "type": "ui_artlessgauge",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "group": "3dabe8df.a10df8",
        "order": 3,
        "width": 3,
        "height": 3,
        "name": "Battery Voltage",
        "icon": "fa-battery-half",
        "label": "Battery Voltage",
        "unit": "mV",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1900,
        "y": 4680,
        "wires": []
    },
    {
        "id": "13dd1dc8e33f6fa8",
        "type": "ui_artlessgauge",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "group": "3dabe8df.a10df8",
        "order": 5,
        "width": 3,
        "height": 3,
        "name": "Tx Power",
        "icon": "fa-bolt ",
        "label": "Load Power",
        "unit": "mW",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 5000,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1880,
        "y": 4760,
        "wires": []
    },
    {
        "id": "bac813c77cbdeddf",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "battery-data",
        "func": "var len = msg.payload.length;\nmsg.payload = msg.payload[0];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 4680,
        "wires": [
            [
                "fd1e7f82277b7ef9"
            ]
        ]
    },
    {
        "id": "dc8f652dc05f134f",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "TxPower-data",
        "func": "var len = msg.payload.length;\nmsg.payload = msg.payload[2];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 4760,
        "wires": [
            [
                "13dd1dc8e33f6fa8"
            ]
        ]
    },
    {
        "id": "753a66a0e91c8b65",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "BatTemp-data",
        "func": "var len = msg.payload.length;\nmsg.payload = msg.payload[1];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 4720,
        "wires": [
            [
                "1316eb234f76fca6"
            ]
        ]
    },
    {
        "id": "292964d19c921b46",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 760,
        "wires": [
            [
                "40b0f757fccedcae"
            ]
        ]
    },
    {
        "id": "d0db2a049689d1eb",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "setpath1-in",
        "links": [
            "139d87a61de8fb2d",
            "cb9310778af334ad"
        ],
        "x": 1335,
        "y": 680,
        "wires": [
            [
                "40b0f757fccedcae"
            ]
        ]
    },
    {
        "id": "40b0f757fccedcae",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "paths": "[\"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1520,
        "y": 760,
        "wires": [
            [
                "d733ae2362598440",
                "5b94fea4bc8be85c"
            ],
            []
        ]
    },
    {
        "id": "0ddd48be7ff5da84",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "Celestrak_request_PHR",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.com/NORAD/elements/gp.php?CATNR=39019",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 350,
        "y": 3120,
        "wires": [
            [
                "3006319b8fdd4fb3",
                "1bb78f1585330b5c"
            ]
        ]
    },
    {
        "id": "3006319b8fdd4fb3",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 3120,
        "wires": [
            [
                "02e0e1d732f50700",
                "1dbead4c928ed8d1"
            ],
            []
        ]
    },
    {
        "id": "02e0e1d732f50700",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 3120,
        "wires": [
            [
                "70f11a2962c5200c",
                "035c0a7ed2fe3ee2"
            ],
            []
        ]
    },
    {
        "id": "70f11a2962c5200c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"TLE data\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 3120,
        "wires": [
            [
                "30e9c44a36e2a7e3"
            ]
        ]
    },
    {
        "id": "30e9c44a36e2a7e3",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1170,
        "y": 3120,
        "wires": [
            [
                "ee267f8df3cc8adb"
            ]
        ]
    },
    {
        "id": "ee267f8df3cc8adb",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1330,
        "y": 3120,
        "wires": [
            [
                "498533a743c018ee"
            ]
        ]
    },
    {
        "id": "498533a743c018ee",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 3120,
        "wires": [
            [
                "312b74e543efb25a",
                "e8094a552d3b4227"
            ]
        ]
    },
    {
        "id": "312b74e543efb25a",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2390,
        "y": 3120,
        "wires": [
            [
                "a78ca4fbc4d9e57b",
                "24606f59b812db66"
            ]
        ]
    },
    {
        "id": "ed7680e16e20cd8b",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_9",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_9",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2390,
        "y": 3360,
        "wires": [
            [
                "56cdcf6595bfaf55",
                "ac147f0729ad1810"
            ]
        ]
    },
    {
        "id": "83de099b2fa78eaa",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "Celestrak_request_PHR",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.com/NORAD/elements/gp.php?CATNR=49070",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 370,
        "y": 3360,
        "wires": [
            [
                "a5c604765ba0012f",
                "a1bc0b9e16a50e7c"
            ]
        ]
    },
    {
        "id": "a5c604765ba0012f",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 3360,
        "wires": [
            [
                "5306b898760f6177",
                "9e1f5debf634ca3b"
            ],
            []
        ]
    },
    {
        "id": "5306b898760f6177",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 3360,
        "wires": [
            [
                "af694b9214904c89",
                "5312b82aabb220d1"
            ],
            []
        ]
    },
    {
        "id": "af694b9214904c89",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"TLE data\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 3360,
        "wires": [
            [
                "22cfa6c3a9fd3b68"
            ]
        ]
    },
    {
        "id": "22cfa6c3a9fd3b68",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1170,
        "y": 3360,
        "wires": [
            [
                "1a705817a9b1fd99"
            ]
        ]
    },
    {
        "id": "1a705817a9b1fd99",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1330,
        "y": 3360,
        "wires": [
            [
                "55f25125e4360666"
            ]
        ]
    },
    {
        "id": "55f25125e4360666",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 3360,
        "wires": [
            [
                "ed7680e16e20cd8b",
                "c564d0a1ae3e8ebc"
            ]
        ]
    },
    {
        "id": "52ce01ac6b3556ae",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2390,
        "y": 3560,
        "wires": [
            [
                "f708c78a01711d59",
                "68c5a6850e745a21"
            ]
        ]
    },
    {
        "id": "71543d1f07fc776a",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "Celestrak_request_PHR",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.com/NORAD/elements/gp.php?CATNR=48268",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 370,
        "y": 3560,
        "wires": [
            [
                "2344a2a78d98bf1d",
                "a25fb990a2d35418"
            ]
        ]
    },
    {
        "id": "2344a2a78d98bf1d",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 3560,
        "wires": [
            [
                "d35acc815acea49d",
                "efae4a1d579c52c5"
            ],
            []
        ]
    },
    {
        "id": "d35acc815acea49d",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 3560,
        "wires": [
            [
                "a387ab4ec014cdc2",
                "f342466cf1c63a12"
            ],
            []
        ]
    },
    {
        "id": "a387ab4ec014cdc2",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"TLE data\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 3560,
        "wires": [
            [
                "37f4e2f7dffac770"
            ]
        ]
    },
    {
        "id": "37f4e2f7dffac770",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1170,
        "y": 3560,
        "wires": [
            [
                "d97b6cdaaa326f22"
            ]
        ]
    },
    {
        "id": "d97b6cdaaa326f22",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1330,
        "y": 3560,
        "wires": [
            [
                "1fef9e3ba77e6407"
            ]
        ]
    },
    {
        "id": "1fef9e3ba77e6407",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 3560,
        "wires": [
            [
                "52ce01ac6b3556ae",
                "044b0506b8870c46"
            ]
        ]
    },
    {
        "id": "9a301d139b066c7b",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2120,
        "wires": [
            [
                "79a7ad9924b7b167"
            ]
        ]
    },
    {
        "id": "79a7ad9924b7b167",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "",
        "paths": "[\"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1520,
        "y": 2120,
        "wires": [
            [
                "423f11cfef7f70ae"
            ],
            []
        ]
    },
    {
        "id": "a58b1046b5db4021",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "RED1 setpath1-in",
        "links": [
            "139d87a61de8fb2d",
            "ee6ec31b290a5ef2",
            "9a9d09c333b759d3",
            "a2beac1bb901c9fa"
        ],
        "x": 1445,
        "y": 2160,
        "wires": [
            [
                "79a7ad9924b7b167"
            ]
        ]
    },
    {
        "id": "8d9323cd2f7ede6a",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "name": "",
        "group": "d4e830c4b00daeae",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "R2 TLE Update",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FF0000",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 80,
        "y": 2420,
        "wires": [
            [
                "ea6adf23dbd1238c",
                "6fcdf514dbc2c5ec",
                "635fcdb8c39d0787",
                "db7e42c1aee637bd",
                "781ddedeca0fbcdf",
                "3315d3a560dc2c89",
                "935ddb7150ce199c",
                "0e28fb103f54c09f",
                "a7c69bfe050e2d25",
                "2a251f56fc02b247"
            ]
        ]
    },
    {
        "id": "7b1cbf098c287c54",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "name": "",
        "group": "81d0e5ee7c52f38a",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "B2 TLE Update",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#B5FC48",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 80,
        "y": 1380,
        "wires": [
            [
                "043192e17954a39e",
                "a9760725cef4a105",
                "ad7abde181040a3a",
                "5bf00d0b73be675b",
                "38bb7b313e5329cd",
                "cfcab2023a094cdc",
                "eeb7ac39abf2e2c4",
                "9fd7873df4929469",
                "e65b738ac6575fd6",
                "4bedade718858642"
            ]
        ]
    },
    {
        "id": "6a8a1db5ea51b0c0",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "name": "",
        "group": "c02dcce485dfb187",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "R1 TLE Update",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FF0000",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 1920,
        "wires": [
            [
                "a85d227183423e95",
                "17f7adb98b76a495",
                "8c60ccd3e3967358",
                "bd8de8502f02c463",
                "5d73170620ea1430",
                "09590295c75c8703",
                "7b44310150aad18e",
                "8e67ffcbdb4c6308",
                "607ff3a5cfe9a070",
                "b6d33c55a0d06540"
            ]
        ]
    },
    {
        "id": "d9df6459a6ea96ab",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "name": "",
        "group": "cbb369e33298cfeb",
        "order": 7,
        "width": 10,
        "height": 1,
        "passthru": false,
        "label": "B1 TLE Update",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#B5FC48",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 80,
        "y": 1120,
        "wires": [
            [
                "abf049d1b139611c",
                "5e9981620393537d",
                "de1b34b4051c103e",
                "27e3cd807b7dd36f",
                "cf8728c9f3d62ae1",
                "813663ae8c5e3d5d",
                "ec94bcaf7ccbbade",
                "b99ef16ba1924c22",
                "98e2adb0a1d844fb",
                "472fd34f5a4b63ee",
                "7abf459108d1bb9a"
            ]
        ]
    },
    {
        "id": "ec94bcaf7ccbbade",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB2",
        "mode": "link",
        "links": [
            "c9235065a31da113"
        ],
        "x": 905,
        "y": 1220,
        "wires": []
    },
    {
        "id": "b99ef16ba1924c22",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toR1",
        "mode": "link",
        "links": [
            "118f0f492f55ac0a"
        ],
        "x": 905,
        "y": 1260,
        "wires": []
    },
    {
        "id": "98e2adb0a1d844fb",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toR2",
        "mode": "link",
        "links": [
            "34c17ae1e756d864"
        ],
        "x": 905,
        "y": 1300,
        "wires": []
    },
    {
        "id": "cfcab2023a094cdc",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB1",
        "mode": "link",
        "links": [
            "af9822fbee098e88"
        ],
        "x": 875,
        "y": 1420,
        "wires": []
    },
    {
        "id": "eeb7ac39abf2e2c4",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toR1",
        "mode": "link",
        "links": [
            "e069d0ea8de103a3",
            "118f0f492f55ac0a"
        ],
        "x": 875,
        "y": 1460,
        "wires": []
    },
    {
        "id": "9fd7873df4929469",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toR2",
        "mode": "link",
        "links": [
            "c623b545a5900465",
            "34c17ae1e756d864"
        ],
        "x": 875,
        "y": 1500,
        "wires": []
    },
    {
        "id": "09590295c75c8703",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB1",
        "mode": "link",
        "links": [
            "af9822fbee098e88"
        ],
        "x": 875,
        "y": 1940,
        "wires": []
    },
    {
        "id": "7b44310150aad18e",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB2",
        "mode": "link",
        "links": [
            "c9235065a31da113"
        ],
        "x": 875,
        "y": 1980,
        "wires": []
    },
    {
        "id": "8e67ffcbdb4c6308",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toR2",
        "mode": "link",
        "links": [
            "34c17ae1e756d864"
        ],
        "x": 875,
        "y": 2020,
        "wires": []
    },
    {
        "id": "3315d3a560dc2c89",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB1",
        "mode": "link",
        "links": [
            "af9822fbee098e88"
        ],
        "x": 905,
        "y": 2480,
        "wires": []
    },
    {
        "id": "935ddb7150ce199c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB2",
        "mode": "link",
        "links": [
            "c9235065a31da113"
        ],
        "x": 905,
        "y": 2520,
        "wires": []
    },
    {
        "id": "0e28fb103f54c09f",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toR1",
        "mode": "link",
        "links": [
            "118f0f492f55ac0a"
        ],
        "x": 905,
        "y": 2560,
        "wires": []
    },
    {
        "id": "af9822fbee098e88",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "upB1 from DB",
        "links": [
            "09590295c75c8703",
            "3315d3a560dc2c89",
            "cfcab2023a094cdc",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6"
        ],
        "x": 1565,
        "y": 1100,
        "wires": [
            [
                "08298fee71f7bff1"
            ]
        ]
    },
    {
        "id": "c9235065a31da113",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "upB2 from DB",
        "links": [
            "7b44310150aad18e",
            "935ddb7150ce199c",
            "ec94bcaf7ccbbade",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6"
        ],
        "x": 1575,
        "y": 1460,
        "wires": [
            [
                "8cddfe5bd7340a5c"
            ]
        ]
    },
    {
        "id": "118f0f492f55ac0a",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "UP R1 from DB",
        "links": [
            "eeb7ac39abf2e2c4",
            "0e28fb103f54c09f",
            "b99ef16ba1924c22",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6"
        ],
        "x": 1835,
        "y": 1980,
        "wires": [
            [
                "9a27c8b91ef9929b"
            ]
        ]
    },
    {
        "id": "34c17ae1e756d864",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "UP R2 From DB",
        "links": [
            "9fd7873df4929469",
            "8e67ffcbdb4c6308",
            "98e2adb0a1d844fb",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6"
        ],
        "x": 1405,
        "y": 2540,
        "wires": [
            [
                "0a0ad7bc6686f46a"
            ]
        ]
    },
    {
        "id": "86b56c5aafa5e5b1",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "fromPHR1B",
        "links": [
            "043192e17954a39e",
            "a85d227183423e95",
            "abf049d1b139611c",
            "ea6adf23dbd1238c"
        ],
        "x": 155,
        "y": 3060,
        "wires": [
            [
                "877f29714a1e351c"
            ]
        ]
    },
    {
        "id": "a5eccb78df072978",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "fromPHR4",
        "links": [
            "17f7adb98b76a495",
            "5e9981620393537d",
            "6fcdf514dbc2c5ec",
            "a9760725cef4a105"
        ],
        "x": 155,
        "y": 3300,
        "wires": [
            [
                "5d65976904a23103"
            ]
        ]
    },
    {
        "id": "1d8f9124f6c023ac",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "fromPHR3",
        "links": [
            "635fcdb8c39d0787",
            "8c60ccd3e3967358",
            "ad7abde181040a3a",
            "de1b34b4051c103e"
        ],
        "x": 155,
        "y": 3500,
        "wires": [
            [
                "09553c262bf1ebfe"
            ]
        ]
    },
    {
        "id": "ea6adf23dbd1238c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR1B",
        "mode": "link",
        "links": [
            "d42d5caf3ff36413",
            "86b56c5aafa5e5b1"
        ],
        "x": 395,
        "y": 2480,
        "wires": []
    },
    {
        "id": "6fcdf514dbc2c5ec",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR4",
        "mode": "link",
        "links": [
            "aefdaa7be5886b6e",
            "a5eccb78df072978"
        ],
        "x": 395,
        "y": 2520,
        "wires": []
    },
    {
        "id": "635fcdb8c39d0787",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR3",
        "mode": "link",
        "links": [
            "ef70a4bf5d96cb98",
            "1d8f9124f6c023ac"
        ],
        "x": 395,
        "y": 2560,
        "wires": []
    },
    {
        "id": "a85d227183423e95",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR1B",
        "mode": "link",
        "links": [
            "d42d5caf3ff36413",
            "86b56c5aafa5e5b1"
        ],
        "x": 405,
        "y": 1980,
        "wires": []
    },
    {
        "id": "17f7adb98b76a495",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR4",
        "mode": "link",
        "links": [
            "aefdaa7be5886b6e",
            "a5eccb78df072978"
        ],
        "x": 405,
        "y": 2020,
        "wires": []
    },
    {
        "id": "8c60ccd3e3967358",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR3",
        "mode": "link",
        "links": [
            "ef70a4bf5d96cb98",
            "1d8f9124f6c023ac"
        ],
        "x": 405,
        "y": 2060,
        "wires": []
    },
    {
        "id": "043192e17954a39e",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR1B",
        "mode": "link",
        "links": [
            "d42d5caf3ff36413",
            "86b56c5aafa5e5b1"
        ],
        "x": 375,
        "y": 1420,
        "wires": []
    },
    {
        "id": "a9760725cef4a105",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR4",
        "mode": "link",
        "links": [
            "aefdaa7be5886b6e",
            "a5eccb78df072978"
        ],
        "x": 375,
        "y": 1460,
        "wires": []
    },
    {
        "id": "ad7abde181040a3a",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR3",
        "mode": "link",
        "links": [
            "ef70a4bf5d96cb98",
            "1d8f9124f6c023ac"
        ],
        "x": 375,
        "y": 1500,
        "wires": []
    },
    {
        "id": "abf049d1b139611c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR1B",
        "mode": "link",
        "links": [
            "86b56c5aafa5e5b1"
        ],
        "x": 525,
        "y": 1280,
        "wires": []
    },
    {
        "id": "5e9981620393537d",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR4",
        "mode": "link",
        "links": [
            "aefdaa7be5886b6e",
            "a5eccb78df072978"
        ],
        "x": 525,
        "y": 1320,
        "wires": []
    },
    {
        "id": "de1b34b4051c103e",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR3",
        "mode": "link",
        "links": [
            "ef70a4bf5d96cb98",
            "1d8f9124f6c023ac"
        ],
        "x": 525,
        "y": 1360,
        "wires": []
    },
    {
        "id": "f2107460f7852ca0",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "TLE customSTORK",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2870,
        "y": 300,
        "wires": []
    },
    {
        "id": "8d2d46d99b3c70d1",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "stations output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 120,
        "wires": []
    },
    {
        "id": "27e3cd807b7dd36f",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "B1 to time request TLE",
        "mode": "link",
        "links": [
            "220556fdf5358e27",
            "b003810dbf6c337b"
        ],
        "x": 525,
        "y": 1240,
        "wires": []
    },
    {
        "id": "5bf00d0b73be675b",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "B2 to time request TLE",
        "mode": "link",
        "links": [
            "220556fdf5358e27",
            "56b381ee693e862d",
            "aca2fd577b8d3530"
        ],
        "x": 375,
        "y": 1380,
        "wires": []
    },
    {
        "id": "bd8de8502f02c463",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "R1 to time request TLE",
        "mode": "link",
        "links": [
            "220556fdf5358e27",
            "77a8b9510ab5d91f"
        ],
        "x": 425,
        "y": 1900,
        "wires": []
    },
    {
        "id": "db7e42c1aee637bd",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": " R2 to time request TLE",
        "mode": "link",
        "links": [
            "220556fdf5358e27"
        ],
        "x": 395,
        "y": 2440,
        "wires": []
    },
    {
        "id": "fe5ea50b57aa1c32",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "b1-time-tle-OUT",
        "mode": "link",
        "links": [],
        "x": 1705,
        "y": 800,
        "wires": []
    },
    {
        "id": "b8234c2a75bb5ae9",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 740,
        "wires": [
            [
                "3481f1216259b66e"
            ]
        ]
    },
    {
        "id": "3481f1216259b66e",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2090,
        "y": 740,
        "wires": [
            [
                "c07207dbde9b5985"
            ]
        ]
    },
    {
        "id": "a82cd02c21cae659",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2400,
        "y": 740,
        "wires": []
    },
    {
        "id": "5c3232735d2e2038",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "update all for B1 IN",
        "links": [
            "52e1e45e0c77a7cb",
            "e20adb7a4ba52781",
            "a549a5edfbf10110",
            "9fec14fe875331ba"
        ],
        "x": 85,
        "y": 1060,
        "wires": [
            [
                "abf049d1b139611c",
                "5e9981620393537d",
                "de1b34b4051c103e",
                "27e3cd807b7dd36f",
                "cf8728c9f3d62ae1",
                "ec94bcaf7ccbbade",
                "b99ef16ba1924c22",
                "98e2adb0a1d844fb",
                "472fd34f5a4b63ee",
                "7abf459108d1bb9a"
            ]
        ]
    },
    {
        "id": "211ce65b221c6d6b",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "query to delete b1tlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2370,
        "y": 800,
        "wires": [
            [
                "f5304b8a408542c8"
            ]
        ]
    },
    {
        "id": "f5304b8a408542c8",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 2590,
        "y": 800,
        "wires": []
    },
    {
        "id": "17bd6cd48b2a4ff4",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Tle b1-postMan-In",
        "links": [
            "65421165bbc07ccd",
            "d3a5d62983da93fd",
            "c52109797f5028db"
        ],
        "x": 1335,
        "y": 720,
        "wires": [
            [
                "40b0f757fccedcae"
            ]
        ]
    },
    {
        "id": "48fac77f27ebe694",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2210,
        "y": 300,
        "wires": [
            [
                "00e423d5cecf63ac"
            ]
        ]
    },
    {
        "id": "00e423d5cecf63ac",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2350,
        "y": 300,
        "wires": [
            [
                "cd235fc9d45bd07e"
            ]
        ]
    },
    {
        "id": "cd235fc9d45bd07e",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2510,
        "y": 300,
        "wires": []
    },
    {
        "id": "dd93dec169a1923b",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "query to delete b2tlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 1820,
        "wires": [
            [
                "2b6a6c592423cc9a"
            ]
        ]
    },
    {
        "id": "2b6a6c592423cc9a",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 2090,
        "y": 1820,
        "wires": []
    },
    {
        "id": "91672903e0e718ac",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 2100,
        "wires": [
            [
                "20fb915262d58f6c"
            ]
        ]
    },
    {
        "id": "20fb915262d58f6c",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2230,
        "y": 2100,
        "wires": [
            [
                "2d02dd85c78408df"
            ]
        ]
    },
    {
        "id": "f876564f6733f147",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2700,
        "y": 2100,
        "wires": []
    },
    {
        "id": "3c1ce0f06523580c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query to delete r2tlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 2860,
        "wires": [
            [
                "6e019b3034cd43ce"
            ]
        ]
    },
    {
        "id": "6e019b3034cd43ce",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 2200,
        "y": 2860,
        "wires": []
    },
    {
        "id": "1dbead4c928ed8d1",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "query to delete p1btlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 3160,
        "wires": [
            [
                "8382a53a41598013"
            ]
        ]
    },
    {
        "id": "8382a53a41598013",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 850,
        "y": 3160,
        "wires": []
    },
    {
        "id": "d14cf312fe0a60e0",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 3160,
        "wires": [
            [
                "c8ba9d7bacfdb53a"
            ]
        ]
    },
    {
        "id": "c8ba9d7bacfdb53a",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1390,
        "y": 3160,
        "wires": [
            [
                "f6fcc56248f740f9"
            ]
        ]
    },
    {
        "id": "f6fcc56248f740f9",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1550,
        "y": 3160,
        "wires": []
    },
    {
        "id": "9e1f5debf634ca3b",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "query to delete pneo4tlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 3400,
        "wires": [
            [
                "abedf550a283a82e"
            ]
        ]
    },
    {
        "id": "abedf550a283a82e",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 840,
        "y": 3400,
        "wires": []
    },
    {
        "id": "aebcd6a0a5d13023",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3400,
        "wires": [
            [
                "ed97241f5a2c195c"
            ]
        ]
    },
    {
        "id": "ed97241f5a2c195c",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1370,
        "y": 3400,
        "wires": [
            [
                "b30d48e22e8faab5"
            ]
        ]
    },
    {
        "id": "b30d48e22e8faab5",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1560,
        "y": 3400,
        "wires": []
    },
    {
        "id": "efae4a1d579c52c5",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "query to delete pneo3tlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 3600,
        "wires": [
            [
                "e980327ca9595d9e"
            ]
        ]
    },
    {
        "id": "e980327ca9595d9e",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 880,
        "y": 3600,
        "wires": []
    },
    {
        "id": "dafaa8891883163a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 3600,
        "wires": [
            [
                "e79ac0bebb08ed4b"
            ]
        ]
    },
    {
        "id": "e79ac0bebb08ed4b",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1370,
        "y": 3600,
        "wires": [
            [
                "bbdd5b9313b88193"
            ]
        ]
    },
    {
        "id": "bbdd5b9313b88193",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1560,
        "y": 3600,
        "wires": []
    },
    {
        "id": "d220bc3808928eb3",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 360,
        "wires": [
            [
                "64e005a8c862bfaf"
            ]
        ]
    },
    {
        "id": "7edb0b79e9981fac",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of sattlelatest",
        "collection": "sattlelatest",
        "operation": "find",
        "x": 2300,
        "y": 360,
        "wires": [
            [
                "d220bc3808928eb3"
            ]
        ]
    },
    {
        "id": "5bfdeb3df1dc8e7e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "query for sattlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 360,
        "wires": [
            [
                "7edb0b79e9981fac",
                "86ee657f.dfff28"
            ]
        ]
    },
    {
        "id": "cf8728c9f3d62ae1",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "query for b1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1080,
        "wires": [
            [
                "9218e67ae12ff56e"
            ]
        ]
    },
    {
        "id": "9218e67ae12ff56e",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 720,
        "y": 1080,
        "wires": [
            [
                "0a501f0d14245ad2"
            ]
        ]
    },
    {
        "id": "0a501f0d14245ad2",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle-mongo\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1080,
        "wires": [
            [
                "59d5c5d7591c060f"
            ]
        ]
    },
    {
        "id": "8cddfe5bd7340a5c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for b2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 1460,
        "wires": [
            [
                "2783b2c9d7b6068b"
            ]
        ]
    },
    {
        "id": "2783b2c9d7b6068b",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 1960,
        "y": 1460,
        "wires": [
            [
                "61d1a72ac323af46"
            ]
        ]
    },
    {
        "id": "61d1a72ac323af46",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2150,
        "y": 1460,
        "wires": [
            [
                "bb8a0fc95f3a4a04"
            ]
        ]
    },
    {
        "id": "9a27c8b91ef9929b",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for r1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2020,
        "wires": [
            [
                "95e95cd6c7bc1f05"
            ]
        ]
    },
    {
        "id": "95e95cd6c7bc1f05",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 2260,
        "y": 2020,
        "wires": [
            [
                "19477e53910bd1f6"
            ]
        ]
    },
    {
        "id": "19477e53910bd1f6",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 2020,
        "wires": [
            [
                "122962f6cadc8f0a"
            ]
        ]
    },
    {
        "id": "0a0ad7bc6686f46a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for r2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2540,
        "wires": [
            [
                "bfd0eb5aeefe64ac"
            ]
        ]
    },
    {
        "id": "bfd0eb5aeefe64ac",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 1810,
        "y": 2540,
        "wires": [
            [
                "596dacbfc6fcc1ca"
            ]
        ]
    },
    {
        "id": "596dacbfc6fcc1ca",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 2540,
        "wires": [
            [
                "de7eddc336816d9b"
            ]
        ]
    },
    {
        "id": "877f29714a1e351c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for p1btlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 3060,
        "wires": [
            [
                "ab8dbdad5d759b05"
            ]
        ]
    },
    {
        "id": "ab8dbdad5d759b05",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of p1btlelatest",
        "collection": "p1btlelatest",
        "operation": "find",
        "x": 2040,
        "y": 3060,
        "wires": [
            [
                "a32f3f7732dd031e"
            ]
        ]
    },
    {
        "id": "a32f3f7732dd031e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 3060,
        "wires": [
            [
                "312b74e543efb25a"
            ]
        ]
    },
    {
        "id": "5d65976904a23103",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for pneo4tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 3300,
        "wires": [
            [
                "aeccafdd8fb912b6"
            ]
        ]
    },
    {
        "id": "aeccafdd8fb912b6",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "operation": "find",
        "x": 2090,
        "y": 3300,
        "wires": [
            [
                "728c9a9836560879"
            ]
        ]
    },
    {
        "id": "728c9a9836560879",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 3300,
        "wires": [
            [
                "ed7680e16e20cd8b"
            ]
        ]
    },
    {
        "id": "09553c262bf1ebfe",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for pneo3tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 3500,
        "wires": [
            [
                "3f5b808e91194fec"
            ]
        ]
    },
    {
        "id": "3f5b808e91194fec",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "operation": "find",
        "x": 2070,
        "y": 3500,
        "wires": [
            [
                "9c9ba7d591ec63b8"
            ]
        ]
    },
    {
        "id": "9c9ba7d591ec63b8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2270,
        "y": 3500,
        "wires": [
            [
                "52ce01ac6b3556ae"
            ]
        ]
    },
    {
        "id": "59d5c5d7591c060f",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1010,
        "y": 1080,
        "wires": [
            [
                "0b382f17aa76d1e4"
            ]
        ]
    },
    {
        "id": "0b382f17aa76d1e4",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1130,
        "y": 1080,
        "wires": [
            [
                "806158a8.2a45d8",
                "bad3f015.92d69",
                "c24543b528ceac66",
                "59990b6f61e2e4b7"
            ]
        ]
    },
    {
        "id": "4aa96994a4b16522",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of sattlelatest",
        "collection": "sattlelatest",
        "operation": "find",
        "x": 370,
        "y": 4460,
        "wires": [
            [
                "68a04f6a.3ad01",
                "85bda3f55da806af"
            ]
        ]
    },
    {
        "id": "eacad089ec7f2e6f",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "query for sattlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 4420,
        "wires": [
            [
                "4aa96994a4b16522"
            ]
        ]
    },
    {
        "id": "90616c77ddc20a7b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "msg21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 4360,
        "wires": []
    },
    {
        "id": "85bda3f55da806af",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "msg20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 4360,
        "wires": []
    },
    {
        "id": "54ed3a6bc8def2f5",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "up date all for B2 IN",
        "links": [
            "6d1dbca08eba25ab"
        ],
        "x": 105,
        "y": 1620,
        "wires": [
            [
                "5bf00d0b73be675b",
                "043192e17954a39e",
                "a9760725cef4a105",
                "ad7abde181040a3a",
                "38bb7b313e5329cd",
                "cfcab2023a094cdc",
                "eeb7ac39abf2e2c4",
                "9fd7873df4929469",
                "e65b738ac6575fd6",
                "4bedade718858642"
            ]
        ]
    },
    {
        "id": "495dc5a4cb1cef81",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "up date all for R1 IN",
        "links": [
            "2fd70f8c41ef581a"
        ],
        "x": 85,
        "y": 2140,
        "wires": [
            [
                "bd8de8502f02c463",
                "a85d227183423e95",
                "17f7adb98b76a495",
                "8c60ccd3e3967358",
                "5d73170620ea1430",
                "09590295c75c8703",
                "7b44310150aad18e",
                "8e67ffcbdb4c6308",
                "607ff3a5cfe9a070",
                "b6d33c55a0d06540"
            ]
        ]
    },
    {
        "id": "1cb0a1a51e9369a1",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "up date all for R2 IN",
        "links": [
            "555a6347b2333425"
        ],
        "x": 95,
        "y": 2600,
        "wires": [
            [
                "db7e42c1aee637bd",
                "ea6adf23dbd1238c",
                "6fcdf514dbc2c5ec",
                "635fcdb8c39d0787",
                "781ddedeca0fbcdf",
                "3315d3a560dc2c89",
                "935ddb7150ce199c",
                "0e28fb103f54c09f",
                "a7c69bfe050e2d25",
                "2a251f56fc02b247"
            ]
        ]
    },
    {
        "id": "3d2439aa3fec2104",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "TLE-R1-post-manoeuvre IN",
        "links": [
            "8d63a1baaf39e899"
        ],
        "x": 1405,
        "y": 2080,
        "wires": [
            [
                "79a7ad9924b7b167"
            ]
        ]
    },
    {
        "id": "357b1c9d4fd47fb2",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "r1-time-tle-OUT",
        "mode": "link",
        "links": [
            "8e1a91631c83419c"
        ],
        "x": 1665,
        "y": 2080,
        "wires": []
    },
    {
        "id": "38bb7b313e5329cd",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for b2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1840,
        "wires": [
            [
                "7f7af55e77e94aee"
            ]
        ]
    },
    {
        "id": "7f7af55e77e94aee",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 820,
        "y": 1840,
        "wires": [
            [
                "5a59157b370f2369"
            ]
        ]
    },
    {
        "id": "5a59157b370f2369",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle-mongo\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1840,
        "wires": [
            [
                "e19ff7a5e2db1417"
            ]
        ]
    },
    {
        "id": "e19ff7a5e2db1417",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1110,
        "y": 1840,
        "wires": [
            [
                "8ec9976b896da90d"
            ]
        ]
    },
    {
        "id": "8ec9976b896da90d",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1230,
        "y": 1840,
        "wires": [
            [
                "b36449ae06ea6d4b",
                "0fa18a38f4979444",
                "58480317df48f4a4"
            ]
        ]
    },
    {
        "id": "b1a6eae4087cf52e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "TLE-CUSTOM",
        "func": "\n   return{\n topic:\"tle\",\n paths:null,\n payload:[msg.paths.path_1, msg.paths.path_2],\n body:null\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1660,
        "wires": [
            [
                "b5f34062935e7af8",
                "a5a65bebe02a5dda",
                "bb8a0fc95f3a4a04"
            ]
        ]
    },
    {
        "id": "b36449ae06ea6d4b",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "TLE-1",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle1\",\n payload:msg.payload[0].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1680,
        "wires": [
            [
                "2f2029df22bca851"
            ]
        ]
    },
    {
        "id": "0fa18a38f4979444",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "TLE-2",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle2\",\n payload: msg.payload[1].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1720,
        "wires": [
            [
                "300a5f9b3e5610e9"
            ]
        ]
    },
    {
        "id": "300a5f9b3e5610e9",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1410,
        "y": 1720,
        "wires": [
            [
                "9c0726a2f40a137c"
            ]
        ]
    },
    {
        "id": "9c0726a2f40a137c",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1550,
        "y": 1720,
        "wires": [
            [
                "5ea62317d86adb82",
                "4f5929f4e0faf499"
            ]
        ]
    },
    {
        "id": "b5f34062935e7af8",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "TLE custom",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 1620,
        "wires": []
    },
    {
        "id": "cf2fec6522ad59fa",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 1780,
        "wires": [
            [
                "5b013355edf609df"
            ]
        ]
    },
    {
        "id": "5ea62317d86adb82",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 1740,
        "wires": [
            [
                "5b013355edf609df"
            ]
        ]
    },
    {
        "id": "8e07129de29d6275",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "TLE-2-edit",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n/*\nif(Number(msg.paths.path_2.incli)>=100){\n     return{\n topic:\"tle\",\n payload: msg.paths.path_3[0]+\" \"+msg.paths.path_3[1]+\" \"+msg.paths.path_2.incli+\" \"+msg.paths.path_2.raan+\" \"+msg.paths.path_2.ecc+\" \"+msg.paths.path_2.aop+\" \"+msg.paths.path_2.meana+\" \"+msg.paths.path_2.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n}\nelse{\n   return{\n topic:\"tle\",\n payload: msg.paths.path_3[0]+\" \"+msg.paths.path_3[1]+\"  \"+msg.paths.path_2.incli+\" \"+msg.paths.path_2.raan+\" \"+msg.paths.path_2.ecc+\" \"+msg.paths.path_2.aop+\" \"+msg.paths.path_2.meana+\" \"+msg.paths.path_2.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n}*/\n\n//                          150523:\n//\n// The setter of B2 R12 might not work 100% yet\nreturn{\n topic:\"tle\",\n payload: \"2 13602 \"+msg.paths.path_2.incli+\" \"+msg.paths.path_2.raan+\" \"+msg.paths.path_2.ecc+\" \"+msg.paths.path_2.aop+\" \"+msg.paths.path_2.meana+\" \"+msg.paths.path_2.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 1740,
        "wires": [
            [
                "0332bdb0c4adede2"
            ]
        ]
    },
    {
        "id": "8b03c51e093f2c4c",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 1660,
        "wires": [
            [
                "ba262834438ed618"
            ]
        ]
    },
    {
        "id": "0332bdb0c4adede2",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2210,
        "y": 1740,
        "wires": [
            [
                "ba262834438ed618"
            ]
        ]
    },
    {
        "id": "ba262834438ed618",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "paths": "[\"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1880,
        "y": 1660,
        "wires": [
            [
                "b1a6eae4087cf52e",
                "dd93dec169a1923b"
            ],
            []
        ]
    },
    {
        "id": "f1360f4af585f4eb",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "msg.paths.path_1[9] or [10]",
        "info": "",
        "x": 2070,
        "y": 1780,
        "wires": []
    },
    {
        "id": "e90771e3cf2a5243",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "TLE1-edit b2",
        "func": "\n// New fonction 120623\n\nfunction convertToTLEEpoch(timestamp) {\n  var date = new Date(timestamp);\n  var year = date.getUTCFullYear();\n  var dayOfYear = getDayOfYear(date);\n  // Modification made on the 5/07/23 TO increase precision of the date to the milisecond\n  //var totalSeconds = (date.getUTCHours() * 3600) + (date.getUTCMinutes() * 60) + date.getUTCSeconds();\n  //var fractionOfDay = totalSeconds / (24 * 60 * 60)\n // var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  var totalMilliseconds = (date.getUTCHours() * 3600000) + (date.getUTCMinutes() * 60000) + (date.getUTCSeconds() * 1000) + date.getUTCMilliseconds();\n  var fractionOfDay = totalMilliseconds / (24 * 60 * 60 * 1000);\n  var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  return epoch;\n}\n\nfunction getDayOfYear(date) {\n  var start = new Date(Date.UTC(date.getUTCFullYear(), 0, 0));\n  var diff = date - start;\n  var oneDay = 1000 * 60 * 60 * 24;\n  var dayOfYear = Math.floor(diff / oneDay);\n  \n  return dayOfYear;\n}\n\nfunction pad(num, size) {\n  var s = num.toString();\n  while (s.length < size) {\n    s = \"0\" + s;\n  }\n  return s;\n}\nvar timestamp= msg.paths.path_1;\nvar epoch = convertToTLEEpoch(timestamp);\n\n return{\n topic:\"tle\",\n payload: \"1 13602U 23002EAE \"+epoch+\"  .00030938  00000+0  12818-2 0  9996\",\n body: [timestamp, epoch]\n    } \n\n\n\n//Old code\n\n\n\n\n//var time = Date.now()\n\n/*\nvar time = msg.paths.path_1;\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\nepoch=epoch.toFixed(8);\n*/\n/*\nif (msg.paths.path_2.length == 16) {\n    return{\n topic:\"tle\",\n //payload: msg.payload[0]+\" \"+msg.payload[1]+\" \"+msg.payload[2]+\"   \"+epoch+\"  \"+msg.payload[7]+\"  \"+msg.payload[9]+\"  \"+msg.payload[11]+\" \"+msg.payload[12]+\"  \"+msg.payload[14],\n payload: msg.paths.path_2[0]+\" \"+msg.paths.path_2[1]+\" \"+msg.paths.path_2[2]+\"  \"+epoch+\"    \"+msg.paths.path_2[8]+\"  \"+msg.paths.path_2[10]+\"  \"+msg.paths.path_2[12]+\" \"+msg.paths.path_2[13]+\"  \"+msg.paths.path_2[15],\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n    } \n} else {\n*/\n   return{\n topic:\"tle\",\n //payload: msg.payload[0]+\" \"+msg.payload[1]+\" \"+msg.payload[2]+\"   \"+epoch+\"  \"+msg.payload[7]+\"  \"+msg.payload[9]+\"  \"+msg.payload[11]+\" \"+msg.payload[12]+\"  \"+msg.payload[14],\n payload: \"1 13601U 23001EAE \"+epoch+\" -.00030938  00000+0  12818-2 0  9996\",\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n    } \n//}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1660,
        "wires": [
            [
                "8b03c51e093f2c4c",
                "801aa94ea770b941",
                "140f986615a031cc"
            ]
        ]
    },
    {
        "id": "9852c9a4a96528b0",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "check output blue2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 2330,
        "y": 1780,
        "wires": []
    },
    {
        "id": "5b013355edf609df",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "paths": "[\"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1880,
        "y": 1760,
        "wires": [
            [
                "8e07129de29d6275",
                "9852c9a4a96528b0"
            ],
            []
        ]
    },
    {
        "id": "4f5929f4e0faf499",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 1700,
        "wires": [
            [
                "5b013355edf609df"
            ]
        ]
    },
    {
        "id": "2f2029df22bca851",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1600,
        "wires": [
            [
                "a52354b13f5aea11"
            ]
        ]
    },
    {
        "id": "a52354b13f5aea11",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "paths": "[\"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1520,
        "y": 1600,
        "wires": [
            [
                "e90771e3cf2a5243"
            ],
            []
        ]
    },
    {
        "id": "440df756d3e898f2",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "setpath1-in b2",
        "links": [
            "139d87a61de8fb2d",
            "1ae04e597256b937",
            "9b7aa4b9aad75d7d",
            "8f235a4905cf2bd5",
            "209350ebe1c882d7",
            "eeb0f82196f6f0be"
        ],
        "x": 1375,
        "y": 1640,
        "wires": [
            [
                "a52354b13f5aea11"
            ]
        ]
    },
    {
        "id": "801aa94ea770b941",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "TimePerigee-B2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 1620,
        "wires": []
    },
    {
        "id": "a5a65bebe02a5dda",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 1560,
        "wires": [
            [
                "920cc58f06625984"
            ]
        ]
    },
    {
        "id": "d9d638fce045ffc5",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2360,
        "y": 1560,
        "wires": []
    },
    {
        "id": "920cc58f06625984",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2010,
        "y": 1560,
        "wires": [
            [
                "95d6bb19d909612d"
            ]
        ]
    },
    {
        "id": "a99ad14c3f06b98d",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "Tle b2-post-man-In",
        "links": [
            "8aa4b8ef7f2e638c",
            "bbf6284c8f0bc627"
        ],
        "x": 1285,
        "y": 1560,
        "wires": [
            [
                "a52354b13f5aea11"
            ]
        ]
    },
    {
        "id": "140f986615a031cc",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "b2-time-tle-OUT",
        "mode": "link",
        "links": [],
        "x": 1675,
        "y": 1580,
        "wires": []
    },
    {
        "id": "5d73170620ea1430",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for r1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2340,
        "wires": [
            [
                "91044c67d81404d3"
            ]
        ]
    },
    {
        "id": "91044c67d81404d3",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 720,
        "y": 2340,
        "wires": [
            [
                "c7416b830dcbd85d"
            ]
        ]
    },
    {
        "id": "c7416b830dcbd85d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle-mongo\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 2340,
        "wires": [
            [
                "a91a0f296a6eaf34"
            ]
        ]
    },
    {
        "id": "a91a0f296a6eaf34",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1010,
        "y": 2340,
        "wires": [
            [
                "124c75720ed07a89"
            ]
        ]
    },
    {
        "id": "124c75720ed07a89",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1130,
        "y": 2340,
        "wires": [
            [
                "b41819f36e747855",
                "5ba1af6f8dddc83a",
                "5b9993033376ecbe"
            ]
        ]
    },
    {
        "id": "781ddedeca0fbcdf",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for r2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2900,
        "wires": [
            [
                "90cee016a86d77ba"
            ]
        ]
    },
    {
        "id": "90cee016a86d77ba",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 720,
        "y": 2900,
        "wires": [
            [
                "8fba09143275a037"
            ]
        ]
    },
    {
        "id": "8fba09143275a037",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle-mongo\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 2900,
        "wires": [
            [
                "692deee37e42d1ef"
            ]
        ]
    },
    {
        "id": "692deee37e42d1ef",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1010,
        "y": 2900,
        "wires": [
            [
                "adbfb7ea5c397f06"
            ]
        ]
    },
    {
        "id": "adbfb7ea5c397f06",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1130,
        "y": 2900,
        "wires": [
            [
                "dfaaccde186ca7ea",
                "f20ce87449bb0473",
                "ed8485e00f8f0b52"
            ]
        ]
    },
    {
        "id": "813663ae8c5e3d5d",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "bouton B1TLE UPDATE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 1180,
        "wires": []
    },
    {
        "id": "08298fee71f7bff1",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "query for b1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 1080,
        "wires": [
            [
                "89e69845755f4c77"
            ]
        ]
    },
    {
        "id": "89e69845755f4c77",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 1980,
        "y": 1080,
        "wires": [
            [
                "6e09578b5c3977d8"
            ]
        ]
    },
    {
        "id": "6e09578b5c3977d8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2150,
        "y": 1080,
        "wires": [
            [
                "09b6f94b45eb28b7",
                "b12b6db8e50017f8"
            ]
        ]
    },
    {
        "id": "b12b6db8e50017f8",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TLE of B1 requested in the DB by an UPdate",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2390,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2c3cb7c6e5582712",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "CELESTRAK REQ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 460,
        "wires": []
    },
    {
        "id": "d83b568b192310f6",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "To Celestrak requests return OUT",
        "mode": "link",
        "links": [
            "d3c174fe5dac8092",
            "082d3d8388a6da40",
            "9cf4d89f80284a28",
            "a57a4be5d794050d"
        ],
        "x": 475,
        "y": 740,
        "wires": []
    },
    {
        "id": "1bb78f1585330b5c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "To Celestrak requests return OUT",
        "mode": "link",
        "links": [
            "d3c174fe5dac8092",
            "082d3d8388a6da40",
            "9cf4d89f80284a28",
            "a57a4be5d794050d"
        ],
        "x": 525,
        "y": 3080,
        "wires": []
    },
    {
        "id": "a1bc0b9e16a50e7c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "To Celestrak requests return OUT",
        "mode": "link",
        "links": [
            "d3c174fe5dac8092",
            "082d3d8388a6da40",
            "9cf4d89f80284a28",
            "a57a4be5d794050d"
        ],
        "x": 515,
        "y": 3320,
        "wires": []
    },
    {
        "id": "a25fb990a2d35418",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "To Celestrak requests return OUT",
        "mode": "link",
        "links": [
            "d3c174fe5dac8092",
            "082d3d8388a6da40",
            "9cf4d89f80284a28",
            "a57a4be5d794050d"
        ],
        "x": 495,
        "y": 3520,
        "wires": []
    },
    {
        "id": "be5b3468b95dc183",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "To Celestrak requests return OUT",
        "mode": "link",
        "links": [
            "d3c174fe5dac8092",
            "082d3d8388a6da40",
            "9cf4d89f80284a28",
            "a57a4be5d794050d"
        ],
        "x": 755,
        "y": 280,
        "wires": []
    },
    {
        "id": "976ed181456d5d92",
        "type": "file in",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3570,
        "y": 540,
        "wires": [
            [
                "1b4cf2db17592916"
            ]
        ]
    },
    {
        "id": "1b4cf2db17592916",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3550,
        "y": 600,
        "wires": [
            [
                "bc15dda52775a710"
            ]
        ]
    },
    {
        "id": "fdeaa62f.5f5688",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "Celestrak_request_PHR",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.org/NORAD/elements/gp.php?CATNR=38012",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 590,
        "y": 440,
        "wires": [
            [
                "fed8e554.829fa8",
                "168c927c614295a8"
            ]
        ]
    },
    {
        "id": "fed8e554.829fa8",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 440,
        "wires": [
            [
                "f852b5f6.c99b98",
                "34aeb0d4c2a0550e"
            ],
            []
        ]
    },
    {
        "id": "f852b5f6.c99b98",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 440,
        "wires": [
            [
                "28c8f85d.5c8e08",
                "378c5b1017d00b9f"
            ],
            []
        ]
    },
    {
        "id": "28c8f85d.5c8e08",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"TLE data\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 440,
        "wires": [
            [
                "58575d12.429a94"
            ]
        ]
    },
    {
        "id": "58575d12.429a94",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1430,
        "y": 440,
        "wires": [
            [
                "ff820ff.bf83af"
            ]
        ]
    },
    {
        "id": "ff820ff.bf83af",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1590,
        "y": 440,
        "wires": [
            [
                "2678f85d.20ec28"
            ]
        ]
    },
    {
        "id": "2678f85d.20ec28",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 440,
        "wires": [
            [
                "28d0dbe164b06cd6",
                "279cfe02df54c94f"
            ]
        ]
    },
    {
        "id": "34aeb0d4c2a0550e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "query to delete p1atlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 520,
        "wires": [
            [
                "ed46efe0511874af"
            ]
        ]
    },
    {
        "id": "ed46efe0511874af",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1230,
        "y": 520,
        "wires": []
    },
    {
        "id": "d3529a4d4ad201b1",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 480,
        "wires": [
            [
                "070901a887bb28c2"
            ]
        ]
    },
    {
        "id": "070901a887bb28c2",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1610,
        "y": 480,
        "wires": [
            [
                "57bf8da0f9e70613"
            ]
        ]
    },
    {
        "id": "28d0dbe164b06cd6",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2070,
        "y": 440,
        "wires": [
            [
                "6046a606f291a411",
                "f7f9c11d1f2382ae"
            ]
        ]
    },
    {
        "id": "225f7a9616f10423",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "query for p1atlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 580,
        "wires": [
            [
                "dd1d078a375fef72"
            ]
        ]
    },
    {
        "id": "dd1d078a375fef72",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of p1atlelatest",
        "collection": "p1atlelatest",
        "operation": "find",
        "x": 1700,
        "y": 580,
        "wires": [
            [
                "521bf868aa8d0de1"
            ]
        ]
    },
    {
        "id": "521bf868aa8d0de1",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "tle2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 580,
        "wires": [
            [
                "28d0dbe164b06cd6"
            ]
        ]
    },
    {
        "id": "57bf8da0f9e70613",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1810,
        "y": 480,
        "wires": []
    },
    {
        "id": "168c927c614295a8",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "TLE customPHR",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 520,
        "wires": []
    },
    {
        "id": "bc15dda52775a710",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3560,
        "y": 640,
        "wires": [
            [
                "8063232e20158d5a"
            ]
        ]
    },
    {
        "id": "8063232e20158d5a",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3550,
        "y": 680,
        "wires": [
            [
                "19a75b7b1a234d67"
            ]
        ]
    },
    {
        "id": "f30d12dd2058bef2",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"ROBUSTA 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 560,
        "wires": [
            [
                "beaf0a11e85d749d"
            ]
        ]
    },
    {
        "id": "19a75b7b1a234d67",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3580,
        "y": 720,
        "wires": [
            [
                "f30d12dd2058bef2",
                "c06408fdecb6945d",
                "5a7f69a63e04e750",
                "82adf290f9b9473d",
                "ebe80588c2cea7ea",
                "1f87636507e0aa01",
                "4fc4cfd68a0b6570",
                "90ab2f29db897acf",
                "bbd8d175663cbb34",
                "1a85a8622aac2584"
            ]
        ]
    },
    {
        "id": "c06408fdecb6945d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1A\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 620,
        "wires": [
            [
                "877350886188357e"
            ]
        ]
    },
    {
        "id": "5a7f69a63e04e750",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"ROBUSTA 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 680,
        "wires": [
            [
                "5adba86582d125c4"
            ]
        ]
    },
    {
        "id": "82adf290f9b9473d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 740,
        "wires": [
            [
                "11bfbb0c7f9356a8"
            ]
        ]
    },
    {
        "id": "beaf0a11e85d749d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 560,
        "wires": [
            [
                "a6585fdd8837e646"
            ]
        ]
    },
    {
        "id": "877350886188357e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 620,
        "wires": [
            [
                "5bf24823ff268871"
            ]
        ]
    },
    {
        "id": "5adba86582d125c4",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 680,
        "wires": [
            [
                "6cfe4705ace96064"
            ]
        ]
    },
    {
        "id": "11bfbb0c7f9356a8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 740,
        "wires": [
            [
                "70b73ab02c552d95"
            ]
        ]
    },
    {
        "id": "ebe80588c2cea7ea",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 800,
        "wires": [
            [
                "bb6892277131a073"
            ]
        ]
    },
    {
        "id": "bb6892277131a073",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 800,
        "wires": [
            [
                "e94dd6a4d99bc2fb"
            ]
        ]
    },
    {
        "id": "1f87636507e0aa01",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 860,
        "wires": [
            [
                "05a7b7228758721a"
            ]
        ]
    },
    {
        "id": "05a7b7228758721a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 860,
        "wires": [
            [
                "8677dba8b1f81479"
            ]
        ]
    },
    {
        "id": "742c36d88c0795e6",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Repeupler les DB",
        "info": "",
        "x": 3680,
        "y": 480,
        "wires": []
    },
    {
        "id": "a6585fdd8837e646",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4490,
        "y": 560,
        "wires": []
    },
    {
        "id": "5bf24823ff268871",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4490,
        "y": 620,
        "wires": []
    },
    {
        "id": "6cfe4705ace96064",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4490,
        "y": 680,
        "wires": []
    },
    {
        "id": "70b73ab02c552d95",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4490,
        "y": 740,
        "wires": []
    },
    {
        "id": "e94dd6a4d99bc2fb",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4500,
        "y": 800,
        "wires": []
    },
    {
        "id": "8677dba8b1f81479",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 4500,
        "y": 860,
        "wires": []
    },
    {
        "id": "7216a78efe87f871",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete rob1blelatest",
        "collection": "rob1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4850,
        "y": 500,
        "wires": []
    },
    {
        "id": "402dd68eef637e28",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4850,
        "y": 560,
        "wires": []
    },
    {
        "id": "81503c71337a55a1",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete sattlelatest",
        "collection": "sattlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4850,
        "y": 620,
        "wires": []
    },
    {
        "id": "321b54bc830393f5",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4850,
        "y": 680,
        "wires": []
    },
    {
        "id": "d787aa78e7f7c69f",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4860,
        "y": 740,
        "wires": []
    },
    {
        "id": "0616c975f506d2ad",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4860,
        "y": 800,
        "wires": []
    },
    {
        "id": "f9e0d8bfc76d2ea9",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4500,
        "y": 500,
        "wires": [
            [
                "c6a21b7e1f49e8fc",
                "698067ded04938d2",
                "5d93b6830d1ac092",
                "0616c975f506d2ad",
                "d787aa78e7f7c69f",
                "321b54bc830393f5",
                "81503c71337a55a1",
                "402dd68eef637e28",
                "7216a78efe87f871",
                "5a357a4ae6a6d5b3",
                "976ed181456d5d92"
            ]
        ]
    },
    {
        "id": "a0ea95e83db4cacd",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4500,
        "y": 460,
        "wires": [
            [
                "f9e0d8bfc76d2ea9"
            ]
        ]
    },
    {
        "id": "4fc4cfd68a0b6570",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"STORK-1\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 920,
        "wires": [
            [
                "4c44820c369f21d8"
            ]
        ]
    },
    {
        "id": "4c44820c369f21d8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 920,
        "wires": [
            [
                "cc2f6f7ecc60d930"
            ]
        ]
    },
    {
        "id": "cc2f6f7ecc60d930",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4480,
        "y": 920,
        "wires": []
    },
    {
        "id": "5a357a4ae6a6d5b3",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4850,
        "y": 860,
        "wires": []
    },
    {
        "id": "90ab2f29db897acf",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"STORK-1\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 980,
        "wires": [
            [
                "695184832771955f"
            ]
        ]
    },
    {
        "id": "695184832771955f",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 980,
        "wires": [
            [
                "cb779cec6c69d361"
            ]
        ]
    },
    {
        "id": "cb779cec6c69d361",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4480,
        "y": 980,
        "wires": []
    },
    {
        "id": "c6a21b7e1f49e8fc",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4850,
        "y": 920,
        "wires": []
    },
    {
        "id": "bbd8d175663cbb34",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"STORK-1\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 1040,
        "wires": [
            [
                "a329faec55f61f76"
            ]
        ]
    },
    {
        "id": "a329faec55f61f76",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 1040,
        "wires": [
            [
                "1cc6fcbc62a009cb"
            ]
        ]
    },
    {
        "id": "1cc6fcbc62a009cb",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4480,
        "y": 1040,
        "wires": []
    },
    {
        "id": "698067ded04938d2",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4840,
        "y": 980,
        "wires": []
    },
    {
        "id": "1a85a8622aac2584",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"STORK-1\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 1100,
        "wires": [
            [
                "243383b13419e82a"
            ]
        ]
    },
    {
        "id": "243383b13419e82a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB R2",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4160,
        "y": 1100,
        "wires": [
            [
                "52dbdd123e7091c0",
                "f7f41c5df86844a6",
                "68fdbbd75259124d"
            ]
        ]
    },
    {
        "id": "52dbdd123e7091c0",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4480,
        "y": 1100,
        "wires": []
    },
    {
        "id": "5d93b6830d1ac092",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4840,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6e46ffd229497b6c",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2560,
        "y": 960,
        "wires": []
    },
    {
        "id": "6046a606f291a411",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Set path2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2300,
        "y": 460,
        "wires": []
    },
    {
        "id": "47e714de12c6ceba",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Set path7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3180,
        "y": 380,
        "wires": []
    },
    {
        "id": "bd4011b41b1eed28",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Set path1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2720,
        "y": 360,
        "wires": []
    },
    {
        "id": "b51e5d79b66eedc6",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Set path4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2794.5,
        "y": 1724.75,
        "wires": []
    },
    {
        "id": "eb6cf227e5b57995",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Set path5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2800,
        "y": 2240,
        "wires": []
    },
    {
        "id": "1da0e65edf84477c",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Set path6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2720,
        "y": 2760,
        "wires": []
    },
    {
        "id": "a78ca4fbc4d9e57b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Set path11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2690,
        "y": 3100,
        "wires": []
    },
    {
        "id": "56cdcf6595bfaf55",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Set path9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2580,
        "y": 3360,
        "wires": []
    },
    {
        "id": "f708c78a01711d59",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Set path10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2650,
        "y": 3560,
        "wires": []
    },
    {
        "id": "6d364e3e0869fe41",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Rescue TLE databases",
        "tooltip": "",
        "color": "",
        "bgcolor": "#104900",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4070,
        "y": 480,
        "wires": [
            [
                "f9e0d8bfc76d2ea9",
                "5ab99c0c9192c682"
            ]
        ]
    },
    {
        "id": "c24543b528ceac66",
        "type": "file in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "blue1-tle-storage-out",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1360,
        "y": 1040,
        "wires": [
            [
                "c940a9398f89f223"
            ]
        ]
    },
    {
        "id": "58480317df48f4a4",
        "type": "file in",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "blue2-tle-storage-out",
        "filename": "blue2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1400,
        "y": 1800,
        "wires": [
            [
                "e5336f4911b2008e"
            ]
        ]
    },
    {
        "id": "5b9993033376ecbe",
        "type": "file in",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "red1-tle-storage-out",
        "filename": "red1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1370,
        "y": 2320,
        "wires": [
            [
                "d91c7be73ae23eb7"
            ]
        ]
    },
    {
        "id": "d91c7be73ae23eb7",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1530,
        "y": 2320,
        "wires": [
            [
                "8b8d076ee67ea589"
            ]
        ]
    },
    {
        "id": "e5336f4911b2008e",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1570,
        "y": 1800,
        "wires": [
            [
                "cf2fec6522ad59fa"
            ]
        ]
    },
    {
        "id": "c940a9398f89f223",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1530,
        "y": 1040,
        "wires": [
            [
                "c4bc0507.a5aa28",
                "f2e933630f6c403b"
            ]
        ]
    },
    {
        "id": "400ff9cd912f5dd6",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query to delete r1tlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 2060,
        "wires": [
            [
                "cbaba4ff27dfb104"
            ]
        ]
    },
    {
        "id": "cbaba4ff27dfb104",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 2260,
        "y": 2060,
        "wires": []
    },
    {
        "id": "c07207dbde9b5985",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2220,
        "y": 740,
        "wires": [
            [
                "a82cd02c21cae659"
            ]
        ]
    },
    {
        "id": "24e475a7e7cc30b0",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query to delete sattlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 80,
        "wires": [
            [
                "d80b430a49c5bc67"
            ]
        ]
    },
    {
        "id": "d80b430a49c5bc67",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete sattlelatest",
        "collection": "sattlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 2360,
        "y": 80,
        "wires": []
    },
    {
        "id": "0fe194477cfd115a",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2020,
        "y": 300,
        "wires": [
            [
                "48fac77f27ebe694"
            ]
        ]
    },
    {
        "id": "1e9676e414d32f76",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "trigger-SAT",
        "links": [
            "2a251f56fc02b247",
            "39bc328534852ef6",
            "4bedade718858642",
            "7abf459108d1bb9a",
            "b6d33c55a0d06540",
            "bc9a8d46d71b2c0a",
            "28c0d298350e66d0",
            "90fb241377880fb6"
        ],
        "x": 1835,
        "y": 360,
        "wires": [
            [
                "5bfdeb3df1dc8e7e"
            ]
        ]
    },
    {
        "id": "ccf9f6d431ed64cc",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "trigger-P1A",
        "links": [
            "bc9a8d46d71b2c0a",
            "472fd34f5a4b63ee",
            "e65b738ac6575fd6",
            "607ff3a5cfe9a070",
            "a7c69bfe050e2d25",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6"
        ],
        "x": 1105,
        "y": 580,
        "wires": [
            [
                "225f7a9616f10423"
            ]
        ]
    },
    {
        "id": "a117569a1ea3ef31",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "trigger-B1",
        "links": [
            "bc9a8d46d71b2c0a"
        ],
        "x": 365,
        "y": 1020,
        "wires": [
            [
                "cf8728c9f3d62ae1"
            ]
        ]
    },
    {
        "id": "5ab7a667fbb1644d",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "trigger-B2",
        "links": [
            "bc9a8d46d71b2c0a"
        ],
        "x": 465,
        "y": 1760,
        "wires": [
            [
                "38bb7b313e5329cd"
            ]
        ]
    },
    {
        "id": "031daf8ad228e86a",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "trigger-R1",
        "links": [
            "bc9a8d46d71b2c0a"
        ],
        "x": 435,
        "y": 2260,
        "wires": [
            [
                "5d73170620ea1430"
            ]
        ]
    },
    {
        "id": "ba03309eb894bc80",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "trigger-R2",
        "links": [
            "bc9a8d46d71b2c0a"
        ],
        "x": 415,
        "y": 2820,
        "wires": [
            [
                "781ddedeca0fbcdf"
            ]
        ]
    },
    {
        "id": "04828409f3c8eb98",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "trigger-P1B",
        "links": [
            "bc9a8d46d71b2c0a",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6"
        ],
        "x": 1755,
        "y": 3100,
        "wires": [
            [
                "877f29714a1e351c"
            ]
        ]
    },
    {
        "id": "32528e58bc954e44",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "trigger-NEO4",
        "links": [
            "bc9a8d46d71b2c0a",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6"
        ],
        "x": 1745,
        "y": 3240,
        "wires": [
            [
                "5d65976904a23103"
            ]
        ]
    },
    {
        "id": "e7a2222d78b89f73",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "trigger-NEO3",
        "links": [
            "bc9a8d46d71b2c0a",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6"
        ],
        "x": 1745,
        "y": 3460,
        "wires": [
            [
                "09553c262bf1ebfe"
            ]
        ]
    },
    {
        "id": "5b94fea4bc8be85c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TLE1-edit",
        "func": "\n// New fonction 120623\n\nfunction convertToTLEEpoch(timestamp) {\n  var date = new Date(timestamp);\n  var year = date.getUTCFullYear();\n  var dayOfYear = getDayOfYear(date);\n  // Modification made on the 5/07/23 TO increase precision of the date to the milisecond\n  //var totalSeconds = (date.getUTCHours() * 3600) + (date.getUTCMinutes() * 60) + date.getUTCSeconds();\n  //var fractionOfDay = totalSeconds / (24 * 60 * 60)\n // var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  var totalMilliseconds = (date.getUTCHours() * 3600000) + (date.getUTCMinutes() * 60000) + (date.getUTCSeconds() * 1000) + date.getUTCMilliseconds();\n  var fractionOfDay = totalMilliseconds / (24 * 60 * 60 * 1000);\n  var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  return epoch;\n}\n\nfunction getDayOfYear(date) {\n  var start = new Date(Date.UTC(date.getUTCFullYear(), 0, 0));\n  var diff = date - start;\n  var oneDay = 1000 * 60 * 60 * 24;\n  var dayOfYear = Math.floor(diff / oneDay);\n  \n  return dayOfYear;\n}\n\nfunction pad(num, size) {\n  var s = num.toString();\n  while (s.length < size) {\n    s = \"0\" + s;\n  }\n  return s;\n}\nvar timestamp= msg.paths.path_1;\nvar epoch = convertToTLEEpoch(timestamp);\n\n return{\n topic:\"tle\",\n payload: \"1 13601U 23001EAE \"+epoch+\"  .00030938  00000+0  12818-2 0  9996\",\n body: [timestamp, epoch]\n    } \n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 840,
        "wires": [
            [
                "788aabf0.013d94",
                "fe5ea50b57aa1c32",
                "58f4cd6a92f77065",
                "396dad2ae32bfc99"
            ]
        ]
    },
    {
        "id": "59990b6f61e2e4b7",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "après tle storage b1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1080,
        "wires": []
    },
    {
        "id": "58f4cd6a92f77065",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "after join wait setpath1 b1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 1020,
        "wires": []
    },
    {
        "id": "8d1ea8610afad551",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "apres OEM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3870,
        "y": 100,
        "wires": []
    },
    {
        "id": "84fbfb29.95cd58",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "http request OEM",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://backend:8000/vts",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 3890,
        "y": 140,
        "wires": [
            [
                "f724ce42.a2232"
            ]
        ]
    },
    {
        "id": "f2e933630f6c403b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "new tle",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1820,
        "y": 1220,
        "wires": []
    },
    {
        "id": "279cfe02df54c94f",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1280,
        "y": 480,
        "wires": [
            [
                "d3529a4d4ad201b1"
            ]
        ]
    },
    {
        "id": "95d6bb19d909612d",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2160,
        "y": 1560,
        "wires": [
            [
                "d9d638fce045ffc5"
            ]
        ]
    },
    {
        "id": "2d02dd85c78408df",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2440,
        "y": 2100,
        "wires": [
            [
                "f876564f6733f147"
            ]
        ]
    },
    {
        "id": "e8094a552d3b4227",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1080,
        "y": 3160,
        "wires": [
            [
                "d14cf312fe0a60e0"
            ]
        ]
    },
    {
        "id": "c564d0a1ae3e8ebc",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1040,
        "y": 3400,
        "wires": [
            [
                "aebcd6a0a5d13023"
            ]
        ]
    },
    {
        "id": "044b0506b8870c46",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1080,
        "y": 3600,
        "wires": [
            [
                "dafaa8891883163a"
            ]
        ]
    },
    {
        "id": "823834c6c8859a3a",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "tle custpo",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2380,
        "y": 860,
        "wires": []
    },
    {
        "id": "ad55ac567e7d4286",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4010,
        "y": 2860,
        "wires": [
            [
                "0f2dbd34dd8c8d1c"
            ]
        ]
    },
    {
        "id": "3c8cd23b8aa07ad9",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 4020,
        "y": 2900,
        "wires": []
    },
    {
        "id": "3ea47d3224650771",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3830,
        "y": 2900,
        "wires": [
            [
                "3c8cd23b8aa07ad9"
            ]
        ]
    },
    {
        "id": "962e1373fd8386f8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 2900,
        "wires": [
            [
                "3ea47d3224650771"
            ]
        ]
    },
    {
        "id": "0f2dbd34dd8c8d1c",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3500,
        "y": 2900,
        "wires": [
            [
                "962e1373fd8386f8"
            ]
        ]
    },
    {
        "id": "9e64e7461634b119",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "query to delete p1atlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3200,
        "y": 2940,
        "wires": [
            [
                "e3c11e24c860be14"
            ]
        ]
    },
    {
        "id": "e3c11e24c860be14",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 3450,
        "y": 2940,
        "wires": []
    },
    {
        "id": "316d50ec298861de",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "upb1db",
        "links": [
            "8dffd9504e4178a6"
        ],
        "x": 3655,
        "y": 2820,
        "wires": [
            [
                "ad55ac567e7d4286",
                "9e64e7461634b119"
            ]
        ]
    },
    {
        "id": "39003ad824e44026",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4050,
        "y": 3080,
        "wires": [
            [
                "45ee86e0b247dfe2"
            ]
        ]
    },
    {
        "id": "aa939b6e05f7588d",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 4060,
        "y": 3120,
        "wires": []
    },
    {
        "id": "df82e82bf7ac3a5b",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3870,
        "y": 3120,
        "wires": [
            [
                "aa939b6e05f7588d"
            ]
        ]
    },
    {
        "id": "d7e5761a91b6312d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3710,
        "y": 3120,
        "wires": [
            [
                "df82e82bf7ac3a5b"
            ]
        ]
    },
    {
        "id": "45ee86e0b247dfe2",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3540,
        "y": 3120,
        "wires": [
            [
                "d7e5761a91b6312d"
            ]
        ]
    },
    {
        "id": "b35be834446d4aa7",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "query to delete p1atlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3240,
        "y": 3160,
        "wires": [
            [
                "b36a9e198f579d6f"
            ]
        ]
    },
    {
        "id": "b36a9e198f579d6f",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 3490,
        "y": 3160,
        "wires": []
    },
    {
        "id": "f711fb70318c34f1",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "upb2db",
        "links": [
            "3d251fb118f33dfb",
            "0bf45204b0f771f7"
        ],
        "x": 3695,
        "y": 3040,
        "wires": [
            [
                "39003ad824e44026",
                "b35be834446d4aa7"
            ]
        ]
    },
    {
        "id": "fa23d8f8cd010485",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4010,
        "y": 3260,
        "wires": [
            [
                "2810c1a354194b23"
            ]
        ]
    },
    {
        "id": "e24b2b4e0994443f",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 4020,
        "y": 3300,
        "wires": []
    },
    {
        "id": "2a32578c6833009a",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3830,
        "y": 3300,
        "wires": [
            [
                "e24b2b4e0994443f"
            ]
        ]
    },
    {
        "id": "935ff25d886f0f1d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 3300,
        "wires": [
            [
                "2a32578c6833009a"
            ]
        ]
    },
    {
        "id": "2810c1a354194b23",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3500,
        "y": 3300,
        "wires": [
            [
                "935ff25d886f0f1d"
            ]
        ]
    },
    {
        "id": "0416658a7e68ff94",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "query to delete p1atlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3200,
        "y": 3340,
        "wires": [
            [
                "a3a6900ac880ed4d"
            ]
        ]
    },
    {
        "id": "a3a6900ac880ed4d",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 3440,
        "y": 3340,
        "wires": []
    },
    {
        "id": "ab7c9532b74823ba",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "upr1db",
        "links": [
            "92816441e42d246e",
            "24f7737fe3d4b910"
        ],
        "x": 3655,
        "y": 3220,
        "wires": [
            [
                "fa23d8f8cd010485",
                "0416658a7e68ff94"
            ]
        ]
    },
    {
        "id": "719dfd890f629b79",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3970,
        "y": 3460,
        "wires": [
            [
                "131185f8d180b61b"
            ]
        ]
    },
    {
        "id": "665016211d444ab6",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 3980,
        "y": 3500,
        "wires": []
    },
    {
        "id": "ffdcb73d3f9fb6a0",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3790,
        "y": 3500,
        "wires": [
            [
                "665016211d444ab6"
            ]
        ]
    },
    {
        "id": "3fa042c7226d650a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3630,
        "y": 3500,
        "wires": [
            [
                "ffdcb73d3f9fb6a0"
            ]
        ]
    },
    {
        "id": "131185f8d180b61b",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3460,
        "y": 3500,
        "wires": [
            [
                "3fa042c7226d650a"
            ]
        ]
    },
    {
        "id": "6d46f5b9e54454ec",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "query to delete p1atlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3160,
        "y": 3540,
        "wires": [
            [
                "bbe011784c4e8416"
            ]
        ]
    },
    {
        "id": "bbe011784c4e8416",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 3400,
        "y": 3540,
        "wires": []
    },
    {
        "id": "4f6a448fcc452112",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "upr2db",
        "links": [
            "bb9228be22df33c7",
            "2b2fa0a36bd2a3c4"
        ],
        "x": 3615,
        "y": 3420,
        "wires": [
            [
                "719dfd890f629b79",
                "6d46f5b9e54454ec"
            ]
        ]
    },
    {
        "id": "8dffd9504e4178a6",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "upb1db out",
        "mode": "link",
        "links": [
            "316d50ec298861de"
        ],
        "x": 615,
        "y": 920,
        "wires": []
    },
    {
        "id": "0bf45204b0f771f7",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "upb2db out",
        "mode": "link",
        "links": [
            "f711fb70318c34f1"
        ],
        "x": 615,
        "y": 960,
        "wires": []
    },
    {
        "id": "24f7737fe3d4b910",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "upr1db out",
        "mode": "link",
        "links": [
            "ab7c9532b74823ba"
        ],
        "x": 615,
        "y": 1000,
        "wires": []
    },
    {
        "id": "2b2fa0a36bd2a3c4",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "upr2db out",
        "mode": "link",
        "links": [
            "4f6a448fcc452112"
        ],
        "x": 605,
        "y": 1040,
        "wires": []
    },
    {
        "id": "97a158c453e2a327",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "celestrack wakeup b1",
        "links": [
            "2ef9b077a1f87abf"
        ],
        "x": 905,
        "y": 860,
        "wires": [
            [
                "806158a8.2a45d8",
                "bad3f015.92d69",
                "c24543b528ceac66"
            ]
        ]
    },
    {
        "id": "f98d6fa3076bb7ac",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "celestrack wakeup b2",
        "links": [
            "76ed5e9d4af50777"
        ],
        "x": 1115,
        "y": 1680,
        "wires": [
            [
                "b36449ae06ea6d4b",
                "0fa18a38f4979444",
                "58480317df48f4a4"
            ]
        ]
    },
    {
        "id": "d284f0c7f6dae0d5",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "celestrack wakeup r1",
        "links": [
            "af0868b9a6c15d38"
        ],
        "x": 1135,
        "y": 2180,
        "wires": [
            [
                "b41819f36e747855",
                "5ba1af6f8dddc83a",
                "5b9993033376ecbe"
            ]
        ]
    },
    {
        "id": "cbd32898497f1878",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "New version no test on inc 150523",
        "info": "",
        "x": 2120,
        "y": 900,
        "wires": []
    },
    {
        "id": "d014e76a2cb25da1",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "TLE-file-storage",
        "filename": "tle-latest.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3140,
        "y": 1380,
        "wires": [
            [
                "8c1a3dd594ede97b"
            ]
        ]
    },
    {
        "id": "dc0f2d6745c193a0",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2990,
        "y": 1380,
        "wires": [
            [
                "d014e76a2cb25da1",
                "bf5a0c7c968ace0f"
            ]
        ]
    },
    {
        "id": "e2704cd5c5caefc4",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "mongostorep1a",
        "links": [
            "378c5b1017d00b9f"
        ],
        "x": 2785,
        "y": 1320,
        "wires": [
            [
                "dc0f2d6745c193a0",
                "ec27d3d9dfde1036"
            ]
        ]
    },
    {
        "id": "046634799b95f29c",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "mongostorep1b",
        "links": [
            "035c0a7ed2fe3ee2"
        ],
        "x": 2785,
        "y": 1360,
        "wires": [
            [
                "dc0f2d6745c193a0",
                "ec27d3d9dfde1036"
            ]
        ]
    },
    {
        "id": "e7057fba696ff651",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "mongostorestork1",
        "links": [
            "80b8871a94e1c476"
        ],
        "x": 2785,
        "y": 1400,
        "wires": [
            [
                "dc0f2d6745c193a0",
                "ec27d3d9dfde1036"
            ]
        ]
    },
    {
        "id": "433296a4b830bcfb",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "mongostoren3",
        "links": [
            "f342466cf1c63a12"
        ],
        "x": 2785,
        "y": 1440,
        "wires": [
            [
                "dc0f2d6745c193a0",
                "ec27d3d9dfde1036"
            ]
        ]
    },
    {
        "id": "711dcfce6c678eae",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "mongostorerob1b",
        "links": [
            "4af158778ce1bf1e"
        ],
        "x": 2785,
        "y": 1280,
        "wires": [
            [
                "dc0f2d6745c193a0",
                "ec27d3d9dfde1036"
            ]
        ]
    },
    {
        "id": "4f3dd26d2f95cced",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "mongostoren4",
        "links": [
            "5312b82aabb220d1"
        ],
        "x": 2785,
        "y": 1480,
        "wires": [
            [
                "dc0f2d6745c193a0",
                "ec27d3d9dfde1036"
            ]
        ]
    },
    {
        "id": "e064d761f7b93a0c",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "stork1",
        "info": "",
        "x": 250,
        "y": 700,
        "wires": []
    },
    {
        "id": "80b8871a94e1c476",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "mongostorestork1 out",
        "mode": "link",
        "links": [
            "e7057fba696ff651"
        ],
        "x": 485,
        "y": 820,
        "wires": []
    },
    {
        "id": "378c5b1017d00b9f",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "mongostorep1a out",
        "mode": "link",
        "links": [
            "e2704cd5c5caefc4"
        ],
        "x": 1235,
        "y": 400,
        "wires": []
    },
    {
        "id": "035c0a7ed2fe3ee2",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "mongostorep1b out",
        "mode": "link",
        "links": [
            "046634799b95f29c"
        ],
        "x": 975,
        "y": 3080,
        "wires": []
    },
    {
        "id": "f342466cf1c63a12",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "mongostoren3 out",
        "mode": "link",
        "links": [
            "433296a4b830bcfb"
        ],
        "x": 975,
        "y": 3520,
        "wires": []
    },
    {
        "id": "5312b82aabb220d1",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "mongostoren4 out",
        "mode": "link",
        "links": [
            "4f3dd26d2f95cced"
        ],
        "x": 975,
        "y": 3320,
        "wires": []
    },
    {
        "id": "4af158778ce1bf1e",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "mongostorerob1b out",
        "mode": "link",
        "links": [
            "711dcfce6c678eae"
        ],
        "x": 1205,
        "y": 160,
        "wires": []
    },
    {
        "id": "90eece077405292b",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "AUTO UPDATE OF LATEST TLE .TXT",
        "info": "",
        "x": 3030,
        "y": 1320,
        "wires": []
    },
    {
        "id": "ec27d3d9dfde1036",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "AfterJSON",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2990,
        "y": 1200,
        "wires": []
    },
    {
        "id": "8c1a3dd594ede97b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "storedToFile",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 1540,
        "wires": []
    },
    {
        "id": "bf5a0c7c968ace0f",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "after join",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2960,
        "y": 1540,
        "wires": []
    },
    {
        "id": "423f11cfef7f70ae",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "TLE1-edit",
        "func": "\n// New fonction 120623\n\nfunction convertToTLEEpoch(timestamp) {\n  var date = new Date(timestamp);\n  var year = date.getUTCFullYear();\n  var dayOfYear = getDayOfYear(date);\n  // Modification made on the 5/07/23 TO increase precision of the date to the milisecond\n  //var totalSeconds = (date.getUTCHours() * 3600) + (date.getUTCMinutes() * 60) + date.getUTCSeconds();\n  //var fractionOfDay = totalSeconds / (24 * 60 * 60)\n // var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  var totalMilliseconds = (date.getUTCHours() * 3600000) + (date.getUTCMinutes() * 60000) + (date.getUTCSeconds() * 1000) + date.getUTCMilliseconds();\n  var fractionOfDay = totalMilliseconds / (24 * 60 * 60 * 1000);\n  var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  return epoch;\n}\n\nfunction getDayOfYear(date) {\n  var start = new Date(Date.UTC(date.getUTCFullYear(), 0, 0));\n  var diff = date - start;\n  var oneDay = 1000 * 60 * 60 * 24;\n  var dayOfYear = Math.floor(diff / oneDay);\n  \n  return dayOfYear;\n}\n\nfunction pad(num, size) {\n  var s = num.toString();\n  while (s.length < size) {\n    s = \"0\" + s;\n  }\n  return s;\n}\nvar timestamp= msg.paths.path_1;\nvar epoch = convertToTLEEpoch(timestamp);\n\n return{\n topic:\"tle\",\n payload: \"1 13603U 23003EAE \"+epoch+\"  .00030938  00000+0  12818-2 0  9996\",\n body: [timestamp, epoch]\n    } \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 2180,
        "wires": [
            [
                "357b1c9d4fd47fb2",
                "c3969790825257b7"
            ]
        ]
    },
    {
        "id": "da3ff15e3ef8af72",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "TLE-CUSTOM",
        "func": "\n   return{\n topic:\"tle\",\n paths:null,\n payload:[msg.paths.path_1, msg.paths.path_2],\n body:null\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 2660,
        "wires": [
            [
                "fbf93b8de66480d8",
                "de7eddc336816d9b"
            ]
        ]
    },
    {
        "id": "ed8485e00f8f0b52",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "TLE-1",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle1\",\n payload:msg.payload[0].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2680,
        "wires": [
            [
                "065828855a228883"
            ]
        ]
    },
    {
        "id": "f20ce87449bb0473",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "TLE-2",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle2\",\n payload: msg.payload[1].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2760,
        "wires": [
            [
                "2b815f20effd914e"
            ]
        ]
    },
    {
        "id": "2b815f20effd914e",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1330,
        "y": 2760,
        "wires": [
            [
                "cfd7ba48b38a5b82"
            ]
        ]
    },
    {
        "id": "cfd7ba48b38a5b82",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1450,
        "y": 2760,
        "wires": [
            [
                "9a3b7338d1630535",
                "0115afccfe51ac28"
            ]
        ]
    },
    {
        "id": "56746b3aeb555fac",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 2840,
        "wires": [
            [
                "39026bbb7cb7ba50"
            ]
        ]
    },
    {
        "id": "9a3b7338d1630535",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 2780,
        "wires": [
            [
                "39026bbb7cb7ba50"
            ]
        ]
    },
    {
        "id": "a43e55cd5a3e6552",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "TLE-2-edit",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n/*\nif(Number(msg.paths.path_2.incli)>=100){\n     return{\n topic:\"tle\",\n payload: msg.paths.path_3[0]+\" \"+msg.paths.path_3[1]+\" \"+msg.paths.path_2.incli+\" \"+msg.paths.path_2.raan+\" \"+msg.paths.path_2.ecc+\" \"+msg.paths.path_2.aop+\" \"+msg.paths.path_2.meana+\" \"+msg.paths.path_2.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n}\nelse{\n   return{\n topic:\"tle\",\n payload: msg.paths.path_3[0]+\" \"+msg.paths.path_3[1]+\"  \"+msg.paths.path_2.incli+\" \"+msg.paths.path_2.raan+\" \"+msg.paths.path_2.ecc+\" \"+msg.paths.path_2.aop+\" \"+msg.paths.path_2.meana+\" \"+msg.paths.path_2.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n}*/\n\n//                          150523:\n//\n// The setter of B2 R12 might not work 100% yet\nreturn{\n topic:\"tle\",\n payload: \"2 13604 \"+msg.paths.path_2.incli+\" \"+msg.paths.path_2.raan+\" \"+msg.paths.path_2.ecc+\" \"+msg.paths.path_2.aop+\" \"+msg.paths.path_2.meana+\" \"+msg.paths.path_2.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 2760,
        "wires": [
            [
                "28536d82d866d850"
            ]
        ]
    },
    {
        "id": "fe098b3fe6fc5e5d",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 2700,
        "wires": [
            [
                "d228f02b7f113d98"
            ]
        ]
    },
    {
        "id": "28536d82d866d850",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 2760,
        "wires": [
            [
                "d228f02b7f113d98"
            ]
        ]
    },
    {
        "id": "d228f02b7f113d98",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "",
        "paths": "[\"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1780,
        "y": 2660,
        "wires": [
            [
                "da3ff15e3ef8af72",
                "3c1ce0f06523580c"
            ],
            []
        ]
    },
    {
        "id": "417260ed0a2e03cd",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "msg.paths.path_1[9] or [10]",
        "info": "",
        "x": 1950,
        "y": 2800,
        "wires": []
    },
    {
        "id": "065828855a228883",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 2640,
        "wires": [
            [
                "8030a4be7cd955df"
            ]
        ]
    },
    {
        "id": "8030a4be7cd955df",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "",
        "paths": "[\"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1380,
        "y": 2640,
        "wires": [
            [
                "ca7fb27883619287"
            ],
            []
        ]
    },
    {
        "id": "29a4edb4fa25f4b5",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "RED2 setpath1-in",
        "links": [
            "139d87a61de8fb2d",
            "574e4c417983ae7a"
        ],
        "x": 1215,
        "y": 2580,
        "wires": [
            [
                "8030a4be7cd955df"
            ]
        ]
    },
    {
        "id": "0115afccfe51ac28",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 2740,
        "wires": [
            [
                "39026bbb7cb7ba50"
            ]
        ]
    },
    {
        "id": "39026bbb7cb7ba50",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "",
        "paths": "[\"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1760,
        "y": 2760,
        "wires": [
            [
                "a43e55cd5a3e6552"
            ],
            []
        ]
    },
    {
        "id": "fbf93b8de66480d8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 2600,
        "wires": [
            [
                "a09d39652649b0ee"
            ]
        ]
    },
    {
        "id": "a09d39652649b0ee",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1810,
        "y": 2600,
        "wires": [
            [
                "6362160fac60ddf5"
            ]
        ]
    },
    {
        "id": "a5456a0e14ff4e9f",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2120,
        "y": 2600,
        "wires": []
    },
    {
        "id": "34fc69acb40802e3",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "TLE R2 post-manoeuvre IN",
        "links": [
            "9f474fcba3b0160f"
        ],
        "x": 1295,
        "y": 2580,
        "wires": [
            [
                "8030a4be7cd955df"
            ]
        ]
    },
    {
        "id": "8ea64980c2a72e58",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "r2-time-tle-OUT",
        "mode": "link",
        "links": [
            "30a3d53f7ff0de08"
        ],
        "x": 1505,
        "y": 2600,
        "wires": []
    },
    {
        "id": "dfaaccde186ca7ea",
        "type": "file in",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "red2-tle-storage-out",
        "filename": "red2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1270,
        "y": 2820,
        "wires": [
            [
                "cf1650ce74575478"
            ]
        ]
    },
    {
        "id": "cf1650ce74575478",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1430,
        "y": 2820,
        "wires": [
            [
                "56746b3aeb555fac"
            ]
        ]
    },
    {
        "id": "6362160fac60ddf5",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1940,
        "y": 2600,
        "wires": [
            [
                "a5456a0e14ff4e9f"
            ]
        ]
    },
    {
        "id": "c5b6622faa92cafa",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "celestrack wakeup r2",
        "links": [
            "babd9eb8d0246959"
        ],
        "x": 1055,
        "y": 2700,
        "wires": [
            [
                "ed8485e00f8f0b52",
                "f20ce87449bb0473",
                "dfaaccde186ca7ea"
            ]
        ]
    },
    {
        "id": "ca7fb27883619287",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "TLE1-edit",
        "func": "\n// New fonction 120623\n\nfunction convertToTLEEpoch(timestamp) {\n  var date = new Date(timestamp);\n  var year = date.getUTCFullYear();\n  var dayOfYear = getDayOfYear(date);\n  // Modification made on the 5/07/23 TO increase precision of the date to the milisecond\n  //var totalSeconds = (date.getUTCHours() * 3600) + (date.getUTCMinutes() * 60) + date.getUTCSeconds();\n  //var fractionOfDay = totalSeconds / (24 * 60 * 60)\n // var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  var totalMilliseconds = (date.getUTCHours() * 3600000) + (date.getUTCMinutes() * 60000) + (date.getUTCSeconds() * 1000) + date.getUTCMilliseconds();\n  var fractionOfDay = totalMilliseconds / (24 * 60 * 60 * 1000);\n  var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  return epoch;\n}\n\nfunction getDayOfYear(date) {\n  var start = new Date(Date.UTC(date.getUTCFullYear(), 0, 0));\n  var diff = date - start;\n  var oneDay = 1000 * 60 * 60 * 24;\n  var dayOfYear = Math.floor(diff / oneDay);\n  \n  return dayOfYear;\n}\n\nfunction pad(num, size) {\n  var s = num.toString();\n  while (s.length < size) {\n    s = \"0\" + s;\n  }\n  return s;\n}\nvar timestamp= msg.paths.path_1;\nvar epoch = convertToTLEEpoch(timestamp);\n\n return{\n topic:\"tle\",\n payload: \"1 13604U 23004EAE \"+epoch+\"  .00030938  00000+0  12818-2 0  9996\",\n body: [timestamp, epoch]\n    } \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 2700,
        "wires": [
            [
                "fe098b3fe6fc5e5d",
                "8ea64980c2a72e58"
            ]
        ]
    },
    {
        "id": "472fd34f5a4b63ee",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "P1A",
        "mode": "link",
        "links": [
            "ccf9f6d431ed64cc"
        ],
        "x": 565,
        "y": 1240,
        "wires": []
    },
    {
        "id": "7abf459108d1bb9a",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "SAT",
        "mode": "link",
        "links": [
            "1e9676e414d32f76"
        ],
        "x": 565,
        "y": 1280,
        "wires": []
    },
    {
        "id": "e65b738ac6575fd6",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "P1A",
        "mode": "link",
        "links": [
            "ccf9f6d431ed64cc"
        ],
        "x": 405,
        "y": 1320,
        "wires": []
    },
    {
        "id": "4bedade718858642",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "SAT",
        "mode": "link",
        "links": [
            "1e9676e414d32f76"
        ],
        "x": 415,
        "y": 1360,
        "wires": []
    },
    {
        "id": "607ff3a5cfe9a070",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "P1A",
        "mode": "link",
        "links": [
            "ccf9f6d431ed64cc"
        ],
        "x": 405,
        "y": 2100,
        "wires": []
    },
    {
        "id": "b6d33c55a0d06540",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "SAT",
        "mode": "link",
        "links": [
            "1e9676e414d32f76"
        ],
        "x": 405,
        "y": 2140,
        "wires": []
    },
    {
        "id": "a7c69bfe050e2d25",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "P1A",
        "mode": "link",
        "links": [
            "ccf9f6d431ed64cc"
        ],
        "x": 395,
        "y": 2600,
        "wires": []
    },
    {
        "id": "2a251f56fc02b247",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "SAT",
        "mode": "link",
        "links": [
            "1e9676e414d32f76"
        ],
        "x": 395,
        "y": 2640,
        "wires": []
    },
    {
        "id": "ed6b13ca02a5a70d",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "JOINWAIT XSAT",
        "links": [
            "13e6783f699d391f",
            "1a19adb69a35a3a7",
            "41a32e4cc747f910",
            "d51fcddeda0e0de7",
            "24606f59b812db66",
            "ac147f0729ad1810",
            "68c5a6850e745a21",
            "f7f9c11d1f2382ae",
            "8943bd9a10115aea",
            "be24a5a05268a710",
            "2072d02e.cd2d4"
        ],
        "x": 3255,
        "y": 160,
        "wires": [
            [
                "ed91f7078814f403",
                "18dac48b6fa1899c"
            ]
        ]
    },
    {
        "id": "13e6783f699d391f",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "B1 to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d"
        ],
        "x": 2595,
        "y": 880,
        "wires": []
    },
    {
        "id": "1a19adb69a35a3a7",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "B2 to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d"
        ],
        "x": 2575,
        "y": 1660,
        "wires": []
    },
    {
        "id": "41a32e4cc747f910",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "R1 to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d"
        ],
        "x": 2565,
        "y": 2220,
        "wires": []
    },
    {
        "id": "d51fcddeda0e0de7",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "R2 to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d"
        ],
        "x": 2475,
        "y": 2640,
        "wires": []
    },
    {
        "id": "24606f59b812db66",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "P1B to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d"
        ],
        "x": 2445,
        "y": 3060,
        "wires": []
    },
    {
        "id": "ac147f0729ad1810",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "PNEO4 to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d"
        ],
        "x": 2505,
        "y": 3340,
        "wires": []
    },
    {
        "id": "68c5a6850e745a21",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "PNEO3 to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d"
        ],
        "x": 2515,
        "y": 3540,
        "wires": []
    },
    {
        "id": "f7f9c11d1f2382ae",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "SAT to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d"
        ],
        "x": 2235,
        "y": 540,
        "wires": []
    },
    {
        "id": "8943bd9a10115aea",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "GS to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d"
        ],
        "x": 2835,
        "y": 180,
        "wires": []
    },
    {
        "id": "be24a5a05268a710",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "STORK1 to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d"
        ],
        "x": 2785,
        "y": 220,
        "wires": []
    },
    {
        "id": "85b09e63c60a4677",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4240,
        "y": 320,
        "wires": [
            [
                "39bc328534852ef6"
            ]
        ]
    },
    {
        "id": "e515e1802081c007",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh VTS",
        "tooltip": "",
        "color": "",
        "bgcolor": "#104900",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4230,
        "y": 360,
        "wires": [
            [
                "39bc328534852ef6"
            ]
        ]
    },
    {
        "id": "39bc328534852ef6",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "refreshVTS",
        "mode": "link",
        "links": [
            "04828409f3c8eb98",
            "118f0f492f55ac0a",
            "1e9676e414d32f76",
            "220556fdf5358e27",
            "32528e58bc954e44",
            "34c17ae1e756d864",
            "af9822fbee098e88",
            "c9235065a31da113",
            "ccf9f6d431ed64cc",
            "e7a2222d78b89f73"
        ],
        "x": 4405,
        "y": 340,
        "wires": []
    },
    {
        "id": "396dad2ae32bfc99",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TimePerigee-B1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1840,
        "y": 820,
        "wires": []
    },
    {
        "id": "0ea9525a009058f4",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "120623 New function",
        "info": "",
        "x": 1580,
        "y": 1540,
        "wires": []
    },
    {
        "id": "a57a4be5d794050d",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "Celestrak requests return IN",
        "links": [
            "1bb78f1585330b5c",
            "a1bc0b9e16a50e7c",
            "a25fb990a2d35418",
            "be5b3468b95dc183",
            "d83b568b192310f6"
        ],
        "x": 3475,
        "y": 1260,
        "wires": [
            [
                "dcc5f3bfad012804"
            ]
        ]
    },
    {
        "id": "dcc5f3bfad012804",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "Celestrack status code analyse",
        "func": "if(msg.statusCode==403){\n    msg.payload=\"Request declined by Celestrak\";\n}\nelse if(msg.statusCode==200){\n    msg.payload=\"Request accepted by Celestrak\";\n}\nelse{\n    msg.payload=\"Unknown status for Celestrak\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 1260,
        "wires": [
            [
                "ea046aa05eff206f"
            ]
        ]
    },
    {
        "id": "041a53fbb9393209",
        "type": "ui_text",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "group": "b10e0a54.7b0198",
        "order": 24,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "status of request",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 4160,
        "y": 1260,
        "wires": []
    },
    {
        "id": "f22d599e751d9314",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "audio celestrak",
        "mode": "link",
        "links": [
            "c67ec5067dc22890"
        ],
        "x": 4155,
        "y": 1300,
        "wires": []
    },
    {
        "id": "ea046aa05eff206f",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3750,
        "y": 1300,
        "wires": [
            [
                "a90db6e1e3f13fb6",
                "eaed2112c0d57b25"
            ]
        ]
    },
    {
        "id": "a90db6e1e3f13fb6",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "Check each",
        "func": "if(msg.payload.every((element) => element==\"Request accepted by Celestrak\"))\n{msg.payload=\"Request accepted by Celestrak\";}\n\nelse if(msg.payload.some((element) => element==\"Request declined by Celestrak\"))\n{msg.payload=\"Request declined by Celestrak\";}\n\nelse{msg.payload=\"Unknown status for Celestrak\";}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3910,
        "y": 1300,
        "wires": [
            [
                "f22d599e751d9314",
                "041a53fbb9393209",
                "eaed2112c0d57b25",
                "c0b63df6732ea889"
            ]
        ]
    },
    {
        "id": "eaed2112c0d57b25",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "celestrak",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3970,
        "y": 1260,
        "wires": []
    },
    {
        "id": "72f9a7c1e4e8ac50",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "headers.vtsflag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ready",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4350,
        "y": 180,
        "wires": [
            [
                "5a8ee579df55828c"
            ]
        ]
    },
    {
        "id": "0b6a2fcc56b1307a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "",
        "func": "msg.payload=\"situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4680,
        "y": 100,
        "wires": [
            [
                "ffb4c4b51344ccf8",
                "d0e791394ec64d0c"
            ]
        ]
    },
    {
        "id": "ffb4c4b51344ccf8",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "",
        "mode": "link",
        "links": [
            "c67ec5067dc22890"
        ],
        "x": 4815,
        "y": 60,
        "wires": []
    },
    {
        "id": "711bd6f73f5164ca",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "INIT NodeRed CONSTRAINT ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "INIT NodeRed CONSTRAINT 1.0 -1\\n",
        "payloadType": "str",
        "x": 3430,
        "y": 1500,
        "wires": [
            [
                "92e0db73f92c1c5d"
            ]
        ]
    },
    {
        "id": "3803c3c602de1c33",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "show ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4050,
        "y": 1540,
        "wires": []
    },
    {
        "id": "462d42c4d9e31798",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "button: PLAY VTS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "CMD TIME PLAY",
        "payloadType": "str",
        "x": 3410,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "3b1d319d527a2296",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "button: PAUSE VTS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "CMD TIME PAUSE",
        "payloadType": "str",
        "x": 3410,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "c45c0e4863b2664e",
        "type": "tcp request",
        "z": "7c68352c.1b47bc",
        "name": "",
        "server": "172.17.0.1",
        "port": "8888",
        "out": "time",
        "ret": "buffer",
        "splitc": "0",
        "newline": "",
        "tls": "",
        "x": 3880,
        "y": 1540,
        "wires": [
            [
                "3803c3c602de1c33"
            ]
        ]
    },
    {
        "id": "a7cf0aedfca0d674",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://172.17.0.1:8888",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 3790,
        "y": 1800,
        "wires": [
            [
                "82988d54abc37739"
            ]
        ]
    },
    {
        "id": "f25b8cca6f8ebaf6",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "Inject message",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "rouge",
        "payloadType": "str",
        "x": 3800,
        "y": 1720,
        "wires": [
            [
                "657f20487bb1e584"
            ]
        ]
    },
    {
        "id": "be977bb8c9f65ed7",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "VTS request",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3990,
        "y": 1760,
        "wires": []
    },
    {
        "id": "82988d54abc37739",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "VTS response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4000,
        "y": 1800,
        "wires": []
    },
    {
        "id": "e1e06bd20a25c472",
        "type": "catch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "scope": [
            "a7cf0aedfca0d674",
            "c45c0e4863b2664e"
        ],
        "uncaught": false,
        "x": 3810,
        "y": 1840,
        "wires": [
            [
                "82988d54abc37739"
            ]
        ]
    },
    {
        "id": "3e251285f5dc3f34",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "button: Reload VTS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "CMD SERVICE AUTORESTART",
        "payloadType": "str",
        "x": 3410,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "a9c821a33e9c5159",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "",
        "func": "var cmd1=\"FWD ALL CMD TIMELINE ReloadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_OEM_POSITION.TXT\\n\";\nvar cmd2=\"FWD ALL CMD TIMELINE ReloadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_AEM_ATTITUDE.TXT\\n\";\nvar cmd3=\"CMD SERVICE StartApplication SurfaceView 1\\n\";\nvar cmd6=\"CMD SERVICE StopApplication 1\\n\";\nvar cmd4=\"CMD EVENT ReloadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_AEM_ATTITUDE.TXT\\n\";\nvar cmd5=\"CMD EVENT ReloadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_OEM_POSITION.TXT\\n\";\nvar cmd7=\"CMD SERVICE StartApplication Celestia 0\\n\";\nvar cmd8=\"CMD SERVICE StopApplication 0\\n\";\nvar cmd9=\"FWD ALL CMD SERVICE InitSatellite \\\"BLUE1\\\" \\\"Sol/Earth\\\"\\n\";\nvar cmd10=\"INIT NodeRed CONSTRAINT 1.0 3\\n\";\nvar cmd11=\"FWD ALL CMD SERVICE InitCentralBody \\\"Earth\\\" \\\"Sol\\\"\\n\";\n\nmsg.payload=cmd1+cmd2+cmd6+cmd3+cmd8+cmd7;\n//msg.payload=cmd10+cmd1+cmd2+cmd9+cmd11;\n//msg.payload=cmd4+cmd5;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 1580,
        "wires": [
            [
                "c45c0e4863b2664e"
            ]
        ]
    },
    {
        "id": "640bcc1f704ee31a",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "AUTO RESTART VTS",
        "links": [
            "d0e791394ec64d0c"
        ],
        "x": 3505,
        "y": 1540,
        "wires": [
            [
                "a9c821a33e9c5159"
            ]
        ]
    },
    {
        "id": "d0e791394ec64d0c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "",
        "mode": "link",
        "links": [
            "640bcc1f704ee31a"
        ],
        "x": 4815,
        "y": 100,
        "wires": []
    },
    {
        "id": "92e0db73f92c1c5d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "",
        "func": "msg.payload=\"INIT NodeRed CONSTRAINT 1.0 3\\n\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 1500,
        "wires": [
            [
                "c45c0e4863b2664e"
            ]
        ]
    },
    {
        "id": "331dd35712a62381",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "",
        "func": "var cmd1=\"CMD TIMELINE ReloadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_OEM_POSITION.TXT\\n\";\nvar cmd2=\"CMD TIMELINE ReloadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_AEM_ATTITUDE.TXT\\n\";\nvar cmd3=\"FWD ALL CMD TIMELINE LoadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_OEM_POSITION.TXT\\n\";\nvar cmd4=\"FWD ALL CMD TIMELINE LoadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_AEM_ATTITUDE.TXT\\n\";\nvar cmd5=\"FWD ALL CMD TIMELINE LoadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_OEM_POSITION.TXT\\n\";\nvar cmd6=\"FWD ALL CMD TIMELINE LoadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_AEM_ATTITUDE.TXT\\n\";\n\nvar cmd9='FWD 1 CMD SERVICE InitSatellite \\\"BLUE1\\\" \\\"Sol/Earth\\\"\\n';\nvar cmd10=\"INIT NodeRed CONSTRAINT 1.0 3\\n\";\nvar cmd11=\"FWD 1 CMD SERVICE InitCentralBody \\\"Earth\\\" \\\"Sol\\\"\\n\";\n//msg.payload=cmd1+cmd2+cmd6+cmd3+cmd8+cmd7;\nmsg.payload=cmd10+cmd1+cmd2+cmd11+cmd9;\n//msg.payload=cmd4+cmd5;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 1620,
        "wires": [
            [
                "c45c0e4863b2664e"
            ]
        ]
    },
    {
        "id": "472ddc8b042b18ad",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3440,
        "y": 1620,
        "wires": [
            [
                "331dd35712a62381"
            ]
        ]
    },
    {
        "id": "657f20487bb1e584",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "",
        "func": "msg.payload=\"FWD 1 CMD SERVICE InitSatellite \\\"BLUE1\\\" \\\"Sol/Earth\\\"\\n\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3780,
        "y": 1760,
        "wires": [
            [
                "a7cf0aedfca0d674"
            ]
        ]
    },
    {
        "id": "5a8ee579df55828c",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python concatenate.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "concatenate",
        "x": 4490,
        "y": 180,
        "wires": [
            [
                "8cb6f04c9bcdf194",
                "0b6a2fcc56b1307a"
            ],
            [
                "b2241bb2a12a8f16"
            ],
            []
        ]
    },
    {
        "id": "b2241bb2a12a8f16",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "CONCATENATE  ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4730,
        "y": 180,
        "wires": []
    },
    {
        "id": "8cb6f04c9bcdf194",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "CONCATENATE OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4720,
        "y": 140,
        "wires": []
    },
    {
        "id": "813073f9113a2daf",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copymem.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copymem",
        "x": 3460,
        "y": 340,
        "wires": [
            [
                "279f6bac680aabe9",
                "b84d6b0d444acde7"
            ],
            [
                "01e51961a76d77a0"
            ],
            []
        ]
    },
    {
        "id": "01e51961a76d77a0",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "COPYMEM ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3780,
        "y": 340,
        "wires": []
    },
    {
        "id": "279f6bac680aabe9",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "COPYMEM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3770,
        "y": 300,
        "wires": []
    },
    {
        "id": "b84d6b0d444acde7",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3470,
        "y": 280,
        "wires": [
            [
                "ed91f7078814f403"
            ]
        ]
    },
    {
        "id": "18dac48b6fa1899c",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "name": "",
        "paths": "[\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3300,
        "y": 280,
        "wires": [
            [
                "813073f9113a2daf"
            ],
            []
        ]
    },
    {
        "id": "68fdbbd75259124d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "DB array to JSON",
        "func": "//msg.payload = msg.payload.tle2;\nlet splitArray = msg.payload.tle2.split(\" \");\n\nfor (const element in splitArray) {\n    \n  if (isNaN(splitArray[element]) || splitArray[element].trim() == \"\") {\n    splitArray.splice(element, 1);\n  } else {\n    \n//Nothing\n  }\n}\nsplitArray.shift();\nsplitArray.shift();\nmsg.payload ={\n    incli:splitArray[0],\n    raan:splitArray[1],\n    ecc:splitArray[2],\n    aop:splitArray[3],\n    meana:splitArray[4],\n    mean:splitArray[5],\n    version:splitArray[6]}\n \nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4490,
        "y": 1240,
        "wires": [
            [
                "1e218245e4e86930",
                "32334d66117a81ba",
                "7b069795cc213854",
                "989fb8f74bf2a48d"
            ]
        ]
    },
    {
        "id": "1e218245e4e86930",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "name": "blue1-tle-storage.json",
        "filename": "blue1-tle-storage.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4500,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "5ab99c0c9192c682",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "MEM FLUSH FOR RESCUE DB",
        "mode": "link",
        "links": [
            "3186623bfab93670"
        ],
        "x": 4365,
        "y": 440,
        "wires": []
    },
    {
        "id": "c0b63df6732ea889",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Request accepted by Celestrak",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4060,
        "y": 1320,
        "wires": [
            [
                "adebc33415b96346"
            ]
        ]
    },
    {
        "id": "adebc33415b96346",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "ACCEPTED CELESTRAK CHECK STATUS",
        "mode": "link",
        "links": [
            "1a66111fa98df20d",
            "d81801e66dd0e3e2"
        ],
        "x": 4185,
        "y": 1340,
        "wires": []
    },
    {
        "id": "b0cbf5198d5ebd45",
        "type": "catch",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "scope": [
            "976ed181456d5d92"
        ],
        "uncaught": false,
        "x": 3810,
        "y": 460,
        "wires": [
            [
                "1926d3943dce7523"
            ]
        ]
    },
    {
        "id": "1926d3943dce7523",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4030,
        "y": 440,
        "wires": []
    },
    {
        "id": "b448f6837eae385f",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "on-start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4590,
        "y": 420,
        "wires": [
            [
                "f9e0d8bfc76d2ea9"
            ]
        ]
    },
    {
        "id": "c26754142d9a49d1",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "REFRESH DB FOR START",
        "links": [
            "60708c380b4d96f0"
        ],
        "x": 4455,
        "y": 420,
        "wires": [
            [
                "b448f6837eae385f"
            ]
        ]
    },
    {
        "id": "1dd663aebe5da599",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 4755,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f7f41c5df86844a6",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4450,
        "y": 1160,
        "wires": [
            [
                "34c234d7767900b6"
            ]
        ]
    },
    {
        "id": "34c234d7767900b6",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4630,
        "y": 1160,
        "wires": [
            [
                "1dd663aebe5da599"
            ]
        ]
    },
    {
        "id": "32334d66117a81ba",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "name": "blue2-tle-storage.json",
        "filename": "blue2-tle-storage.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4500,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "7b069795cc213854",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "name": "red1-tle-storage.json",
        "filename": "red1-tle-storage.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4500,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "989fb8f74bf2a48d",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "name": "red2-tle-storage.json",
        "filename": "red2-tle-storage.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4500,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "dce3220a.a2827",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Angular Calculation Function",
        "func": "\n// Create a Params variable\n// with a time and temp component\n// Earth radius in kilometers\nconst radius = 6378;\n\n// position data from the Ground Station\nvar lat1 = msg.payload[0].latitude;\nvar lon1 = msg.payload[0].longitude;\nvar alt1 = msg.payload[0].altitude/1000;\n// latitude and longitude of ground station in radian\nvar lat1rad = lat1*Math.PI/180;\nvar lon1rad = lon1*Math.PI/180\n\n// position data from the Satellite\nvar lat2 = msg.object.lat;\nvar lon2 = msg.object.lon;\nvar alt2 = msg.object.alt;\n// latitude and logitude of satellite in radian\nvar lat2rad = lat2*Math.PI/180;\nvar lon2rad = lon2*Math.PI/180;\n\n// Intermediate angles and distances\nvar deltaLat = Math.abs((lat2-lat1)*Math.PI/180);\nvar deltaLon = Math.abs((lon2-lon1)*Math.PI/180);\nvar deltaAlt = Math.abs(alt2-alt1);\n\n//Orthodromic Distance in km (arch portion) beetween ground station and Satellite's ground projection\nvar arc = Math.acos(Math.sin(lat1rad)*Math.sin(lat2rad)+Math.cos(lat1rad)*Math.cos(lat2rad)*Math.cos(deltaLon))*radius;\n\n//Alpha angle (radian) between Ground Station - Earth Center - Satellite\nvar alpha =  arc/radius;\n\n\n//Chord in km between Ground Station and Satellite's ground projection\nvar chord = Math.sqrt(2*radius*radius*(1-Math.cos(alpha)));\n\n//Gamma angle (radian) in the isoceles triangle (Ground station, Earth Radius, Satellite's ground projection)\nvar gamma = Math.acos(chord/(2*radius));\n\n//Beta angle (radian) complementary in 90° with Gamma\n//PI()/2-C29\nvar beta = Math.PI/2-gamma;\n\n//Distance in km in line of sight between Satellite and Ground Station\nvar dist = Math.sqrt(chord*chord+deltaAlt*deltaAlt-2*chord*deltaAlt*Math.cos(beta+Math.PI/2))\n\n//Cotangente of Azimut\n//(SIN($C$8)*COS(C18-$C$9)-COS($C$8)*TAN(C17))/(SIN(C18-$C$9))\nvar cotAz = (Math.sin(lat1rad)*Math.cos(lon2rad-lon1rad)-Math.cos(lat1rad)*Math.tan(lat2rad))/Math.sin(lon2rad-lon1rad);\n\n//Tangente of Azimut\nvar tanAz = 1/cotAz;\n\n//Arctangente of Azimut in degree\n//180*ATAN(C35)/PI()\nvar atanAz = 180*Math.atan(tanAz)/Math.PI;\n\n//Symbols\n//Difference of longitude in degree between Satellite and Station\nvar longiDiff = lon2-lon1;\n\n//Longitude symbol : 0 if satellite is at West from the Station, else 1\nvar longisymbol = (1+longiDiff/Math.abs(longiDiff))/2;\n\n\n//Latitude symbol for Hemisphere : 0 if satellite is South Hemisphere, else 2\nvar latisymbol = 1+lat1/Math.abs(lat1);\n\n//Relative latitude difference : difference of latitude in degree between satellite and ground station\nvar latiDiff = lat2 - lat1;\n//C13-$C$4\n\n//Latitude symbol for relative position between satellite and station\nvar relativeLatiDiff = (1+latiDiff/Math.abs(latiDiff))/2;\n\n\n//Elevation angle between Station and Satellite, in degree\nvar el = 180*Math.atan(deltaAlt/chord)/Math.PI-beta;\n\n//Azimut angle : direction between Station and Satellite, in degree\n//(360-C42*90-C41*180)-C37\nvar azi = 180*longisymbol+((180*relativeLatiDiff+(360-latisymbol*90-longisymbol*180)-atanAz) % 360)\nvar az = azi % 360;\n\n\n//Parameters of the message for fill the table\n\nmsg.params = {$id:msg.body.id, $names:msg.payload[0].name, $mjday:msg.object.mjday, $mjfrac:msg.object.mjfrac, $dist:dist, $az:az, $el:el}\nvar tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n //if elevation angle is inside the visibility cone of the ground station\nif(el>msg.payload[0].elevation){\n    gs.id = msg.body.id\n    gs.name = msg.payload[0].name\n    gs.epochUnixTime = msg.object.epochUnixTime\n    gs.mjday = msg.object.mjday\n    gs.mjfrac = msg.object.mjfrac\n    gs.dist = dist\n    gs.az = az\n    gs.el = el\n\n\n    tab.push(gs)\n\n    msg.payload = tab\n    return msg;  \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2440,
        "y": 1000,
        "wires": [
            [
                "f1175ba2.a05c28",
                "6b922809.e4f268"
            ]
        ]
    },
    {
        "id": "2e7fb2ab.ff8a5e",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Fill the Angular table",
        "info": "",
        "x": 2910,
        "y": 900,
        "wires": []
    },
    {
        "id": "5d531160.429e6",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "select gsdata of gs for id",
        "func": "msg.body = msg.payload;\nmsg.payload = {name: msg.payload.name}\n//msg.topic ='SELECT * FROM gsdata WHERE  name =\"' + msg.payload.name+'\"' ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 1000,
        "wires": [
            [
                "ce326199.0a85b"
            ]
        ]
    },
    {
        "id": "30879888.257e48",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Angular data calculation",
        "info": "",
        "x": 2460,
        "y": 1040,
        "wires": []
    },
    {
        "id": "88e679ca.dca768",
        "type": "link out",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "ANGULAR Table is filled",
        "links": [
            "192eea6c.16fe26",
            "fc15070f.cea9b8",
            "fe49e6f5.8df938"
        ],
        "x": 3115,
        "y": 960,
        "wires": []
    },
    {
        "id": "72aca196.278cf",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 410,
        "y": 1040,
        "wires": [
            [
                "ca490983.7ec9b8",
                "2e404121.6748ae"
            ]
        ]
    },
    {
        "id": "8f9bb2ec.12936",
        "type": "complete",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Trigger when VISI table is complete",
        "scope": [
            "48bcbb3f.1b82b4"
        ],
        "uncaught": false,
        "x": 320,
        "y": 1000,
        "wires": [
            [
                "ca490983.7ec9b8",
                "2e404121.6748ae"
            ]
        ]
    },
    {
        "id": "5e4f2147.9249e",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "EXIT LOOP2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3170,
        "y": 880,
        "wires": []
    },
    {
        "id": "fce1105a.6ef5",
        "type": "trigger",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2900,
        "y": 940,
        "wires": [
            [
                "88e679ca.dca768",
                "5e4f2147.9249e",
                "2668a3d2.59aabc"
            ]
        ]
    },
    {
        "id": "ca00b8d1.93b088",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Display ground station id stored in database",
        "func": "\n   return{\n topic:\"Ground station Id stored in database\",\n payload:msg.params.$id,\n\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3010,
        "y": 1020,
        "wires": [
            [
                "a53ae528.1172e8"
            ]
        ]
    },
    {
        "id": "a53ae528.1172e8",
        "type": "ui_chart",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "group": "e85e692d.e47bb8",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Pursuit Database Monitoring",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3340,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "6b922809.e4f268",
        "type": "delay",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 2700,
        "y": 1020,
        "wires": [
            [
                "ca00b8d1.93b088"
            ]
        ]
    },
    {
        "id": "2668a3d2.59aabc",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "message to dashboard9",
        "func": "msg.payload = \"Angular data written in DB\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 920,
        "wires": [
            [
                "986279ab.994688"
            ]
        ]
    },
    {
        "id": "986279ab.994688",
        "type": "link out",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "angular OUT",
        "links": [
            "a3f34a27.9e9038",
            "4250d989.2dabd8",
            "f48249b.dec28b8"
        ],
        "x": 3375,
        "y": 920,
        "wires": []
    },
    {
        "id": "2e404121.6748ae",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "query for sat position",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1000,
        "wires": [
            [
                "333f1f0b.07ba1"
            ]
        ]
    },
    {
        "id": "333f1f0b.07ba1",
        "type": "mongodb in",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of satpos",
        "collection": "satpos",
        "operation": "find",
        "x": 900,
        "y": 1000,
        "wires": [
            [
                "8361c2b3.30592"
            ]
        ]
    },
    {
        "id": "e9076de9.07737",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 410,
        "y": 960,
        "wires": [
            [
                "2e404121.6748ae"
            ]
        ]
    },
    {
        "id": "8361c2b3.30592",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1070,
        "y": 1000,
        "wires": [
            [
                "5cf3906d.cd20b"
            ]
        ]
    },
    {
        "id": "5cf3906d.cd20b",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Query for visibility ",
        "func": "msg.object = msg.payload;\nmsg.payload = {mjday: msg.payload.mjday}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1000,
        "wires": [
            [
                "c781d830.604888"
            ]
        ]
    },
    {
        "id": "c781d830.604888",
        "type": "mongodb in",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of visi ",
        "collection": "visibility_windows",
        "operation": "find",
        "x": 1450,
        "y": 1000,
        "wires": [
            [
                "c5dfe4bd.95e2e8"
            ]
        ]
    },
    {
        "id": "c5dfe4bd.95e2e8",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Sat position inside visi windows",
        "func": "for (var i = 0; i < msg.payload.length-1; i++) {\n if((msg.object.mjfrac >= msg.payload[i].mjfrac) && (msg.payload[i].status ==\"START\")){\n    if((msg.object.mjfrac <= msg.payload[i+1].mjfrac) && (msg.payload[i+1].status ==\"END\")){\n        var newMsg = {};\n        newMsg.object = msg.object;\n        newMsg.payload = msg.payload[i]\n        node.send(newMsg);\n        //console.log(msg.object.mjday, msg.object.mjfrac);\n    }\n    //console.log(msg.object.mjday, msg.object.mjfrac);\n }\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 1000,
        "wires": [
            [
                "5d531160.429e6"
            ]
        ]
    },
    {
        "id": "ce326199.0a85b",
        "type": "mongodb in",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of ground station",
        "collection": "ground_stations",
        "operation": "find",
        "x": 2190,
        "y": 1000,
        "wires": [
            [
                "dce3220a.a2827"
            ]
        ]
    },
    {
        "id": "ca490983.7ec9b8",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "delete angular",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1040,
        "wires": [
            [
                "88e99eb4.37486"
            ]
        ]
    },
    {
        "id": "88e99eb4.37486",
        "type": "mongodb out",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "",
        "collection": "angular",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 880,
        "y": 1040,
        "wires": []
    },
    {
        "id": "a8b66cd3.d5319",
        "type": "mongodb out",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-angular mongo",
        "collection": "angular",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2940,
        "y": 980,
        "wires": []
    },
    {
        "id": "f1175ba2.a05c28",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2670,
        "y": 980,
        "wires": [
            [
                "fce1105a.6ef5",
                "a8b66cd3.d5319"
            ]
        ]
    },
    {
        "id": "a5ef7279.4f0f6",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "pursuit data",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 2430,
        "y": 1420,
        "wires": []
    },
    {
        "id": "4a7abf0e.e4e85",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "pursuit data",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2430,
        "y": 1460,
        "wires": []
    },
    {
        "id": "eac5880a.b59fb8",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "pursuit data",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2430,
        "y": 1500,
        "wires": []
    },
    {
        "id": "36c58d2d.bf0f02",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "pursuit data",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2430,
        "y": 1540,
        "wires": []
    },
    {
        "id": "95af4893.c89828",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "pursuit data",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2430,
        "y": 1580,
        "wires": []
    },
    {
        "id": "362b3f2b.4d2ac",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "pursuit data",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2430,
        "y": 1620,
        "wires": []
    },
    {
        "id": "fc51d4bf.af93b8",
        "type": "ui_slider",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "label": "Time",
        "tooltip": "Time range",
        "group": "e7d5b9e4.972fe8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "50",
        "step": 1,
        "className": "",
        "x": 1070,
        "y": 1540,
        "wires": [
            [
                "7666c04f07bbb05f",
                "6d1ccf9412d0d665"
            ]
        ]
    },
    {
        "id": "c33f4812.c84db8",
        "type": "ui_template",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "name": "SkyView",
        "order": 2,
        "width": 6,
        "height": 5,
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset='ISO-8859-1'>\n    <script src=\"https://d3js.org/d3.v3.min.js\"></script>\n    <style type=\"text/css\">\npath {\n  fill: none;\n  stroke: black;\n  stroke-width: 2px;\n}\n.axis text {\n  font: 13px sans-serif;\n}\n\n.axis line,\n.axis circle {\n  fill: none;\n  stroke: #777;\n  stroke-dasharray: 1,4;\n}\n\n.line {\n  fill: none;\n  stroke: red;\n  stroke-width: 1.5px;\n}\n</style>\n</head>\n\n\n\n<body style='background-color:lightgray'>\n    <div id=\"chart\" style='width: 250px; height: 250px; padding-left: 30px; padding-bottom: 5px;'></div>\n\n    <script>\n        var deg2rad = Math.PI / 180;\n        var width = 250, height = 250, radius = Math.min(width, height) / 2 - 30;\n\n        var svg = d3.select(\"#chart\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n        var r = d3.scale.linear()\n            .domain([90, 0])\n            .range([0, radius]);\n\n        var line = d3.svg.line.radial()\n            .radius(function (d) { return r(d[1]); })\n            .angle(function (d) { return -d[0] + Math.PI / 2; });\n\n        var gr = null;\n        \n        createSkyplot();\n        \n        function createSkyplot() {\n        //////////////////////\t\t\t  \n        gr = svg.append(\"g\")\n            .attr(\"class\", \"r axis\")\n            .selectAll(\"g\")\n            .data(r.ticks(5))\n            .enter().append(\"g\");\n\n        gr.append(\"circle\").attr(\"r\", r).style('fill', 'black');\n\n        gr.append(\"text\")\n            .attr(\"y\", function (d) { return -r(d) - 4; })\n            .attr(\"transform\", \"rotate(20)\")\n            .style(\"text-anchor\", \"middle\")\n            .style('fill', 'green')\n            .text(function (d) { return d; });\n        /////////////////////\n\n        /////////////////////\n        var ga = svg.append(\"g\")\n            .attr(\"class\", \"a axis\")\n            .selectAll(\"g\")\n            .data(d3.range(0, 360, 45))\n            .enter().append(\"g\")\n            .attr(\"transform\", function (d) { return \"rotate(\" + (d - 90) + \")\"; });\n\n        ga.append(\"line\").attr(\"x2\", radius).style('stroke', 'white').style('stroke-dasharray', '1,8');\n\n        ga.append(\"text\")\n            .attr(\"x\", radius + 6)\n            .attr(\"dy\", \".35em\")\n            .style(\"text-anchor\", function (d) { return d < 360 && d > 90 ? \"end\" : null; })\n            .attr(\"transform\", function (d) { return d < 360 && d > 90 ? \"rotate(180 \" + (radius + 3) + \",0)\" : null; })\n            .text(function (d) { return d + \"°\"; });\n        /////////////////////\n    }\n    \n        \n        (function ($scope) {\n            // watch msg object from Node-RED\n            scope.$watch('msg', function (msg) {\n                \n                svg.selectAll('circle').remove();\n                svg.selectAll('text').remove();\n                \n                createSkyplot();\n        \n                function createSkyplot() {\n                //////////////////////\t\t\t  \n                gr = svg.append(\"g\")\n                    .attr(\"class\", \"r axis\")\n                    .selectAll(\"g\")\n                    .data(r.ticks(5))\n                    .enter().append(\"g\");\n        \n                gr.append(\"circle\").attr(\"r\", r).style('fill', 'black');\n        \n                gr.append(\"text\")\n                    .attr(\"y\", function (d) { return -r(d) - 4; })\n                    .attr(\"transform\", \"rotate(20)\")\n                    .style(\"text-anchor\", \"middle\")\n                    .style('fill', 'green')\n                    .text(function (d) { return d; });\n                /////////////////////\n        \n                /////////////////////\n                var ga = svg.append(\"g\")\n                    .attr(\"class\", \"a axis\")\n                    .selectAll(\"g\")\n                    .data(d3.range(0, 360, 45))\n                    .enter().append(\"g\")\n                    .attr(\"transform\", function (d) { return \"rotate(\" + (d - 90) + \")\"; });\n        \n                ga.append(\"line\").attr(\"x2\", radius).style('stroke', 'white').style('stroke-dasharray', '1,8');\n        \n                ga.append(\"text\")\n                    .attr(\"x\", radius + 6)\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", function (d) { return d < 360 && d > 90 ? \"end\" : null; })\n                    .attr(\"transform\", function (d) { return d < 360 && d > 90 ? \"rotate(180 \" + (radius + 3) + \",0)\" : null; })\n                    .text(function (d) { return d + \"°\"; });\n                /////////////////////\n            }\n                \n                \n                \n                // new message received\n                var Data = msg.payload;\n                //window.alert(strlink2);\n                //document.getElementById(\"refee\").setAttribute(\"href\",strlink2);\n                var json = {\n                    \"type\": \"GSV\",\n                    \"inView\": [{ \"data\": [1, 45, 90, \"#69b3a2\"] },\n                    { \"data\": [3, 70, 180, \"#69b3a2\"] },\n                    { \"data\": [5, 70, 225, \"#A82051\"] },\n                    { \"data\": [3, 70, 270, \"#69b3a2\"] },\n                    { \"data\": [3, 70, 315, \"#69b3a2\"] },\n                    { \"data\": [3, 70, 0, \"#69b3a2\"] }]\n                };\n\n                //updateSkyPlot(json);\n                updateSkyPlot(Data);\n                \n                \n                \n                \n                \n                function updateSkyPlot(d) {\n                    \n                    \n                    \n                    \n                    var pos = [];\n                    var inview = d.inView;\n\n                    for (var elem in inview) {\n                        if (inview.hasOwnProperty(elem)) {\n                            // the azimuth should be in radians and substracted from (Math.PI/2)\t\"data\" : [1, 45, 90]\n                            var d = [(Math.PI / 2) - inview[elem].data[2] * deg2rad, inview[elem].data[1]];\n                            pos.push({ \"angle\": d, \"label\": inview[elem].data[0], \"col\": inview[elem].data[3] });\n                        }\n                    }\n\n                    var r = d3.scale.linear()\n                        .domain([90, 0])\n                        .range([0, radius]);\n\n                    var line = d3.svg.line.radial()\n                        .radius(function (d) { return r(d[1]); })\n                        .angle(function (d) { return -d[0] + Math.PI / 2; });\n\n                    var color = d3.scale.category20();\n\n                    svg.selectAll('circle').remove();\n                    \n                    \n                    gr.append(\"circle\").attr(\"r\", r).style('fill', 'black');\n                    \n\n                    var points = svg.selectAll(\"point\")\n                        .data(pos)\n                        .enter()\n                        .append(\"a\")\n                        .attr(\"transform\", function (d) {\n                            var coors = line([d.angle]).slice(1).slice(0, -1);\n                            return \"translate(\" + coors + \")\"\n                        });\n\n                    points.append(\"circle\")\n                        .attr(\"class\", \"point\")\n                        .attr(\"r\", 5)\n                        .attr(\"fill\", function (d, i) { return color(d.col); });\n\n                    //points.append(\"text\")\n                        //.text(function (d) { return d.label })\n                        //.attr(\"transform\", \"translate(-7,5)\")\n                }\n            })\n        }) (scope);\n    </script>\n</body>\n</html>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 2440,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "58db54d0.12d46c",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2430,
        "y": 1720,
        "wires": []
    },
    {
        "id": "c43a64bf.f83098",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Time start visi",
        "func": "//from msg with mday and mjfrac \n//var tjd = (msg.payload[0].mjday-33282)+msg.payload[0].mjfrac/86400\n//to Epoch Unix date\n//var time = 86400*tjd-631152000\nvar time = msg.payload[0].epochUnixTime\n//to GMT date format\nvar myDate = new Date(time *1000);\ndate= (myDate.toGMTString());\n\nmsg.payload = date\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1420,
        "wires": [
            [
                "d2a2dc9c.b4a27"
            ]
        ]
    },
    {
        "id": "d2a2dc9c.b4a27",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Date",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1910,
        "y": 1420,
        "wires": []
    },
    {
        "id": "7cb023f0.0c57bc",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Time visi",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nvar tjd = (instantT.mjday-33282)+instantT.mjfrac/86400\nvar time = 86400*tjd-631152000\n\nvar myDate = new Date(time *1000);\ndate= (myDate.toGMTString());\n\nmsg.payload = date\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 1460,
        "wires": [
            [
                "d2a2dc9c.b4a27"
            ]
        ]
    },
    {
        "id": "da44af67.6b24f",
        "type": "join",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1530,
        "y": 1540,
        "wires": [
            [
                "7cb023f0.0c57bc",
                "5192d05b.d1875",
                "da50ca5b.310b28",
                "386d7942.156c76",
                "429b1393.6ffd6c",
                "b8207185.f42bd",
                "18f17f32.5f7e71",
                "c62dbe90.1b804",
                "13ab995fda488768"
            ]
        ]
    },
    {
        "id": "a647cc01.bfdfb",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Max slider",
        "func": "\n\nmsg = {ui_control:{max:msg.payload.length-1}}; // need a -1 because it is an array index\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1540,
        "wires": [
            [
                "fc51d4bf.af93b8"
            ]
        ]
    },
    {
        "id": "5192d05b.d1875",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "msg2dash",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\n// we copy the object of interest to avoid having to copy everything \nmsg.payload = instantT.id\nmsg.topic = \"Id\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 1420,
        "wires": [
            [
                "a5ef7279.4f0f6"
            ]
        ]
    },
    {
        "id": "da50ca5b.310b28",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "msg2dash",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nmsg.payload = instantT.name\nmsg.topic = \"Name\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 1460,
        "wires": [
            [
                "4a7abf0e.e4e85"
            ]
        ]
    },
    {
        "id": "429b1393.6ffd6c",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "msg2dash",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nvar tjd = (instantT.mjday-33282)+instantT.mjfrac/86400\nvar time = 86400*tjd-631152000\n\nvar myDate = new Date(time *1000);\ndate= (myDate.toGMTString());\n\nmsg.payload = date\nmsg.topic = \"Date\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 1500,
        "wires": [
            [
                "eac5880a.b59fb8"
            ]
        ]
    },
    {
        "id": "386d7942.156c76",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "msg2dash",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nvar dist = instantT.dist\n\nmsg.payload = Math.round(dist)\n\nmsg.topic = \"Distance (km)\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 1540,
        "wires": [
            [
                "36c58d2d.bf0f02"
            ]
        ]
    },
    {
        "id": "b8207185.f42bd",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "msg2dash",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nvar az = instantT.az\n\nmsg.payload = Math.round(az)\nmsg.topic = \"Azimut (°)\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 1580,
        "wires": [
            [
                "95af4893.c89828"
            ]
        ]
    },
    {
        "id": "18f17f32.5f7e71",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "msg2dash",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nvar el = instantT.el\nmsg.payload = Math.round(el)\nmsg.topic = \"Elevation (°)\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 1620,
        "wires": [
            [
                "362b3f2b.4d2ac"
            ]
        ]
    },
    {
        "id": "992c5674.60e4f8",
        "type": "change",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Data4Skyview 2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"type\": \"GSV\",\t   \"inView\": [\t       msg.payload   \t   ]\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "body",
                "pt": "msg",
                "to": "payload[0].data[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2240,
        "y": 1680,
        "wires": [
            [
                "c33f4812.c84db8",
                "58db54d0.12d46c"
            ]
        ]
    },
    {
        "id": "c62dbe90.1b804",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "format",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nvar FRAC = Math.round(1000*(instantT.mjfrac)/86400)\nvar DAY = instantT.mjday\nvar ID = instantT.id\nvar EL = instantT.el\nvar AZ = instantT.az\nvar DIST = instantT.dist\n\nvar red = Math.abs(Math.round((Math.round(EL+AZ/10)-45)*255/269));\nvar hex = rgbToHex(red, 0, 255); // convert rbg to hex color\n\nmsg.payload = [ID,EL,AZ]\nmsg.topic = [FRAC, DAY]\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 1680,
        "wires": [
            [
                "69383c6d.0abe04"
            ]
        ]
    },
    {
        "id": "69383c6d.0abe04",
        "type": "change",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Data4Skyview 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t           \"data\": [\t               msg.payload[0],\t               msg.payload[1],\t               msg.payload[2],\t               msg.topic[0]\t           ]        \t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 1680,
        "wires": [
            [
                "992c5674.60e4f8"
            ]
        ]
    },
    {
        "id": "a4da2217.fb14a",
        "type": "link in",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "GS dash in",
        "links": [
            "62ecd0ac.9f798"
        ],
        "x": 375,
        "y": 1460,
        "wires": [
            [
                "18151515.6d2f0b"
            ]
        ]
    },
    {
        "id": "e364185d.295dd8",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Skyview Widget",
        "info": "",
        "x": 2420,
        "y": 1380,
        "wires": []
    },
    {
        "id": "7133e66d.aacb98",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "MACHINE DEPENDENCE",
        "info": "angular-persistence.json\n",
        "x": 1230,
        "y": 1400,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "18151515.6d2f0b",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "func": "msg.payload = {name: msg.payload}\nmsg.sort = {epochUnixTime:1}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1460,
        "wires": [
            [
                "b8bf83a3.79c91"
            ]
        ]
    },
    {
        "id": "b8bf83a3.79c91",
        "type": "mongodb in",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * from angular",
        "collection": "angular",
        "operation": "find",
        "x": 680,
        "y": 1460,
        "wires": [
            [
                "c43a64bf.f83098",
                "a647cc01.bfdfb",
                "edb348011caef461",
                "70f082f113f3cffb"
            ]
        ]
    },
    {
        "id": "ce2c1d1e.f767",
        "type": "link in",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "Time-in",
        "links": [
            "9c6e6a2a.83f0a8",
            "b715a8a4.6ee488",
            "eae873f.0883f9",
            "f225da6f.835808"
        ],
        "x": 275,
        "y": 1160,
        "wires": [
            [
                "43419e4a.69252"
            ]
        ]
    },
    {
        "id": "dd210a3f.75a238",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 250,
        "y": 1200,
        "wires": [
            [
                "43419e4a.69252"
            ]
        ]
    },
    {
        "id": "e9ccf3f5.9a0dd",
        "type": "ui_dropdown",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "",
        "label": "Ground Station",
        "tooltip": "Choose a ground station in the list",
        "place": "Select option",
        "group": "e7d5b9e4.972fe8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1200,
        "y": 1200,
        "wires": [
            [
                "62ecd0ac.9f798"
            ]
        ]
    },
    {
        "id": "62ecd0ac.9f798",
        "type": "link out",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "GS dash out",
        "links": [
            "a4da2217.fb14a"
        ],
        "x": 1335,
        "y": 1200,
        "wires": []
    },
    {
        "id": "ef9996c9.844698",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 1240,
        "wires": []
    },
    {
        "id": "880e080b.6e03c8",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "Loop to send station names",
        "func": "liste = []\nmsg.payload.forEach((gs) => {\n    liste.push(gs.name)\n})\nmsg.options = liste\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1200,
        "wires": [
            [
                "e9ccf3f5.9a0dd"
            ]
        ]
    },
    {
        "id": "43419e4a.69252",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "Query for Station name",
        "func": "msg.payload = {}\nmsg.projection = {name:1,_id:0}\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1200,
        "wires": [
            [
                "9d1f06ad.04cba8"
            ]
        ]
    },
    {
        "id": "9d1f06ad.04cba8",
        "type": "mongodb in",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show stations name",
        "collection": "ground_stations",
        "operation": "find",
        "x": 690,
        "y": 1200,
        "wires": [
            [
                "880e080b.6e03c8",
                "ef9996c9.844698"
            ]
        ]
    },
    {
        "id": "6b1d521f.f17bdc",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "f9ac2a4f.ec0f18",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "payload",
        "payloadType": "msg",
        "x": 310,
        "y": 520,
        "wires": [
            [
                "fa7c0ed1.a0037"
            ]
        ]
    },
    {
        "id": "fa7c0ed1.a0037",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "f9ac2a4f.ec0f18",
        "name": "query to delete visbility",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 520,
        "wires": [
            [
                "ea29f6f6.a79b68"
            ]
        ]
    },
    {
        "id": "ea29f6f6.a79b68",
        "type": "mongodb out",
        "z": "6ac37828.4c7288",
        "g": "f9ac2a4f.ec0f18",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete visi Mongo",
        "collection": "visibility_windows",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 790,
        "y": 520,
        "wires": []
    },
    {
        "id": "3124de43.b13802",
        "type": "link in",
        "z": "6ac37828.4c7288",
        "g": "f9ac2a4f.ec0f18",
        "name": "If Visibility Windows Updated",
        "links": [
            "1df6f4783011c9ba"
        ],
        "x": 300,
        "y": 480,
        "wires": [
            [
                "fa7c0ed1.a0037"
            ]
        ],
        "l": true
    },
    {
        "id": "12859d93.ff2bb2",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "f9ac2a4f.ec0f18",
        "name": "MACHINE DEPENDENCE",
        "info": "/home/antoine/jsatorb-rest-api/files/default_STORK/Data/STORK_MEM_LLA.TXT",
        "x": 770,
        "y": 460,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "b28fa916.8cecf8",
        "type": "file in",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "Sat-position",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Sat_MEM_LLA.TXT",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 930,
        "y": 280,
        "wires": [
            [
                "d2fa18fb.bb0268"
            ]
        ]
    },
    {
        "id": "30f8536.28de1ac",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 330,
        "y": 220,
        "wires": [
            [
                "56b0ea89.58abe4"
            ]
        ]
    },
    {
        "id": "ac33343b.ba4e78",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "LLA-file",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2320,
        "y": 340,
        "wires": []
    },
    {
        "id": "d2fa18fb.bb0268",
        "type": "join",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 280,
        "wires": [
            [
                "17ecad58.1256a3"
            ]
        ]
    },
    {
        "id": "6e83ca21.272f94",
        "type": "csv",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "mjday, mjfrac, lat, lon, alt",
        "skip": "15",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1390,
        "y": 280,
        "wires": [
            [
                "6c0fd70b.db8398"
            ]
        ]
    },
    {
        "id": "17ecad58.1256a3",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1270,
        "y": 280,
        "wires": [
            [
                "6e83ca21.272f94"
            ]
        ]
    },
    {
        "id": "fe40c70e.60f8c8",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "start with array[13]",
        "info": "",
        "x": 1590,
        "y": 240,
        "wires": []
    },
    {
        "id": "6c0fd70b.db8398",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1510,
        "y": 280,
        "wires": [
            [
                "f0d578c5.436e78"
            ]
        ]
    },
    {
        "id": "f0d578c5.436e78",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "msg_Sat-position-filling",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\nvar mjday;\nvar mjfrac;\nvar lat;\nvar lon;\nvar alt;\n\n   return{\n topic:\"satellite position filling into table\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 280,
        "wires": [
            [
                "4b6b90eb.77d19"
            ]
        ]
    },
    {
        "id": "1a4d810e.14739f",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "message to dashboard1",
        "func": "msg.payload = \"Writing satpos DB\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 180,
        "wires": [
            [
                "cb89ef4c.ba97b"
            ]
        ]
    },
    {
        "id": "55945d7e.c40f94",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "message to dashboard2",
        "func": "msg.payload = \"satpos DB completed\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 200,
        "wires": [
            [
                "cb89ef4c.ba97b"
            ]
        ]
    },
    {
        "id": "bffee3e0.8e31f",
        "type": "ui_button",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 21,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "SAT Position UPDATE",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FF0000",
        "className": "",
        "icon": "fa-refresh",
        "payload": "CMD TIME PLAY",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 180,
        "wires": [
            [
                "56b0ea89.58abe4"
            ]
        ]
    },
    {
        "id": "44ae3f5e.453b7",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "group": "3dabe8df.a10df8",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "Satpos on writing",
        "label": "User Notification",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-left",
        "x": 3010,
        "y": 180,
        "wires": []
    },
    {
        "id": "b4a46ba6.0c8db8",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "1a4d810e.14739f"
            ]
        ]
    },
    {
        "id": "d96ea2e8.2a85a",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2190,
        "y": 200,
        "wires": [
            [
                "55945d7e.c40f94"
            ]
        ]
    },
    {
        "id": "cb89ef4c.ba97b",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "Color Mapping",
        "func": "switch (msg.payload) {\n\ncase \"Writing satpos DB\" : \n    msg.color = \"red\";\n    break;\n    \ncase \"satpos DB completed\" : \n    msg.color = \"lime\";\n    break;\n    \ndefault : \n    msg.color = \"red\";\n    break;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2780,
        "y": 180,
        "wires": [
            [
                "44ae3f5e.453b7"
            ]
        ]
    },
    {
        "id": "56b0ea89.58abe4",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "query to delete satpos",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 180,
        "wires": [
            [
                "68bafbeb.9ea644",
                "1a4d810e.14739f"
            ]
        ]
    },
    {
        "id": "68bafbeb.9ea644",
        "type": "mongodb out",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete satpos Mongo",
        "collection": "satpos",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 780,
        "y": 220,
        "wires": []
    },
    {
        "id": "4b6b90eb.77d19",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "query to fill sat pos database",
        "func": "var tab = []\nvar gs = {}\n\n //From the GS\ngs.mjday = parseInt(msg.payload.mjday)\ngs.mjfrac = parseFloat(msg.payload.mjfrac)\ngs.lat = parseFloat(msg.payload.lat)\ngs.lon = parseFloat(msg.payload.lon)\ngs.alt = parseFloat(msg.payload.alt)\nvar tjd = (gs.mjday-33282)+gs.mjfrac/86400\ngs.epochUnixTime = 86400*tjd-631152000\n\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 280,
        "wires": [
            [
                "3ce6983f.32dee8"
            ]
        ]
    },
    {
        "id": "3ce6983f.32dee8",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2130,
        "y": 280,
        "wires": [
            [
                "f2b0db0a.891f48",
                "ac33343b.ba4e78",
                "55945d7e.c40f94"
            ]
        ]
    },
    {
        "id": "f2b0db0a.891f48",
        "type": "mongodb out",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert satpos mongo",
        "collection": "satpos",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2360,
        "y": 280,
        "wires": []
    },
    {
        "id": "733f7d7b.5f7334",
        "type": "complete",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "Trigger when satpos deleted",
        "scope": [
            "56b0ea89.58abe4"
        ],
        "uncaught": false,
        "x": 300,
        "y": 280,
        "wires": [
            [
                "d652d2af.e4153"
            ]
        ]
    },
    {
        "id": "d652d2af.e4153",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "query to fill satpos",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 280,
        "wires": [
            [
                "b28fa916.8cecf8"
            ]
        ]
    },
    {
        "id": "95d28814.324448",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Get LLA.TXT data (mjday, mjfrac, lat, lon, alt)",
        "info": "",
        "x": 330,
        "y": 640,
        "wires": []
    },
    {
        "id": "ccdacc27.0b8d5",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "start with array[13]",
        "info": "",
        "x": 2770,
        "y": 660,
        "wires": []
    },
    {
        "id": "27642efd.b128c2",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Get VISI.TXT data (id, name, mjday, mjfrac, status)",
        "info": "",
        "x": 2370,
        "y": 760,
        "wires": []
    },
    {
        "id": "2597a39d.2cd17c",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Fill the visi table",
        "info": "",
        "x": 3000,
        "y": 740,
        "wires": []
    },
    {
        "id": "41078e88.a6fd9",
        "type": "change",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/jsatorb-rest-api/files/default_Sat/Data/Sat_MEM_VISIBILITY_\" & msg.payload & \".TXT\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2110,
        "y": 700,
        "wires": [
            [
                "5011c869.b39c88"
            ]
        ]
    },
    {
        "id": "5011c869.b39c88",
        "type": "file in",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Visibility file",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2290,
        "y": 700,
        "wires": [
            [
                "74efb784.8f5f08",
                "7d635cb4aa8261b2"
            ]
        ]
    },
    {
        "id": "66f1c442.2f1dbc",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "select name of the station",
        "func": "//msg.topic =msg.payload;\nname = msg.payload[0].name\nnames = name.split('\"')[0]\nmsg.payload = names\nmsg.topic = [msg.var-1, name]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 700,
        "wires": [
            [
                "41078e88.a6fd9"
            ]
        ]
    },
    {
        "id": "dbe1ad67.c3a45",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2750,
        "y": 700,
        "wires": [
            [
                "d84b60ca.de634"
            ]
        ]
    },
    {
        "id": "d84b60ca.de634",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "msg_Visibility-windows-filling",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\nvar id;\nvar mjday;\nvar mjfrac;\nvar status;\n\n   return{\n topic:\"visbility window filling into table\",\n payload:[\n        id=msg.topic[0]+1, name=msg.topic[1], msg.payload\n    ],\n body: msg.topic[1]\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2940,
        "y": 700,
        "wires": [
            [
                "c8d1a797.2e0608"
            ]
        ]
    },
    {
        "id": "c8d1a797.2e0608",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Param Variable",
        "func": "\n// Create a Params variable\n// with a time and temp component\n//\nmsg.params = {$id:msg.payload[0], $name:msg.payload[1], $mjday:msg.payload[2].mjday, $mjfrac:msg.payload[2].mjfrac, $status:msg.payload[2].status}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3160,
        "y": 700,
        "wires": [
            [
                "a54a8ad9.b9fcd8",
                "93b14ae0.e32aa8"
            ]
        ]
    },
    {
        "id": "df778f9f.fb09e",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Visi Timestamp and Satpos Timestamp comparison",
        "info": "",
        "x": 870,
        "y": 760,
        "wires": []
    },
    {
        "id": "1692c203.53310e",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "EXIT LOOP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3590,
        "y": 660,
        "wires": []
    },
    {
        "id": "a54a8ad9.b9fcd8",
        "type": "trigger",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3360,
        "y": 700,
        "wires": [
            [
                "1692c203.53310e",
                "48bcbb3f.1b82b4"
            ]
        ]
    },
    {
        "id": "72c44582.c5e4ec",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "MACHINE DEPENDENCE",
        "info": "/home/antoine/jsatorb-rest-api/files/default_STORK/Data/STORK_MEM_VISIBILITY_.TXT",
        "x": 2310,
        "y": 660,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "48bcbb3f.1b82b4",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "message to dashboard8",
        "func": "msg.payload = \"Visi window written in DB\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3630,
        "y": 700,
        "wires": [
            [
                "918bdb58.54e5a8"
            ]
        ]
    },
    {
        "id": "918bdb58.54e5a8",
        "type": "link out",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "visi OUT",
        "links": [
            "dd962994.25d498",
            "fb2c27e9.282708",
            "becd8ee3.9efcd"
        ],
        "x": 3795,
        "y": 700,
        "wires": []
    },
    {
        "id": "7622255e.b430ec",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "query to show station names",
        "func": "msg.payload = {}\nmsg.projection = {name:1,_id:0}\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 700,
        "wires": [
            [
                "e4972806.98b458"
            ]
        ]
    },
    {
        "id": "e4972806.98b458",
        "type": "mongodb in",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show stations name",
        "collection": "ground_stations",
        "operation": "find",
        "x": 1080,
        "y": 700,
        "wires": [
            [
                "39c9f32f.91a26c"
            ]
        ]
    },
    {
        "id": "527ae382.4cd48c",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1450,
        "y": 700,
        "wires": [
            [
                "da43a5f9.d381a8"
            ]
        ]
    },
    {
        "id": "74efb784.8f5f08",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2570,
        "y": 640,
        "wires": []
    },
    {
        "id": "da43a5f9.d381a8",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "message format",
        "func": "msg.var = msg.payload.var\ndelete msg.payload.var\nmsg.payload = [msg.payload]\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 700,
        "wires": [
            [
                "66f1c442.2f1dbc"
            ]
        ]
    },
    {
        "id": "39c9f32f.91a26c",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "insert counter",
        "func": "var count = 1\nmsg.payload.forEach(gs => {\n    gs.var = count ++\n})\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 700,
        "wires": [
            [
                "527ae382.4cd48c"
            ]
        ]
    },
    {
        "id": "93b14ae0.e32aa8",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Query to fill visibility database",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\ngs.id = msg.payload[0]\ngs.name = msg.payload[1]\ngs.mjday = parseInt(msg.payload[2].mjday)\ngs.mjfrac = parseFloat(msg.payload[2].mjfrac)\ngs.status = msg.payload[2].status\nvar tjd = (gs.mjday-33282)+gs.mjfrac/86400\ngs.epochUnixTime = 86400*tjd-631152000\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3420,
        "y": 760,
        "wires": [
            [
                "4c4d2bcd.1f4104"
            ]
        ]
    },
    {
        "id": "4c4d2bcd.1f4104",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3610,
        "y": 760,
        "wires": [
            [
                "518f311d.94f08"
            ]
        ]
    },
    {
        "id": "518f311d.94f08",
        "type": "mongodb out",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-visi mongo",
        "collection": "visibility_windows",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 3770,
        "y": 760,
        "wires": []
    },
    {
        "id": "c1aa03b9.0e853",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "query to fill visibility ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 700,
        "wires": [
            [
                "7622255e.b430ec"
            ]
        ]
    },
    {
        "id": "1487730a.2f8b9d",
        "type": "complete",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Trigger when visibility deleted",
        "scope": [
            "fa7c0ed1.a0037"
        ],
        "uncaught": false,
        "x": 300,
        "y": 700,
        "wires": [
            [
                "c1aa03b9.0e853"
            ]
        ]
    },
    {
        "id": "4a6b4791859a7ec7",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "!!!! Pas de EXIT LOOP2 probleme de mongo db",
        "info": "",
        "x": 1680,
        "y": 920,
        "wires": []
    },
    {
        "id": "ddff7293e03f0b82",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "CHECK FLOW",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 920,
        "wires": []
    },
    {
        "id": "7d635cb4aa8261b2",
        "type": "split",
        "z": "6ac37828.4c7288",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2490,
        "y": 700,
        "wires": [
            [
                "efa1578a636dec6f"
            ]
        ]
    },
    {
        "id": "efa1578a636dec6f",
        "type": "csv",
        "z": "6ac37828.4c7288",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "mjday, mjfrac, status",
        "skip": "15",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 2630,
        "y": 700,
        "wires": [
            [
                "dbe1ad67.c3a45"
            ]
        ]
    },
    {
        "id": "4aae53bd115977ea",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "name": "CHECK FLOW",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 900,
        "wires": []
    },
    {
        "id": "48c9278751e6dd80",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Disconnected for test",
        "info": "Disconnected to try with simple file in and out",
        "x": 1340,
        "y": 1680,
        "wires": []
    },
    {
        "id": "edb348011caef461",
        "type": "file",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "filename": "angle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 930,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "7666c04f07bbb05f",
        "type": "file in",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "filename": "angle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1170,
        "y": 1500,
        "wires": [
            [
                "b83d4c26dabed0ee"
            ]
        ]
    },
    {
        "id": "b83d4c26dabed0ee",
        "type": "json",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1310,
        "y": 1500,
        "wires": [
            [
                "f1d4084e6377b063"
            ]
        ]
    },
    {
        "id": "7bdca02863b868fd",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "storage check1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 1660,
        "wires": []
    },
    {
        "id": "9e71a5834972f14f",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "storage check2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1540,
        "y": 1380,
        "wires": []
    },
    {
        "id": "13ab995fda488768",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "storage check3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1740,
        "y": 1380,
        "wires": []
    },
    {
        "id": "70f082f113f3cffb",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "storage check4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1380,
        "wires": []
    },
    {
        "id": "f1d4084e6377b063",
        "type": "change",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "angles",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 1460,
        "wires": [
            [
                "da44af67.6b24f",
                "9e71a5834972f14f"
            ]
        ]
    },
    {
        "id": "6d1ccf9412d0d665",
        "type": "change",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sliderpos",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1560,
        "wires": [
            [
                "da44af67.6b24f",
                "7bdca02863b868fd"
            ]
        ]
    },
    {
        "id": "a9e817f573788987",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "2/05/23",
        "info": "We changed the persist for normal files, to prevent any related bug. Then appeared the problem that: After the join we hqd until now an array with the slider current position respresented by an integer and an array with for each time instant of the window, all angle of interest. Now the calculation assumed that the slider position is the second element in the array but the position isnt fixed it depends of hom arrives first the slider or the array from the storage. As it is reversed now, instead of changing in every following scripts the index we prefer to creat an object composed of key:and values so we never have to change again. ",
        "x": 1270,
        "y": 1720,
        "wires": []
    },
    {
        "id": "170b38f03bd0fc97",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "out of 1",
        "info": "needed to change the max to length -1 to use as an array index",
        "x": 910,
        "y": 1500,
        "wires": []
    },
    {
        "id": "7233d22172de1941",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "HERE WAS A PERSIST ANGLE",
        "info": "",
        "x": 970,
        "y": 1660,
        "wires": []
    },
    {
        "id": "dc4fd25033b5651f",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "HERE WAS A PERSIST ANGLE",
        "info": "",
        "x": 1210,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d96813c8d3d9d7b7",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "b1 timesettermaneuver IN",
        "links": [
            "9958904edb2cfd1b"
        ],
        "x": 685,
        "y": 1080,
        "wires": [
            [
                "85acb55e62dcd0aa"
            ]
        ]
    },
    {
        "id": "85acb55e62dcd0aa",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1080,
        "wires": [
            [
                "d4c40cf6c7f7ebc8",
                "98bfdb80d7a0fd62"
            ]
        ]
    },
    {
        "id": "fa3505e97673a6cd",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1040,
        "wires": [
            [
                "d4c40cf6c7f7ebc8",
                "f931ad51642cd8ee"
            ]
        ]
    },
    {
        "id": "d4c40cf6c7f7ebc8",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_4\", \"path_5\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1030,
        "y": 1080,
        "wires": [
            [
                "a0a3a6241e714836"
            ],
            []
        ]
    },
    {
        "id": "a0a3a6241e714836",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "duration calc (delay from tle to man)",
        "func": "//var tletime = msg.paths.path_4[0].peritimeb1[0]\nvar tletime = msg.paths.path_4; // 03/05/23 We disco the mongo\n// We use therefore the path4 directly as it comes from the date storage\n// we set teletime to the element 0 of the field peritimeb1 of path_4\nvar mantime = msg.paths.path_5\n// the man time\n//is  in the path5 because of the Setpath_5\nvar timeCorrectionMM =0;\nvar duration = (mantime)/1000 - (tletime/1000);\ntletime = tletime - timeCorrectionMM;\nmsg.payload = [duration, tletime, mantime]\nmsg.body = [tletime, mantime]\n// it is thedurqtion before mqnoeuver at the tle time\n//msg.payload = [duration, tletime-timeCorrectionMM, mantime]\n//msg.body = [tletime-timeCorrectionMM, mantime]\nreturn msg;\n\n//-38000 because of MM time error when propagating",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1080,
        "wires": [
            [
                "5ce8b43dcfe48401",
                "62b3a7b77702ad42",
                "1ed08a51f29784aa"
            ]
        ]
    },
    {
        "id": "1ccb2dbfe3a3a365",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Maneuv.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 1000,
        "wires": [
            [
                "e7070b966067aebf"
            ]
        ]
    },
    {
        "id": "e7070b966067aebf",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Maneuv storage injection",
        "func": "msg.payload = [\"Relative DATE, Dx, Dy, Dz, contdura\",msg.paths.path_7[0], msg.paths.path_6[0].dx, msg.paths.path_6[0].dy, msg.paths.path_6[0].dz, msg.paths.path_6[0].dura]; 0\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 1000,
        "wires": [
            [
                "689500019e5fc158",
                "2580f1f8516a91eb"
            ]
        ]
    },
    {
        "id": "93cecfd0bf213d56",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_6",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_6",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 960,
        "wires": [
            [
                "9fa7b5ec6419d3fe",
                "6982ab15f50d5e20"
            ]
        ]
    },
    {
        "id": "5ce8b43dcfe48401",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 1000,
        "wires": [
            [
                "9fa7b5ec6419d3fe"
            ]
        ]
    },
    {
        "id": "9fa7b5ec6419d3fe",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_6\", \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1640,
        "y": 1000,
        "wires": [
            [
                "1ccb2dbfe3a3a365"
            ],
            []
        ]
    },
    {
        "id": "689500019e5fc158",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2290,
        "y": 1000,
        "wires": [
            [
                "e8ef91b33d7df1e8"
            ]
        ]
    },
    {
        "id": "e8ef91b33d7df1e8",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2470,
        "y": 1000,
        "wires": [
            [
                "126a998aa29751c7"
            ]
        ]
    },
    {
        "id": "126a998aa29751c7",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Maneuv-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2660,
        "y": 1000,
        "wires": [
            [
                "dca7f8d059c1c0d6"
            ]
        ]
    },
    {
        "id": "5cb2e7b3339a7e8c",
        "type": "ui_form",
        "z": "a9c7c6499fb06192",
        "d": true,
        "name": "",
        "label": "BLUE1-Vehicle-Continuous",
        "group": "5a7810372552815e",
        "order": 8,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Dry mass (kg)",
                "value": "drymass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Ergol mass (kg)",
                "value": "ergolmass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Thrust (N)",
                "value": "thrust",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP (s)",
                "value": "isp",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Surf Ref (m²)",
                "value": "surfref",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "drymass": "",
            "ergolmass": "",
            "thrust": "",
            "isp": "",
            "surfref": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 520,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "78ed0576c46a296c",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 1260,
        "wires": [
            [
                "6982ab15f50d5e20"
            ]
        ]
    },
    {
        "id": "ec164a7ad1af2abe",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 1300,
        "wires": [
            [
                "6982ab15f50d5e20"
            ]
        ]
    },
    {
        "id": "6982ab15f50d5e20",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[\"path_6\",\"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1600,
        "y": 1260,
        "wires": [
            [
                "37eb1a8222d471d8",
                "a4a9a11440819b91"
            ],
            []
        ]
    },
    {
        "id": "06b6c4fefcad996e",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle2",
        "func": "msg.payload = msg.payload[0].tle2;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1280,
        "wires": [
            [
                "36fb16574dfa562b"
            ]
        ]
    },
    {
        "id": "649976e64d5c201f",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query for b1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1280,
        "wires": [
            [
                "5fe639eceb332936"
            ]
        ]
    },
    {
        "id": "5fe639eceb332936",
        "type": "mongodb in",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 940,
        "y": 1280,
        "wires": [
            [
                "06b6c4fefcad996e",
                "dec7a68a804e0f28"
            ]
        ]
    },
    {
        "id": "36fb16574dfa562b",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1250,
        "y": 1280,
        "wires": [
            [
                "e615303e89c9bc3b"
            ]
        ]
    },
    {
        "id": "62b3a7b77702ad42",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 1220,
        "wires": [
            [
                "6982ab15f50d5e20"
            ]
        ]
    },
    {
        "id": "e6bd2d01e6a1c45b",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2150,
        "y": 1260,
        "wires": [
            [
                "df1a5085d9c1fd68"
            ]
        ]
    },
    {
        "id": "df1a5085d9c1fd68",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2330,
        "y": 1260,
        "wires": [
            [
                "a2d37e0b2e341ec0"
            ]
        ]
    },
    {
        "id": "a2d37e0b2e341ec0",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2510,
        "y": 1260,
        "wires": [
            [
                "76268b76f4356014",
                "16af0905aa1e3301"
            ]
        ]
    },
    {
        "id": "98a2817c58cf23b3",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 1260,
        "wires": [
            [
                "e6bd2d01e6a1c45b"
            ]
        ]
    },
    {
        "id": "76268b76f4356014",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*parseFloat(msg.paths.path_6[0].dura);\n\nvar myDate = new Date(datecurrent);\ndate= (myDate.toGMTString());\n\n\nmsg.payload = date\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 1260,
        "wires": [
            [
                "85161039bfca3377",
                "7f549d38acadc2bb"
            ]
        ]
    },
    {
        "id": "12b83b90775bc4ae",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -jar MCS_ManeuverManager_v18.jar",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 3530,
        "y": 1080,
        "wires": [
            [
                "9485be051675a761",
                "a29bd13f1f18078d",
                "ff33218d1b7bd97d"
            ],
            [
                "0212a7d5f68269dd",
                "55efe277fd5d2a31"
            ],
            []
        ]
    },
    {
        "id": "45bef73646f7fd55",
        "type": "inject",
        "z": "a9c7c6499fb06192",
        "name": "button: execManeuverManager",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 3350,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "dca7f8d059c1c0d6",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3050,
        "y": 1080,
        "wires": [
            [
                "11a9f8c0a2748862"
            ]
        ]
    },
    {
        "id": "85161039bfca3377",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3050,
        "y": 1120,
        "wires": [
            [
                "11a9f8c0a2748862"
            ]
        ]
    },
    {
        "id": "11a9f8c0a2748862",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3260,
        "y": 1100,
        "wires": [
            [
                "12b83b90775bc4ae"
            ],
            []
        ]
    },
    {
        "id": "197bbc7efce6300a",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "RAZ Result injection",
        "func": "msg.payload = null\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 760,
        "wires": [
            [
                "30ed0ce92421468d"
            ]
        ]
    },
    {
        "id": "30ed0ce92421468d",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1690,
        "y": 760,
        "wires": [
            [
                "5a16ab898b485a30"
            ]
        ]
    },
    {
        "id": "5a16ab898b485a30",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Result-RAZ",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1890,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "f7fae6fbb972e49a",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Result.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 780,
        "wires": [
            [
                "197bbc7efce6300a"
            ]
        ]
    },
    {
        "id": "9485be051675a761",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to read Result.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3870,
        "y": 980,
        "wires": [
            [
                "9c67ea7ef084c63f"
            ]
        ]
    },
    {
        "id": "9c67ea7ef084c63f",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4090,
        "y": 980,
        "wires": [
            [
                "2f32dbf2d1608b6c",
                "541422c1896cb1ab"
            ]
        ]
    },
    {
        "id": "2f32dbf2d1608b6c",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4250,
        "y": 980,
        "wires": [
            [
                "a29281032b7881e1"
            ]
        ]
    },
    {
        "id": "a29281032b7881e1",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3830,
        "y": 1020,
        "wires": [
            [
                "161b2bb09e7e82f1",
                "541422c1896cb1ab"
            ]
        ]
    },
    {
        "id": "161b2bb09e7e82f1",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\n\nvar n = msg.payload.length\n\n //From the GS\ngs.ergolmass = parseFloat(msg.payload[n-12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n \ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4020,
        "y": 1020,
        "wires": [
            [
                "cfee6256eea5629f",
                "541422c1896cb1ab"
            ]
        ]
    },
    {
        "id": "cfee6256eea5629f",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol=msg.payload[0].ergolmass;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4130,
        "y": 1080,
        "wires": [
            [
                "ca7b56f5ed334d36"
            ]
        ]
    },
    {
        "id": "52e1e45e0c77a7cb",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "update all for B1 OUT",
        "mode": "link",
        "links": [
            "5c3232735d2e2038"
        ],
        "x": 4725,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7f549d38acadc2bb",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time start",
        "func": "\n//var myDate = new Date(msg.payload);\n\n\n//var date = myDate.toLocaleString() ;\nvar date = msg.payload ;\nvar month = [\"init\",\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nvar mon ;\n\nfor (let i = 0; i < month.length; i++) {\n  if (date.substr(8,3) == month[i]) {\n    mon = i.toString()  \n  }\n} \n\nmsg.payload = date.substr(12,4)+\"-\"+\"0\"+mon+\"-\"+date.substr(5,2)+\"T\"+date.substr(17,8)+\".000Z\"\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2920,
        "y": 1260,
        "wires": [
            [
                "3eb03799c7452fd2",
                "27f791a74448a512"
            ]
        ]
    },
    {
        "id": "3eb03799c7452fd2",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3370,
        "y": 1280,
        "wires": [
            [
                "8d0f79ada66939fa"
            ]
        ]
    },
    {
        "id": "bf3c70988706483b",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3370,
        "y": 1320,
        "wires": [
            [
                "8d0f79ada66939fa"
            ]
        ]
    },
    {
        "id": "8d0f79ada66939fa",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3560,
        "y": 1300,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "16af0905aa1e3301",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of post-maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*parseFloat(msg.paths.path_6[0].dura);\n\n\nmsg.payload = datecurrent\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2760,
        "y": 1400,
        "wires": [
            [
                "ae0ea039375e5e98",
                "de8d8073934276aa"
            ]
        ]
    },
    {
        "id": "ae0ea039375e5e98",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of TLE",
        "func": "var time = msg.payload ;\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\n\n\n   return{\n topic:\"tle time\",\n payload: time,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2950,
        "y": 1400,
        "wires": [
            [
                "177153850fd7c528"
            ]
        ]
    },
    {
        "id": "177153850fd7c528",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "injection",
        "func": "var payload = msg.body;\nvar newMsg = {};\nnewMsg.payload = payload;\nnode.send(newMsg);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2700,
        "y": 1440,
        "wires": [
            [
                "898040caa909b090"
            ]
        ]
    },
    {
        "id": "898040caa909b090",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to fill b1 tle time database",
        "func": "var tab = []\nvar tm = {}\n\n //From the GS\ntm.peritimeb1 = msg.payload\ntab.push(tm)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2910,
        "y": 1440,
        "wires": [
            [
                "3bf9e37eb8dd795c"
            ]
        ]
    },
    {
        "id": "3bf9e37eb8dd795c",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2690,
        "y": 1480,
        "wires": [
            [
                "abdabf163cc832c6"
            ]
        ]
    },
    {
        "id": "abdabf163cc832c6",
        "type": "mongodb out",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert b1 time tle mongo",
        "collection": "peritimeb1",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2870,
        "y": 1480,
        "wires": []
    },
    {
        "id": "5c77adf44e3ac38b",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query for b1 time tle",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3980,
        "y": 1280,
        "wires": [
            [
                "5b240feb73b10157"
            ]
        ]
    },
    {
        "id": "5b240feb73b10157",
        "type": "mongodb in",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1 time tle",
        "collection": "peritimeb1",
        "operation": "find",
        "x": 4220,
        "y": 1280,
        "wires": [
            [
                "4a72bcc247b70d0b"
            ]
        ]
    },
    {
        "id": "4a72bcc247b70d0b",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "get tle time",
        "func": "msg = {curr : {max : 0}, ui_control : {max : 0}, body : {min : msg.payload[0].peritimeb1[0]/1000}};\n\n\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4420,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "65421165bbc07ccd",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Tle b1-postMan-OUT",
        "mode": "link",
        "links": [
            "17bd6cd48b2a4ff4"
        ],
        "x": 4795,
        "y": 1340,
        "wires": []
    },
    {
        "id": "c467dc3c60f156cc",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4670,
        "y": 1340,
        "wires": [
            [
                "65421165bbc07ccd",
                "3f8484a431ecca73"
            ]
        ]
    },
    {
        "id": "9ee7abff33462ffd",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "RAZ Result injection",
        "func": "msg.payload = null\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 1840,
        "wires": [
            [
                "7b562a0690ec6d65"
            ]
        ]
    },
    {
        "id": "7b562a0690ec6d65",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1910,
        "y": 1840,
        "wires": [
            [
                "7a5185f35a31fbbf"
            ]
        ]
    },
    {
        "id": "7a5185f35a31fbbf",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Result-RAZ",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2110,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "1256ccae660a5b29",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Result.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 1840,
        "wires": [
            [
                "9ee7abff33462ffd"
            ]
        ]
    },
    {
        "id": "a6da9320576a5bfd",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 2000,
        "wires": [
            [
                "7282d2b6cff13096"
            ]
        ]
    },
    {
        "id": "5ce67eaf47144b18",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Maneuv.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 1980,
        "wires": [
            [
                "94a1fd4bb3a061c2"
            ]
        ]
    },
    {
        "id": "94a1fd4bb3a061c2",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Maneuv storage injection",
        "func": "msg.payload = [\"Relative DATE, Dx, Dy, Dz, contdura\",msg.paths.path_7[0], msg.paths.path_6[0].dx, msg.paths.path_6[0].dy, msg.paths.path_6[0].dz, msg.paths.path_6[0].dura]; 0\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 1980,
        "wires": [
            [
                "dd689192e1c9a015"
            ]
        ]
    },
    {
        "id": "2cd1855d75a99bca",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_6\", \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1520,
        "y": 1980,
        "wires": [
            [
                "5ce67eaf47144b18"
            ],
            []
        ]
    },
    {
        "id": "dd689192e1c9a015",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2170,
        "y": 1980,
        "wires": [
            [
                "c19c1bc0480e7eb6"
            ]
        ]
    },
    {
        "id": "c19c1bc0480e7eb6",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2350,
        "y": 1980,
        "wires": [
            [
                "0d6642db581ef6d0"
            ]
        ]
    },
    {
        "id": "0d6642db581ef6d0",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Maneuv-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2660,
        "y": 2060,
        "wires": [
            [
                "c0483bdc37fa56cb"
            ]
        ]
    },
    {
        "id": "1cecb8c3ecc4bb5e",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 2040,
        "wires": [
            [
                "7282d2b6cff13096"
            ]
        ]
    },
    {
        "id": "7282d2b6cff13096",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_4\", \"path_5\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 940,
        "y": 2020,
        "wires": [
            [
                "1d023cab67206047"
            ],
            []
        ]
    },
    {
        "id": "8ad2f303b6f34cbe",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1980,
        "wires": [
            [
                "2cd1855d75a99bca"
            ]
        ]
    },
    {
        "id": "310dca26d9268382",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_6",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_6",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1940,
        "wires": [
            [
                "2cd1855d75a99bca",
                "190291d67d264fe0"
            ]
        ]
    },
    {
        "id": "ad95d0988ebee021",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 2160,
        "wires": [
            [
                "190291d67d264fe0"
            ]
        ]
    },
    {
        "id": "51cafd472cfcc355",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 2200,
        "wires": [
            [
                "190291d67d264fe0"
            ]
        ]
    },
    {
        "id": "190291d67d264fe0",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[\"path_6\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1400,
        "y": 2180,
        "wires": [
            [
                "94b33df30b4d9d4f",
                "4e754c50c9409315"
            ],
            []
        ]
    },
    {
        "id": "41c17d0fcd2c7671",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle2",
        "func": "msg.payload = msg.payload[0].tle2;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 2180,
        "wires": [
            [
                "fd9c3320bbdcc395",
                "9be9a5c9965c22db"
            ]
        ]
    },
    {
        "id": "7c62a45953c44b38",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query for b2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2180,
        "wires": [
            [
                "09a8204b59e083c1"
            ]
        ]
    },
    {
        "id": "09a8204b59e083c1",
        "type": "mongodb in",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 600,
        "y": 2180,
        "wires": [
            [
                "41c17d0fcd2c7671",
                "a8b4e5acf8812643"
            ]
        ]
    },
    {
        "id": "fd9c3320bbdcc395",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 930,
        "y": 2180,
        "wires": [
            [
                "a14b72030e316132",
                "0ee0dcd7ec91cc9b"
            ]
        ]
    },
    {
        "id": "6df8c74a14e86d0d",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 2120,
        "wires": [
            [
                "190291d67d264fe0"
            ]
        ]
    },
    {
        "id": "e935116286311b60",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1950,
        "y": 2180,
        "wires": [
            [
                "e3d3e1bdcf623a0c",
                "081be9db545809f4"
            ]
        ]
    },
    {
        "id": "e3d3e1bdcf623a0c",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2110,
        "y": 2180,
        "wires": [
            [
                "d78e314d1ae5bf64"
            ]
        ]
    },
    {
        "id": "d78e314d1ae5bf64",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2310,
        "y": 2180,
        "wires": [
            [
                "def15ccdacfde104",
                "29e605471c565880"
            ]
        ]
    },
    {
        "id": "2a1b2b1844bde01d",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 2180,
        "wires": [
            [
                "e935116286311b60"
            ]
        ]
    },
    {
        "id": "def15ccdacfde104",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*parseFloat(msg.paths.path_6[0].dura);\n\nvar myDate = new Date(datecurrent);\ndate= (myDate.toGMTString());\n\n\nmsg.payload = date\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 2260,
        "wires": [
            [
                "5e436744a1032d5c",
                "c4163e14f3c4f33a"
            ]
        ]
    },
    {
        "id": "5e436744a1032d5c",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time start",
        "func": "\n//var myDate = new Date(msg.payload);\n\n\n//var date = myDate.toLocaleString() ;\nvar date = msg.payload ;\nvar month = [\"init\",\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nvar mon ;\n\nfor (let i = 0; i < month.length; i++) {\n  if (date.substr(8,3) == month[i]) {\n    mon = i.toString()  \n  }\n} \n\nmsg.payload = date.substr(12,4)+\"-\"+\"0\"+mon+\"-\"+date.substr(5,2)+\"T\"+date.substr(17,8)+\".000Z\"\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 2260,
        "wires": [
            [
                "8b8908f6f5d5fa4a",
                "803eca3c3a664ec9"
            ]
        ]
    },
    {
        "id": "8b8908f6f5d5fa4a",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3250,
        "y": 2320,
        "wires": [
            [
                "8436682caf9bf206"
            ]
        ]
    },
    {
        "id": "79d73813d5313faa",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3250,
        "y": 2360,
        "wires": [
            [
                "8436682caf9bf206"
            ]
        ]
    },
    {
        "id": "8436682caf9bf206",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3440,
        "y": 2360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c16fc4c7e2c67c76",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -jar MCS_ManeuverManager_v18.jar",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 3510,
        "y": 2160,
        "wires": [
            [
                "fcad37c83d3f834d",
                "dda3d6b0eba9adf3"
            ],
            [
                "6e5c769afef065d9"
            ],
            []
        ]
    },
    {
        "id": "c0483bdc37fa56cb",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 2140,
        "wires": [
            [
                "e2eb05d5dff5f0d1"
            ]
        ]
    },
    {
        "id": "c4163e14f3c4f33a",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 2180,
        "wires": [
            [
                "e2eb05d5dff5f0d1"
            ]
        ]
    },
    {
        "id": "e2eb05d5dff5f0d1",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3240,
        "y": 2160,
        "wires": [
            [
                "c16fc4c7e2c67c76"
            ],
            []
        ]
    },
    {
        "id": "6d1dbca08eba25ab",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "update all for B2",
        "mode": "link",
        "links": [
            "54ed3a6bc8def2f5"
        ],
        "x": 4725,
        "y": 2300,
        "wires": []
    },
    {
        "id": "4bfd62750d6233be",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "b2 time setter maneuver IN",
        "links": [
            "54824b02ab97ef68",
            "22511b64917ad983",
            "5380ca71e906d654",
            "ac921718fb59014c",
            "3d555299e27b6d1d"
        ],
        "x": 675,
        "y": 2040,
        "wires": [
            [
                "1cecb8c3ecc4bb5e"
            ]
        ]
    },
    {
        "id": "2fd70f8c41ef581a",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "update all for R1 OUT",
        "mode": "link",
        "links": [
            "495dc5a4cb1cef81"
        ],
        "x": 4615,
        "y": 3340,
        "wires": []
    },
    {
        "id": "8d63a1baaf39e899",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "TLE R1-post-manoeuvre-OUT",
        "mode": "link",
        "links": [
            "3d2439aa3fec2104"
        ],
        "x": 4845,
        "y": 3540,
        "wires": []
    },
    {
        "id": "8e1a91631c83419c",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "r1-tle-time-IN",
        "links": [
            "357b1c9d4fd47fb2"
        ],
        "x": 605,
        "y": 3520,
        "wires": [
            []
        ]
    },
    {
        "id": "555a6347b2333425",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "update all for R2 OUT",
        "mode": "link",
        "links": [
            "1cb0a1a51e9369a1"
        ],
        "x": 4345,
        "y": 4100,
        "wires": []
    },
    {
        "id": "9f474fcba3b0160f",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Tle r2-post-manoeuvre-OUT",
        "mode": "link",
        "links": [
            "34fc69acb40802e3"
        ],
        "x": 4815,
        "y": 4280,
        "wires": []
    },
    {
        "id": "30a3d53f7ff0de08",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "r2-tle-time-IN",
        "links": [
            "8ea64980c2a72e58"
        ],
        "x": 435,
        "y": 4340,
        "wires": [
            [
                "11a585d2a0906d4c",
                "8b04934943189034"
            ]
        ]
    },
    {
        "id": "11a585d2a0906d4c",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to delete r2 time tle",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 4340,
        "wires": [
            [
                "29d8124e17ce5f52"
            ]
        ]
    },
    {
        "id": "29d8124e17ce5f52",
        "type": "mongodb out",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r2 time tle Mongo",
        "collection": "peritimer2",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1290,
        "y": 4340,
        "wires": []
    },
    {
        "id": "8b04934943189034",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "injection",
        "func": "var payload = msg.body;\nvar newMsg = {};\nnewMsg.payload = payload;\nnode.send(newMsg);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 4400,
        "wires": [
            [
                "d065f8fda6e9f226"
            ]
        ]
    },
    {
        "id": "d065f8fda6e9f226",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to fill r2 tle time database",
        "func": "var tab = []\nvar tm = {}\n\n //From the GS\n \ntm.peritimer2 = msg.payload\ntab.push(tm)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 4400,
        "wires": [
            [
                "756dc679ed92f963"
            ]
        ]
    },
    {
        "id": "756dc679ed92f963",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1100,
        "y": 4400,
        "wires": [
            [
                "86cf93eb0679b6e9"
            ]
        ]
    },
    {
        "id": "86cf93eb0679b6e9",
        "type": "mongodb out",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert r2 time tle mongo",
        "collection": "peritimer2",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1280,
        "y": 4400,
        "wires": []
    },
    {
        "id": "bcb457bab790c38d",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "r2 time setter maneuver IN",
        "links": [
            "01f18e70add9cff6"
        ],
        "x": 435,
        "y": 4020,
        "wires": [
            [
                "fd386e26df07c122"
            ]
        ]
    },
    {
        "id": "ae090243e3b224c9",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "MM RED1",
        "info": "",
        "x": 1180,
        "y": 2820,
        "wires": []
    },
    {
        "id": "5f9d8e33aa0cc23e",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "MMB1",
        "info": "",
        "x": 1290,
        "y": 600,
        "wires": []
    },
    {
        "id": "f0e112ac8ad13b69",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "MMB2",
        "info": "",
        "x": 1050,
        "y": 1620,
        "wires": []
    },
    {
        "id": "37ea6db50372d10a",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "ICI TLE line2",
        "info": "",
        "x": 4530,
        "y": 1460,
        "wires": []
    },
    {
        "id": "2ea1d992cf4eda08",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Here was the tle stored",
        "info": "",
        "x": 4500,
        "y": 1380,
        "wires": []
    },
    {
        "id": "82e2ef7ac9a7ebe5",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "03/05/23",
        "info": "We use for now the persist",
        "x": 600,
        "y": 980,
        "wires": []
    },
    {
        "id": "b6554248648c776d",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "03/05/23",
        "info": "THIS should be connected to the function Maneuver param",
        "x": 600,
        "y": 1000,
        "wires": []
    },
    {
        "id": "5a598d75a51bbd89",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Unix Time stamp of the manoeuver",
        "info": "",
        "x": 940,
        "y": 1140,
        "wires": []
    },
    {
        "id": "3761085fcf07ae9e",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Unix timestamp of TLE",
        "info": "",
        "x": 780,
        "y": 1000,
        "wires": []
    },
    {
        "id": "ae84b0ed4a322743",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "TEST030523",
        "info": "We try with a persistant",
        "x": 4490,
        "y": 1240,
        "wires": []
    },
    {
        "id": "de8d8073934276aa",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "blue1-date-storage",
        "filename": "blue1-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3030,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "a12da874ecee10b9",
        "type": "inject",
        "z": "a9c7c6499fb06192",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3960,
        "y": 380,
        "wires": [
            [
                "363f6de45d0c19fc"
            ]
        ]
    },
    {
        "id": "3cc50d54edda4b35",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "red2-tle-storage",
        "filename": "red2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4560,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "2a8874bf4d3037b3",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "red1-tle-storage",
        "filename": "red1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4560,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "31379a8462e2bedc",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "",
        "filename": "blue2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4380,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "1be4896b4d226ef5",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "",
        "filename": "blue1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4380,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "958395228819a348",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "thrust angle and Manoeuver duration",
        "info": "",
        "x": 1240,
        "y": 420,
        "wires": []
    },
    {
        "id": "571e3f94c7f0d258",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Vehicule, Old TLE, and Manoeuver delay",
        "info": "",
        "x": 1700,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f8c655b18db697e6",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Thrust param + Manoeuver Delay",
        "info": "",
        "x": 1590,
        "y": 880,
        "wires": []
    },
    {
        "id": "062734104196c0f9",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Here we store the new start date because the positions of the satellite before the manoeuver  are now false",
        "info": "",
        "x": 2660,
        "y": 1540,
        "wires": []
    },
    {
        "id": "45ebb2a368cee875",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "",
        "filename": "blue1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4860,
        "y": 940,
        "wires": [
            [
                "febd0e86b2abbc88"
            ]
        ]
    },
    {
        "id": "9b1b47e8a3e5d733",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "fabrication de la string",
        "info": "",
        "x": 4000,
        "y": 1200,
        "wires": []
    },
    {
        "id": "27f791a74448a512",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3060,
        "y": 1320,
        "wires": [
            [
                "7f940bf7e7511da8"
            ]
        ]
    },
    {
        "id": "7f940bf7e7511da8",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3230,
        "y": 1320,
        "wires": [
            [
                "bf3c70988706483b"
            ]
        ]
    },
    {
        "id": "6b03f32425a00b68",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "090523",
        "info": "Changed to discard also null values ",
        "x": 1210,
        "y": 1200,
        "wires": []
    },
    {
        "id": "bc7989cd3aa6dc02",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "scope": [
            "12b83b90775bc4ae"
        ],
        "uncaught": false,
        "x": 3530,
        "y": 1140,
        "wires": [
            [
                "0212a7d5f68269dd"
            ]
        ]
    },
    {
        "id": "ca7b56f5ed334d36",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4360,
        "y": 1080,
        "wires": [
            [
                "45ebb2a368cee875",
                "979282dffe4fca2d",
                "52e1e45e0c77a7cb",
                "044efb5580bec36f",
                "5c77adf44e3ac38b"
            ],
            [
                "538641152ad22133"
            ]
        ]
    },
    {
        "id": "bd4ce9117d35c595",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "090523",
        "info": "Modif to discard message if null NaN ..",
        "x": 4530,
        "y": 980,
        "wires": []
    },
    {
        "id": "8689ab60c352e350",
        "type": "ui_table",
        "z": "a9c7c6499fb06192",
        "group": "cbb369e33298cfeb",
        "name": "TLE display",
        "order": 8,
        "width": 0,
        "height": 0,
        "columns": [
            {
                "field": "version",
                "title": "Version",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "incli",
                "title": "Inclination °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "raan",
                "title": "RAAN °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ecc",
                "title": "Eccentricity",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "aop",
                "title": "Argument of perigee °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "meana",
                "title": "Mean Anomaly °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "mean",
                "title": "Mean Motion rev/day",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ergol",
                "title": "Ergol",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 4890,
        "y": 820,
        "wires": []
    },
    {
        "id": "bbc736346aaf3051",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4910,
        "y": 860,
        "wires": [
            [
                "8689ab60c352e350"
            ]
        ]
    },
    {
        "id": "febd0e86b2abbc88",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "After Manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4910,
        "y": 900,
        "wires": [
            [
                "bbc736346aaf3051"
            ]
        ]
    },
    {
        "id": "7669ab0c0d0926af",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "read blue1-tle-storage",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4080,
        "y": 700,
        "wires": [
            [
                "f06a625861629231",
                "cb162b22f3805c3f"
            ]
        ]
    },
    {
        "id": "d15098f9ee275633",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Old tle storage",
        "filename": "blue1-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4100,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "f06a625861629231",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4130,
        "y": 740,
        "wires": [
            [
                "d15098f9ee275633",
                "68a5bc26ffb29949"
            ]
        ]
    },
    {
        "id": "49db1864f2df7111",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "11/05/23",
        "info": "",
        "x": 4600,
        "y": 820,
        "wires": []
    },
    {
        "id": "593a52079dbca503",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "TLE visualizer B1",
        "links": [
            "d32b325c8b1fc9af"
        ],
        "x": 3885,
        "y": 700,
        "wires": [
            [
                "7669ab0c0d0926af",
                "1093096c2260921d"
            ]
        ]
    },
    {
        "id": "14d7295f97317f5a",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "TLE visualizer B1 out",
        "mode": "link",
        "links": [
            "eff4798c71085513"
        ],
        "x": 4875,
        "y": 660,
        "wires": []
    },
    {
        "id": "68a5bc26ffb29949",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Act",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Old TLE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4350,
        "y": 720,
        "wires": [
            [
                "fefeeb14f4a13dd0"
            ]
        ]
    },
    {
        "id": "fefeeb14f4a13dd0",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4500,
        "y": 660,
        "wires": [
            [
                "5958fe1bf113855a",
                "5c6c2ef4a8f00e2d"
            ]
        ]
    },
    {
        "id": "08a705a994cb38f6",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload.version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "New TLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4780,
        "y": 660,
        "wires": [
            [
                "14d7295f97317f5a"
            ]
        ]
    },
    {
        "id": "5958fe1bf113855a",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4640,
        "y": 660,
        "wires": [
            [
                "08a705a994cb38f6"
            ]
        ]
    },
    {
        "id": "a29bd13f1f18078d",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "read blue1-tle-storage",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4080,
        "y": 820,
        "wires": [
            [
                "f2b4f5a36909e093"
            ]
        ]
    },
    {
        "id": "f2b4f5a36909e093",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4130,
        "y": 860,
        "wires": [
            [
                "e4f414dd3436bafb",
                "5dece65aa3cb9e20"
            ]
        ]
    },
    {
        "id": "e4f414dd3436bafb",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Old tle storage",
        "filename": "blue1-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4100,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "5c6c2ef4a8f00e2d",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "echange",
        "func": "\nif(msg.payload[0].version == \"New TLE\" ){\n    var tmp =msg.payload[0];\n    msg.payload[0]= msg.payload[1];\n    msg.payload[1]=tmp;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4640,
        "y": 740,
        "wires": [
            [
                "8689ab60c352e350"
            ]
        ]
    },
    {
        "id": "363f6de45d0c19fc",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "BASE TLE",
        "func": "msg.payload={\n    incli:98.6116,\n    raan:220.2575,\n    ecc:\"0008464\",\n    aop:193.0704,\n    meana:167.0624,\n    mean:14.26714856000001\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3970,
        "y": 420,
        "wires": [
            [
                "1be4896b4d226ef5",
                "6960f973d433b148",
                "5c7637136a637bc5"
            ]
        ]
    },
    {
        "id": "6960f973d433b148",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Diff Mean Anomaly",
        "func": "var deltaM=2;\nmsg.payload.meana=msg.payload.meana+deltaM;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4370,
        "y": 420,
        "wires": [
            [
                "2a8874bf4d3037b3"
            ]
        ]
    },
    {
        "id": "5c7637136a637bc5",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "GEO STAT",
        "func": "var deltaI=20;\n\nmsg.payload.incli=msg.payload.incli-deltaI;\n\nmsg.payload.mean=1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4170,
        "y": 460,
        "wires": [
            [
                "31379a8462e2bedc",
                "5a5b51d0e18fa211"
            ]
        ]
    },
    {
        "id": "5a5b51d0e18fa211",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Diff Mean Anomaly",
        "func": "var deltaM = 2;\nmsg.payload.meana = msg.payload.meana + deltaM;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4370,
        "y": 460,
        "wires": [
            [
                "3cc50d54edda4b35"
            ]
        ]
    },
    {
        "id": "dda3d6b0eba9adf3",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to read Result.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3980,
        "y": 2100,
        "wires": [
            [
                "5aa5adf67673256f"
            ]
        ]
    },
    {
        "id": "5aa5adf67673256f",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4200,
        "y": 2100,
        "wires": [
            [
                "7bc59ff51c5d84eb"
            ]
        ]
    },
    {
        "id": "7bc59ff51c5d84eb",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4370,
        "y": 2100,
        "wires": [
            [
                "467e43da6f58d8a3"
            ]
        ]
    },
    {
        "id": "467e43da6f58d8a3",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3940,
        "y": 2140,
        "wires": [
            [
                "c9e13cf4f5d006f3"
            ]
        ]
    },
    {
        "id": "bbf6284c8f0bc627",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Tle b2-postMan-OUT",
        "mode": "link",
        "links": [
            "a99ad14c3f06b98d"
        ],
        "x": 4715,
        "y": 2360,
        "wires": []
    },
    {
        "id": "06f54ccab4828945",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4600,
        "y": 2360,
        "wires": [
            [
                "bbf6284c8f0bc627"
            ]
        ]
    },
    {
        "id": "951c1050f82aea6b",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "TEST030523",
        "info": "We try with a persistant",
        "x": 4930,
        "y": 2520,
        "wires": []
    },
    {
        "id": "d5db12efb244af06",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "",
        "filename": "blue2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4880,
        "y": 2060,
        "wires": [
            [
                "c05da72ab436c987"
            ]
        ]
    },
    {
        "id": "e25eab79220683ea",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4520,
        "y": 2180,
        "wires": [
            [
                "d5db12efb244af06",
                "21d932916818b984",
                "6d1dbca08eba25ab",
                "d73eea1271e54f63"
            ],
            [
                "03b843b82d21bd4e"
            ]
        ]
    },
    {
        "id": "ff06824a30b30f17",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "090523",
        "info": "Modif to discard message if null NaN ..",
        "x": 4890,
        "y": 2440,
        "wires": []
    },
    {
        "id": "52bf6fefb1a7ab6d",
        "type": "ui_table",
        "z": "a9c7c6499fb06192",
        "group": "81d0e5ee7c52f38a",
        "name": "TLE display",
        "order": 8,
        "width": 0,
        "height": 0,
        "columns": [
            {
                "field": "version",
                "title": "Version",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "incli",
                "title": "Inclination °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "raan",
                "title": "RAAN °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ecc",
                "title": "Eccentricity",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "aop",
                "title": "Argument of perigee °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "meana",
                "title": "Mean Anomaly °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "mean",
                "title": "Mean Motion rev/day",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ergol",
                "title": "Ergol",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 4930,
        "y": 1940,
        "wires": []
    },
    {
        "id": "4fc0f088ae1fbc1d",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4910,
        "y": 1980,
        "wires": [
            [
                "52bf6fefb1a7ab6d"
            ]
        ]
    },
    {
        "id": "493e76f8da3fff5d",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Before manoeuvre",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Before manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4500,
        "y": 1980,
        "wires": [
            [
                "4fc0f088ae1fbc1d"
            ]
        ]
    },
    {
        "id": "c05da72ab436c987",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "After M",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "After Manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4920,
        "y": 2020,
        "wires": [
            [
                "4fc0f088ae1fbc1d"
            ]
        ]
    },
    {
        "id": "611cb7afa31ea0d3",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "read blue2-tle-storage",
        "filename": "blue2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4190,
        "y": 1820,
        "wires": [
            [
                "7f42cd1e07b27901"
            ]
        ]
    },
    {
        "id": "044c59495146f03e",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Old tle storage",
        "filename": "blue2-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4210,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "7f42cd1e07b27901",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4240,
        "y": 1860,
        "wires": [
            [
                "044c59495146f03e",
                "5907d30baac5b789"
            ]
        ]
    },
    {
        "id": "e934e5ec9b1f2aa7",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "11/05/23",
        "info": "",
        "x": 4620,
        "y": 2000,
        "wires": []
    },
    {
        "id": "615ee30217f7cb03",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "TLE visualizer B2",
        "links": [
            "93d678661c5d817a"
        ],
        "x": 4005,
        "y": 1820,
        "wires": [
            [
                "611cb7afa31ea0d3",
                "e33467cfa826b722"
            ]
        ]
    },
    {
        "id": "e33467cfa826b722",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "New TLE",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "New TLE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4200,
        "y": 1780,
        "wires": [
            [
                "92a8690a4fd84305"
            ]
        ]
    },
    {
        "id": "7c09800c74235140",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "TLE visualizer B2 out",
        "mode": "link",
        "links": [
            "491df3b4c3bf3409"
        ],
        "x": 4985,
        "y": 1780,
        "wires": []
    },
    {
        "id": "5907d30baac5b789",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Act",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Ancienne TLE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4460,
        "y": 1840,
        "wires": [
            [
                "92a8690a4fd84305"
            ]
        ]
    },
    {
        "id": "92a8690a4fd84305",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4610,
        "y": 1780,
        "wires": [
            [
                "54b53583b16684af",
                "af15393dc4895ff5"
            ]
        ]
    },
    {
        "id": "b074fda1ee989237",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload.version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "New TLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4890,
        "y": 1780,
        "wires": [
            [
                "7c09800c74235140"
            ]
        ]
    },
    {
        "id": "54b53583b16684af",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4750,
        "y": 1780,
        "wires": [
            [
                "b074fda1ee989237"
            ]
        ]
    },
    {
        "id": "fcad37c83d3f834d",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "read blue2-tle-storage",
        "filename": "blue2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4190,
        "y": 1940,
        "wires": [
            [
                "3d1b96453fd234df"
            ]
        ]
    },
    {
        "id": "3d1b96453fd234df",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4240,
        "y": 1980,
        "wires": [
            [
                "fd0da9046f23bda5",
                "493e76f8da3fff5d"
            ]
        ]
    },
    {
        "id": "fd0da9046f23bda5",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Old tle storage",
        "filename": "blue2-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4210,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "af15393dc4895ff5",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "echange",
        "func": "\nif(msg.payload[0].version == \"New TLE\" ){\n    var tmp =msg.payload[0];\n    msg.payload[0]= msg.payload[1];\n    msg.payload[1]=tmp;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4750,
        "y": 1860,
        "wires": [
            [
                "52bf6fefb1a7ab6d"
            ]
        ]
    },
    {
        "id": "1924c907d8a7fb68",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "scope": [
            "12b83b90775bc4ae"
        ],
        "uncaught": false,
        "x": 3590,
        "y": 2220,
        "wires": [
            [
                "6e5c769afef065d9"
            ]
        ]
    },
    {
        "id": "41fb7b4cf46d8ec6",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "start time injection in persistence",
        "func": "/*\nvar gs = {}\n\ngs.startdate = msg.paths.path_1 ; \n\ngs.enddate = msg.paths.path_2.enddate;\n\n\n\nmsg.body = null\nmsg.topic = null\nmsg.paths = null\nmsg.filename = null\n\nmsg.payload = gs\n*/\n// 03/05/2023 SIMPLIFICATION\ngs={startdate: msg.paths.path_1 , enddate: msg.paths.path_2.enddate};\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3490,
        "y": 2400,
        "wires": [
            [
                "cdea410cd68a753c"
            ]
        ]
    },
    {
        "id": "cdea410cd68a753c",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3460,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "803eca3c3a664ec9",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2940,
        "y": 2320,
        "wires": [
            [
                "b5198380bc5c88e7"
            ]
        ]
    },
    {
        "id": "b5198380bc5c88e7",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3110,
        "y": 2380,
        "wires": [
            [
                "79d73813d5313faa"
            ]
        ]
    },
    {
        "id": "29e605471c565880",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of post-maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*parseFloat(msg.paths.path_6[0].dura);\n\n\nmsg.payload = datecurrent\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2600,
        "y": 2400,
        "wires": [
            [
                "87cf86f1b13c66a8",
                "91aefaf594cdf343"
            ]
        ]
    },
    {
        "id": "87cf86f1b13c66a8",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of TLE",
        "func": "var time = msg.payload ;\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\n\n\n   return{\n topic:\"tle time\",\n payload: time,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2790,
        "y": 2400,
        "wires": [
            [
                "38ebc42ccf69ff6d"
            ]
        ]
    },
    {
        "id": "38ebc42ccf69ff6d",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "injection",
        "func": "var payload = msg.body;\nvar newMsg = {};\nnewMsg.payload = payload;\nnode.send(newMsg);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2540,
        "y": 2440,
        "wires": [
            [
                "349f289c894b93d5"
            ]
        ]
    },
    {
        "id": "349f289c894b93d5",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to fill b1 tle time database",
        "func": "var tab = []\nvar tm = {}\n\n //From the GS\ntm.peritimeb1 = msg.payload\ntab.push(tm)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2750,
        "y": 2440,
        "wires": [
            [
                "12d9208442d06909"
            ]
        ]
    },
    {
        "id": "12d9208442d06909",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2530,
        "y": 2480,
        "wires": [
            [
                "6f87730b2d83bb05"
            ]
        ]
    },
    {
        "id": "6f87730b2d83bb05",
        "type": "mongodb out",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert b2 time tle mongo",
        "collection": "peritimeb2",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2710,
        "y": 2480,
        "wires": []
    },
    {
        "id": "91aefaf594cdf343",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "blue2-date-storage",
        "filename": "blue2-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2870,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "048be96cbf504873",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Thrust param + Manoeuver Delay",
        "info": "",
        "x": 1610,
        "y": 1900,
        "wires": []
    },
    {
        "id": "b4564590efc64280",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Vehicule, Old TLE, and Manoeuver delay",
        "info": "",
        "x": 1660,
        "y": 2120,
        "wires": []
    },
    {
        "id": "1d023cab67206047",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "duration calc (delay from tle to man)",
        "func": "//var tletime = msg.paths.path_4[0].peritimeb1[0]\nvar tletime = msg.paths.path_4; // 03/05/23 We disco the mongo\n// We use therefore the path4 directly as it comes from the date storage\n// we set teletime to the element 0 of the field peritimeb1 of path_4\nvar mantime = msg.paths.path_5\n// the man time\n//is  in the path5 because of the Setpath_5\nvar timeCorrectionMM =38000;\nvar duration = (mantime)/1000 - (tletime/1000);\ntletime = tletime - timeCorrectionMM;\nmsg.payload = [duration, tletime, mantime]\nmsg.body = [tletime, mantime]\n// it is thedurqtion before mqnoeuver at the tle time\n//msg.payload = [duration, tletime-timeCorrectionMM, mantime]\n//msg.body = [tletime-timeCorrectionMM, mantime]\nreturn msg;\n\n//-38000 because of MM time error when propagating\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 2040,
        "wires": [
            [
                "8ad2f303b6f34cbe",
                "6df8c74a14e86d0d"
            ]
        ]
    },
    {
        "id": "9be9a5c9965c22db",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "test MM1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 2320,
        "wires": []
    },
    {
        "id": "a14b72030e316132",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "test MM1b",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 2280,
        "wires": []
    },
    {
        "id": "081be9db545809f4",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "test MM4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2120,
        "y": 2300,
        "wires": []
    },
    {
        "id": "1ec6e794ff13091a",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "test MM3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 2260,
        "wires": []
    },
    {
        "id": "94b33df30b4d9d4f",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "test MM2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 2320,
        "wires": []
    },
    {
        "id": "0ee0dcd7ec91cc9b",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 2220,
        "wires": [
            [
                "51cafd472cfcc355",
                "0adbc7235fe17d1b"
            ]
        ]
    },
    {
        "id": "0adbc7235fe17d1b",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "test MM1c",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 2320,
        "wires": []
    },
    {
        "id": "651ca30ea03fc2fd",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "160523",
        "info": "Today needed to add this function to use Object.values to convert the key: value object into an array so we don't have random keys depending on the spaces or tabs caused by the TLE format,",
        "x": 1230,
        "y": 2240,
        "wires": []
    },
    {
        "id": "4527dee5d8cffe39",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "16/05/23",
        "info": "I changed the acces to the orbitql param they are in the payload in an array",
        "x": 1540,
        "y": 2220,
        "wires": []
    },
    {
        "id": "e615303e89c9bc3b",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1320,
        "wires": [
            [
                "ec164a7ad1af2abe"
            ]
        ]
    },
    {
        "id": "37eb1a8222d471d8",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle format",
        "func": "var N// Mean motion in rev/day\nvar n // See the expression later \nvar a //semi major axis\nvar acube // acube = a³ \nvar e // excentricity\n\nvar mu = 398600.4418;\n//var mu = 398600;// Earth's standard gravitational parameter\n//var J = 86164; Wrong value changed on the 240523\nvar J = 86400; // A day expressed in seconds \n\nN = msg.paths.path_2[7]; // The mean motion in rev/day\nn = 2*Math.PI*N/J;  // As J/N is the periode T ;n = 2pi/T\nacube = mu/(n*n); // acube = a³ \na=(acube)**(1/3);// We take the cubic root\ne = Number(msg.paths.path_2[4])/10000000; // we get read of the TLE formating of the eccentricity to have the real number \ne = e.toFixed(7);\n\n// Pour l'instant je prefere number ici que parseFloat()\n// aucun interet dans le format \nvar durastop = msg.paths.path_3[0]+1.0+parseFloat(msg.paths.path_6[0].dura);\nvar thrust = \"0\";\nvar dv = \"0\";\nvar isp=\"0\";\nvar drymass = \"0\";\nvar ergolmass = \"0\";\nvar surface =\"0\";\nvar myDate = new Date(msg.paths.path_3[1]);\nDATE = (myDate.toISOString());\n// CORRECTION 050723\n   \n// This isn't necessary and isn't accurate enough \n// CORRECTION\n/*\nvar month = [\"init\",\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nvar mon ;\n\nfor (let i = 0; i < month.length; i++) {\n  if (date.substr(8,3) == month[i]) {\n    mon = i.toString()  \n  }\n} \n\nvar DATE = date.substr(12,4)+\"-0\"+mon+\"-\"+date.substr(5,2)+\"T\"+date.substr(17,8)+\".000\"\n*/\nif(!isNaN(msg.paths.path_1.isp)){isp= msg.paths.path_1.isp}\nif(!isNaN(msg.paths.path_1.thrust)){thrust= msg.paths.path_1.thrust}\nif(!isNaN(msg.paths.path_1.dv)){dv= msg.paths.path_1.dv}\nif(!isNaN(msg.paths.path_1.ergolmass)){ergolmass= msg.paths.path_1.ergolmass}\nif(!isNaN(msg.paths.path_1.drymass)){drymass= msg.paths.path_1.drymass}\nif(!isNaN(msg.paths.path_1.surface)){surface= msg.paths.path_1.surface}\n\nmsg.payload = [\"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thurst, ISP, Ergol mass, Simu duration stop,ManeuverType,Integrator,DV\",DATE , a, e, msg.paths.path_2[2], msg.paths.path_2[3], msg.paths.path_2[5], msg.paths.path_2[6], drymass,surface,thrust,isp, ergolmass, durastop,msg.paths.path_1.maneuverType,msg.paths.path_1.integrator,dv];\n// 03/05/2023 I had to change the colomn to take the Aop from it was coded column 7 i changed for 8 because 7 is a blank space \nreturn msg\n//160523   I changed the acces to the orbital \n//param they are in the payload in an array\n//\"2010-01-01T11:59:26.000\"\n\n// This function was changed on the 240523 because of wrong values on the J ( duration of a day in seconds) \n// And to improve the readability",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 1260,
        "wires": [
            [
                "98a2817c58cf23b3"
            ]
        ]
    },
    {
        "id": "81c2cf68fe36786c",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 930,
        "y": 2120,
        "wires": [
            [
                "1b7a361b8c9faa7b"
            ]
        ]
    },
    {
        "id": "a8b4e5acf8812643",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 2120,
        "wires": [
            [
                "81c2cf68fe36786c"
            ]
        ]
    },
    {
        "id": "1b7a361b8c9faa7b",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 2000,
        "wires": [
            [
                "c173cb6f21978aca"
            ]
        ]
    },
    {
        "id": "c173cb6f21978aca",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\n\n//                Correction 050723\n\n//fractionOfDay = fractionOfDay.toFixed(6);\n// the fraction of the day is given on 8 digit not 6\n//we are loosing accuracy for no reason here\n//                 COrrection 050723\nfractionOfDay = fractionOfDay.toFixed(8);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp = Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds; \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\nmsg.payload=utctimestamp;\n\nreturn msg;\n\n// OLD VERSION FROM 170523:\n/*\nvar milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\nvar year=milleniumCentury+decade;\n \n  // Initialize with January 1st of the given year\n // date.setDate(dayOfYear); \n  // Set the day of the year\n\n  // Calculate the time in milliseconds for the fractional part\n  // of the day\n  \n var fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\nvar date = new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n  // Add the fractional part to the date\n\nmsg.payload=date.getTime()\n\nreturn msg;*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2000,
        "wires": [
            [
                "a6da9320576a5bfd"
            ]
        ]
    },
    {
        "id": "3dc879e736eae282",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "170523 New functionality",
        "info": "This new function was introduced because the date from the persistent is not always the one we want for the MM as it can be changed by juste moving the slider at any time.",
        "x": 550,
        "y": 1960,
        "wires": []
    },
    {
        "id": "5a506a6cdc16104a",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1040,
        "wires": [
            [
                "8cb21e99ae7a9bcf"
            ]
        ]
    },
    {
        "id": "8cb21e99ae7a9bcf",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\n\n//                Correction 050723\n\n//fractionOfDay = fractionOfDay.toFixed(6);\n// the fraction of the day is given on 8 digit not 6\n//we are loosing accuracy for no reason here\n//                 COrrection 050723\nfractionOfDay = fractionOfDay.toFixed(8);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp = Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds; \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\nmsg.payload=utctimestamp;\n\nreturn msg;\n\n// OLD VERSION FROM 170523:\n/*\nvar milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\nvar year=milleniumCentury+decade;\n \n  // Initialize with January 1st of the given year\n // date.setDate(dayOfYear); \n  // Set the day of the year\n\n  // Calculate the time in milliseconds for the fractional part\n  // of the day\n  \n var fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\nvar date = new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n  // Add the fractional part to the date\n\nmsg.payload=date.getTime()\n\nreturn msg;*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1040,
        "wires": [
            [
                "fa3505e97673a6cd"
            ]
        ]
    },
    {
        "id": "dec7a68a804e0f28",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1220,
        "wires": [
            [
                "184247d3590e402c"
            ]
        ]
    },
    {
        "id": "184247d3590e402c",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 970,
        "y": 1220,
        "wires": [
            [
                "5a506a6cdc16104a"
            ]
        ]
    },
    {
        "id": "68b48a24f162fb34",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "170523 New functionality",
        "info": "This new function was introduced because the date from the persistent is not always the one we want for the MM as it can be changed by juste moving the slider at any time.",
        "x": 430,
        "y": 1000,
        "wires": []
    },
    {
        "id": "3fac222938a0beee",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 490,
        "y": 980,
        "wires": []
    },
    {
        "id": "6e5c769afef065d9",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "MM ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3710,
        "y": 2280,
        "wires": []
    },
    {
        "id": "1093096c2260921d",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "New TLE",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "New TLE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4140,
        "y": 640,
        "wires": [
            [
                "fefeeb14f4a13dd0"
            ]
        ]
    },
    {
        "id": "5dece65aa3cb9e20",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Before manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4390,
        "y": 860,
        "wires": [
            [
                "bbc736346aaf3051"
            ]
        ]
    },
    {
        "id": "c705204386ed11b2",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "r1 time setter maneuver IN",
        "links": [
            "39f769c77323e2c3",
            "d6e96bdbc1a513b0",
            "a942a9a6bfafa8b4"
        ],
        "x": 335,
        "y": 3220,
        "wires": [
            [
                "101ce69ef5da132c"
            ]
        ]
    },
    {
        "id": "101ce69ef5da132c",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 3240,
        "wires": [
            [
                "779e6bbed60b2ea1"
            ]
        ]
    },
    {
        "id": "4b45fc7b531cca10",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 3180,
        "wires": [
            [
                "779e6bbed60b2ea1"
            ]
        ]
    },
    {
        "id": "779e6bbed60b2ea1",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_4\", \"path_5\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1050,
        "y": 3220,
        "wires": [
            [
                "1360edcf2302e0a8"
            ],
            []
        ]
    },
    {
        "id": "1360edcf2302e0a8",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "duration calc (delay from tle to man)",
        "func": "//var tletime = msg.paths.path_4[0].peritimeb1[0]\nvar tletime = msg.paths.path_4; // 03/05/23 We disco the mongo\n// We use therefore the path4 directly as it comes from the date storage\n// we set teletime to the element 0 of the field peritimeb1 of path_4\nvar mantime = msg.paths.path_5\n// the man time \n//is  in the path5 because of the Setpath_5 \n\nvar duration = (mantime)/1000 - (tletime/1000);\n// it is thedurqtion before mqnoeuver at the tle time\nmsg.payload = [duration, tletime-38000, mantime]\nmsg.body = [tletime-38000, mantime]\nreturn msg;\n\n//-38000 because of MM time error when propagating",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 3220,
        "wires": [
            [
                "95fbbeea12ef6978",
                "ef50f91362ea5032"
            ]
        ]
    },
    {
        "id": "b9a8e494b7651e96",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Maneuv.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 3140,
        "wires": [
            [
                "0466dd4579de341f"
            ]
        ]
    },
    {
        "id": "0466dd4579de341f",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Maneuv storage injection",
        "func": "msg.payload = [\"Relative DATE, Dx, Dy, Dz, contdura\",msg.paths.path_7[0], msg.paths.path_6[0].dx, msg.paths.path_6[0].dy, msg.paths.path_6[0].dz, msg.paths.path_6[0].dura]; 0\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 3140,
        "wires": [
            [
                "9fd6bd8ff7df1d86"
            ]
        ]
    },
    {
        "id": "727f5239a61c9174",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_6",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_6",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 3100,
        "wires": [
            [
                "117b0a79592d1dc9",
                "d780d1d9f2f2ce45"
            ]
        ]
    },
    {
        "id": "95fbbeea12ef6978",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 3140,
        "wires": [
            [
                "117b0a79592d1dc9"
            ]
        ]
    },
    {
        "id": "117b0a79592d1dc9",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_6\", \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1660,
        "y": 3140,
        "wires": [
            [
                "b9a8e494b7651e96"
            ],
            []
        ]
    },
    {
        "id": "9fd6bd8ff7df1d86",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2310,
        "y": 3140,
        "wires": [
            [
                "774596a22c7c3d65"
            ]
        ]
    },
    {
        "id": "774596a22c7c3d65",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2490,
        "y": 3140,
        "wires": [
            [
                "113f511ca21b602b"
            ]
        ]
    },
    {
        "id": "113f511ca21b602b",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Maneuv-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2680,
        "y": 3140,
        "wires": [
            [
                "619278926f4018bc"
            ]
        ]
    },
    {
        "id": "4de936e7f70f0c3a",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 3400,
        "wires": [
            [
                "d780d1d9f2f2ce45"
            ]
        ]
    },
    {
        "id": "085f67a7d0a39304",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 3440,
        "wires": [
            [
                "d780d1d9f2f2ce45"
            ]
        ]
    },
    {
        "id": "d780d1d9f2f2ce45",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[\"path_6\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1620,
        "y": 3400,
        "wires": [
            [
                "17f2683976aec724"
            ],
            []
        ]
    },
    {
        "id": "af72f73cc5ddca04",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle2",
        "func": "msg.payload = msg.payload[0].tle2;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 3420,
        "wires": [
            [
                "c4adbb1f2bab7abd"
            ]
        ]
    },
    {
        "id": "793275904a730c22",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query for b1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 3420,
        "wires": [
            [
                "fdcdcfe0e4576a7a"
            ]
        ]
    },
    {
        "id": "fdcdcfe0e4576a7a",
        "type": "mongodb in",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 960,
        "y": 3420,
        "wires": [
            [
                "af72f73cc5ddca04",
                "50ad985d52948d64"
            ]
        ]
    },
    {
        "id": "c4adbb1f2bab7abd",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1270,
        "y": 3420,
        "wires": [
            [
                "75746557254df88b"
            ]
        ]
    },
    {
        "id": "ef50f91362ea5032",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 3360,
        "wires": [
            [
                "d780d1d9f2f2ce45"
            ]
        ]
    },
    {
        "id": "7537102c98b20c63",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2170,
        "y": 3420,
        "wires": [
            [
                "53042bc1f64d1580"
            ]
        ]
    },
    {
        "id": "53042bc1f64d1580",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2330,
        "y": 3420,
        "wires": [
            [
                "6620f2774b725501"
            ]
        ]
    },
    {
        "id": "6620f2774b725501",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2530,
        "y": 3420,
        "wires": [
            [
                "3c7ddfa98a71d152",
                "4c3f84d20184ee28"
            ]
        ]
    },
    {
        "id": "423f3ef79ccccfd2",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 3420,
        "wires": [
            [
                "7537102c98b20c63"
            ]
        ]
    },
    {
        "id": "3c7ddfa98a71d152",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*parseFloat(msg.paths.path_6[0].dura);\n\nvar myDate = new Date(datecurrent);\ndate= (myDate.toGMTString());\n\n\nmsg.payload = date\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 3420,
        "wires": [
            [
                "8502e864d0fc9ce8",
                "f21172f788c79d29"
            ]
        ]
    },
    {
        "id": "61f334b734b978f8",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -jar MCS_ManeuverManager_v18.jar",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 3550,
        "y": 3220,
        "wires": [
            [
                "d083310a819c07c4",
                "f042a5440ad26ec9"
            ],
            [
                "ea356ce572bf873e"
            ],
            []
        ]
    },
    {
        "id": "257fc5fb3e3487b1",
        "type": "inject",
        "z": "a9c7c6499fb06192",
        "name": "button: execManeuverManager",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 3210,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "619278926f4018bc",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3070,
        "y": 3220,
        "wires": [
            [
                "60df370d778e7769"
            ]
        ]
    },
    {
        "id": "8502e864d0fc9ce8",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3070,
        "y": 3260,
        "wires": [
            [
                "60df370d778e7769"
            ]
        ]
    },
    {
        "id": "60df370d778e7769",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3280,
        "y": 3240,
        "wires": [
            [
                "61f334b734b978f8"
            ],
            []
        ]
    },
    {
        "id": "69c5899ca50409ac",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "RAZ Result injection",
        "func": "msg.payload = null\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 2900,
        "wires": [
            [
                "ee1ea19bfa879969"
            ]
        ]
    },
    {
        "id": "ee1ea19bfa879969",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1710,
        "y": 2900,
        "wires": [
            [
                "5649add2090a8d14"
            ]
        ]
    },
    {
        "id": "5649add2090a8d14",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Result-RAZ",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1910,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "089caa48e3af402d",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Result.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 2900,
        "wires": [
            [
                "69c5899ca50409ac"
            ]
        ]
    },
    {
        "id": "f21172f788c79d29",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time start",
        "func": "\n//var myDate = new Date(msg.payload);\n\n\n//var date = myDate.toLocaleString() ;\nvar date = msg.payload ;\nvar month = [\"init\",\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nvar mon ;\n\nfor (let i = 0; i < month.length; i++) {\n  if (date.substr(8,3) == month[i]) {\n    mon = i.toString()  \n  }\n} \n\nmsg.payload = date.substr(12,4)+\"-\"+\"0\"+mon+\"-\"+date.substr(5,2)+\"T\"+date.substr(17,8)+\".000Z\"\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 3420,
        "wires": [
            [
                "0c5c7fb7bba1dd7e",
                "fad162dda4d4607d"
            ]
        ]
    },
    {
        "id": "0c5c7fb7bba1dd7e",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3390,
        "y": 3420,
        "wires": [
            [
                "4c65b3e28a87d218"
            ]
        ]
    },
    {
        "id": "970eb6d5901e1982",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3390,
        "y": 3460,
        "wires": [
            [
                "4c65b3e28a87d218"
            ]
        ]
    },
    {
        "id": "4c65b3e28a87d218",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3580,
        "y": 3440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4147d06ab05c2620",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "start time injection in persistence",
        "func": "/*\nvar gs = {}\n\ngs.startdate = msg.paths.path_1 ; \n\ngs.enddate = msg.paths.path_2.enddate;\n\n\n\nmsg.body = null\nmsg.topic = null\nmsg.paths = null\nmsg.filename = null\n\nmsg.payload = gs\n*/\n// 03/05/2023 SIMPLIFICATION\ngs={startdate: msg.paths.path_1 , enddate: msg.paths.path_2.enddate};\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 3480,
        "wires": [
            [
                "ebe3f59e4456107f"
            ]
        ]
    },
    {
        "id": "4c3f84d20184ee28",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of post-maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*parseFloat(msg.paths.path_6[0].dura);\n\n\nmsg.payload = datecurrent\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2780,
        "y": 3540,
        "wires": [
            [
                "55fd084de7b5a076",
                "c7fc8c84df3226b6"
            ]
        ]
    },
    {
        "id": "55fd084de7b5a076",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of TLE",
        "func": "var time = msg.payload ;\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\n\n\n   return{\n topic:\"tle time\",\n payload: time,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2970,
        "y": 3540,
        "wires": [
            [
                "ea8b546f6d90b9b2"
            ]
        ]
    },
    {
        "id": "ea8b546f6d90b9b2",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "injection",
        "func": "var payload = msg.body;\nvar newMsg = {};\nnewMsg.payload = payload;\nnode.send(newMsg);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2720,
        "y": 3580,
        "wires": [
            [
                "4f06f28af5a66640"
            ]
        ]
    },
    {
        "id": "4f06f28af5a66640",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to fill b1 tle time database",
        "func": "var tab = []\nvar tm = {}\n\n //From the GS\ntm.peritimeb1 = msg.payload\ntab.push(tm)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2930,
        "y": 3580,
        "wires": [
            [
                "9147a4987b932077"
            ]
        ]
    },
    {
        "id": "9147a4987b932077",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2710,
        "y": 3620,
        "wires": [
            [
                "f99dfba3f92033ac"
            ]
        ]
    },
    {
        "id": "f99dfba3f92033ac",
        "type": "mongodb out",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert r1 time tle mongo",
        "collection": "peritimer1",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2890,
        "y": 3620,
        "wires": []
    },
    {
        "id": "c7fc8c84df3226b6",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "red1-date-storage",
        "filename": "red1-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3050,
        "y": 3500,
        "wires": [
            []
        ]
    },
    {
        "id": "fad162dda4d4607d",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3080,
        "y": 3460,
        "wires": [
            [
                "078bdadb0a7e0bc8"
            ]
        ]
    },
    {
        "id": "078bdadb0a7e0bc8",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3250,
        "y": 3460,
        "wires": [
            [
                "970eb6d5901e1982"
            ]
        ]
    },
    {
        "id": "418b2b650a1409c0",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "scope": [
            "61f334b734b978f8"
        ],
        "uncaught": false,
        "x": 3490,
        "y": 3320,
        "wires": [
            [
                "ea356ce572bf873e"
            ]
        ]
    },
    {
        "id": "75746557254df88b",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 3480,
        "wires": [
            [
                "085f67a7d0a39304"
            ]
        ]
    },
    {
        "id": "bde901d8c098a32e",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 3320,
        "wires": [
            [
                "1acd4c18d9f81cad"
            ]
        ]
    },
    {
        "id": "1acd4c18d9f81cad",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\n\n//                Correction 050723\n\n//fractionOfDay = fractionOfDay.toFixed(6);\n// the fraction of the day is given on 8 digit not 6\n//we are loosing accuracy for no reason here\n//                 COrrection 050723\nfractionOfDay = fractionOfDay.toFixed(8);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp = Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds; \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\nmsg.payload=utctimestamp;\n\nreturn msg;\n\n// OLD VERSION FROM 170523:\n/*\nvar milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\nvar year=milleniumCentury+decade;\n \n  // Initialize with January 1st of the given year\n // date.setDate(dayOfYear); \n  // Set the day of the year\n\n  // Calculate the time in milliseconds for the fractional part\n  // of the day\n  \n var fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\nvar date = new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n  // Add the fractional part to the date\n\nmsg.payload=date.getTime()\n\nreturn msg;*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 3320,
        "wires": [
            [
                "4b45fc7b531cca10",
                "fabcda2800e38d40"
            ]
        ]
    },
    {
        "id": "50ad985d52948d64",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3360,
        "wires": [
            [
                "64a869f840402454"
            ]
        ]
    },
    {
        "id": "64a869f840402454",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 990,
        "y": 3360,
        "wires": [
            [
                "bde901d8c098a32e"
            ]
        ]
    },
    {
        "id": "fabcda2800e38d40",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 3140,
        "wires": []
    },
    {
        "id": "d083310a819c07c4",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to read Result.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 3240,
        "wires": [
            [
                "e18b3e2b173647e4"
            ]
        ]
    },
    {
        "id": "e18b3e2b173647e4",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4070,
        "y": 3240,
        "wires": [
            [
                "7c3cc52698fb5155"
            ]
        ]
    },
    {
        "id": "7c3cc52698fb5155",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4230,
        "y": 3240,
        "wires": [
            [
                "2119838dd79acc20"
            ]
        ]
    },
    {
        "id": "2119838dd79acc20",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3810,
        "y": 3280,
        "wires": [
            [
                "b13c6bd099097fa3"
            ]
        ]
    },
    {
        "id": "f021f42fee83dfde",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4710,
        "y": 3540,
        "wires": [
            [
                "8d63a1baaf39e899"
            ]
        ]
    },
    {
        "id": "4ac9ab0214927df1",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "ICI TLE line2",
        "info": "",
        "x": 4250,
        "y": 3780,
        "wires": []
    },
    {
        "id": "a6d490d6bb45bf31",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Here was the tle stored",
        "info": "",
        "x": 4480,
        "y": 3640,
        "wires": []
    },
    {
        "id": "58081eca90571b6b",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "red1-date-storage-out",
        "filename": "red1-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4320,
        "y": 3600,
        "wires": [
            [
                "c80c7b2851240c3c"
            ]
        ]
    },
    {
        "id": "c80c7b2851240c3c",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4490,
        "y": 3600,
        "wires": [
            []
        ]
    },
    {
        "id": "a63154118b41237d",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "red1-tle-storage.json",
        "filename": "red1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4820,
        "y": 3200,
        "wires": [
            [
                "ec92b1b8d2759684"
            ]
        ]
    },
    {
        "id": "ebe3f59e4456107f",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3620,
        "y": 3520,
        "wires": [
            []
        ]
    },
    {
        "id": "e39c0c8ff25627f6",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4360,
        "y": 3340,
        "wires": [
            [
                "a63154118b41237d",
                "f69266638fcf7819",
                "2fd70f8c41ef581a",
                "58081eca90571b6b",
                "ea9022819d8cecd1"
            ],
            [
                "7ff0804995db3d0c"
            ]
        ]
    },
    {
        "id": "0300db030bf34334",
        "type": "ui_table",
        "z": "a9c7c6499fb06192",
        "group": "c02dcce485dfb187",
        "name": "TLE display",
        "order": 8,
        "width": 0,
        "height": 0,
        "columns": [
            {
                "field": "version",
                "title": "Version",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "incli",
                "title": "Inclination °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "raan",
                "title": "RAAN °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ecc",
                "title": "Eccentricity",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "aop",
                "title": "Argument of perigee °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "meana",
                "title": "Mean Anomaly °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "mean",
                "title": "Mean Motion rev/day",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ergol",
                "title": "Ergol",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 4870,
        "y": 3080,
        "wires": []
    },
    {
        "id": "bc555f33b63981ab",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4850,
        "y": 3120,
        "wires": [
            [
                "0300db030bf34334"
            ]
        ]
    },
    {
        "id": "ec92b1b8d2759684",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "After Manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4850,
        "y": 3160,
        "wires": [
            [
                "bc555f33b63981ab"
            ]
        ]
    },
    {
        "id": "c50ebcac0e59b979",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "read red1-tle-storage",
        "filename": "red1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4060,
        "y": 2960,
        "wires": [
            [
                "6e1d8f5d606a5c2d"
            ]
        ]
    },
    {
        "id": "6b5fed9e25b4915d",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": " red1 Old tle storage",
        "filename": "red1-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4090,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "6e1d8f5d606a5c2d",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4110,
        "y": 3000,
        "wires": [
            [
                "6b5fed9e25b4915d",
                "025bc11241f63389"
            ]
        ]
    },
    {
        "id": "f6134059e93eb4e6",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "TLE visualizer R1",
        "links": [
            "1ad21657b2842d69"
        ],
        "x": 3865,
        "y": 2960,
        "wires": [
            [
                "c50ebcac0e59b979",
                "9c9c6fb8ad22f4d0"
            ]
        ]
    },
    {
        "id": "0dba4519868b1259",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "TLE visualizer R1 out",
        "mode": "link",
        "links": [
            "3e84b71925909505"
        ],
        "x": 4855,
        "y": 2920,
        "wires": []
    },
    {
        "id": "025bc11241f63389",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Act",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Ancienne TLE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4330,
        "y": 2980,
        "wires": [
            [
                "1ff1c62576a4c2cd"
            ]
        ]
    },
    {
        "id": "1ff1c62576a4c2cd",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4480,
        "y": 2920,
        "wires": [
            [
                "6bdcbf5192b133cb",
                "eb69bd13d063efda"
            ]
        ]
    },
    {
        "id": "f63ace3812f71c9e",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload.version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "New TLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4750,
        "y": 2920,
        "wires": [
            [
                "0dba4519868b1259"
            ]
        ]
    },
    {
        "id": "6bdcbf5192b133cb",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4620,
        "y": 2920,
        "wires": [
            [
                "f63ace3812f71c9e"
            ]
        ]
    },
    {
        "id": "f042a5440ad26ec9",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "read red1-tle-storage",
        "filename": "red1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4060,
        "y": 3080,
        "wires": [
            [
                "a3405ae243c9556a"
            ]
        ]
    },
    {
        "id": "a3405ae243c9556a",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4110,
        "y": 3120,
        "wires": [
            [
                "368435ba6bcba741",
                "b6afd19509e7cd1a"
            ]
        ]
    },
    {
        "id": "368435ba6bcba741",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "red1 Old tle storage",
        "filename": "red1-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4090,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "eb69bd13d063efda",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "echange",
        "func": "\nif(msg.payload[0].version == \"New TLE\" ){\n    var tmp =msg.payload[0];\n    msg.payload[0]= msg.payload[1];\n    msg.payload[1]=tmp;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4620,
        "y": 3000,
        "wires": [
            [
                "0300db030bf34334"
            ]
        ]
    },
    {
        "id": "9c9c6fb8ad22f4d0",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "New TLE",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "New TLE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4100,
        "y": 2900,
        "wires": [
            [
                "1ff1c62576a4c2cd"
            ]
        ]
    },
    {
        "id": "b6afd19509e7cd1a",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Before manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4370,
        "y": 3120,
        "wires": [
            [
                "bc555f33b63981ab"
            ]
        ]
    },
    {
        "id": "b823bed714bbf2e6",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "here was ..",
        "info": "Normally we get here from VTS prop the time tle the epoch that we store in a mongo ",
        "x": 700,
        "y": 3520,
        "wires": []
    },
    {
        "id": "d4f62f326d1682ba",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "TEST030523",
        "info": "We try with a persistant",
        "x": 4830,
        "y": 3300,
        "wires": []
    },
    {
        "id": "a7afff0b6adf821e",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "11/05/23",
        "info": "",
        "x": 4580,
        "y": 3080,
        "wires": []
    },
    {
        "id": "c0b830145c21d406",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "090523",
        "info": "Modif to discard message if null NaN ..",
        "x": 4510,
        "y": 3240,
        "wires": []
    },
    {
        "id": "fd386e26df07c122",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 4040,
        "wires": [
            [
                "fee64123bca31aaa"
            ]
        ]
    },
    {
        "id": "e6eb74cb6a0a6e8c",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 3980,
        "wires": [
            [
                "fee64123bca31aaa"
            ]
        ]
    },
    {
        "id": "fee64123bca31aaa",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_4\", \"path_5\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1010,
        "y": 4020,
        "wires": [
            [
                "f9b19da80be1bd95"
            ],
            []
        ]
    },
    {
        "id": "f9b19da80be1bd95",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "duration calc (delay from tle to man)",
        "func": "//var tletime = msg.paths.path_4[0].peritimeb1[0]\nvar tletime = msg.paths.path_4; // 03/05/23 We disco the mongo\n// We use therefore the path4 directly as it comes from the date storage\n// we set teletime to the element 0 of the field peritimeb1 of path_4\nvar mantime = msg.paths.path_5\n// the man time \n//is  in the path5 because of the Setpath_5 \n\nvar duration = (mantime)/1000 - (tletime/1000);\n// it is thedurqtion before mqnoeuver at the tle time\nmsg.payload = [duration, tletime-38000, mantime]\nmsg.body = [tletime-38000, mantime]\nreturn msg;\n\n//-38000 because of MM time error when propagating",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 4020,
        "wires": [
            [
                "3f57cd8a5d888f6b",
                "cad55f88a1c73b7e"
            ]
        ]
    },
    {
        "id": "1c7b957435aaf1ca",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Maneuv.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1810,
        "y": 3940,
        "wires": [
            [
                "1bb2becb28e044bf"
            ]
        ]
    },
    {
        "id": "1bb2becb28e044bf",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Maneuv storage injection",
        "func": "msg.payload = [\"Relative DATE, Dx, Dy, Dz, contdura\",msg.paths.path_7[0], msg.paths.path_6[0].dx, msg.paths.path_6[0].dy, msg.paths.path_6[0].dz, msg.paths.path_6[0].dura]; 0\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 3940,
        "wires": [
            [
                "0fdef920bde95ad0"
            ]
        ]
    },
    {
        "id": "9699b7fb87f48f09",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_6",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_6",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 3900,
        "wires": [
            [
                "a64d7c75ad424aec",
                "1c0f2fbb3340575f"
            ]
        ]
    },
    {
        "id": "3f57cd8a5d888f6b",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 3940,
        "wires": [
            [
                "a64d7c75ad424aec"
            ]
        ]
    },
    {
        "id": "a64d7c75ad424aec",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_6\", \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1620,
        "y": 3940,
        "wires": [
            [
                "1c7b957435aaf1ca"
            ],
            []
        ]
    },
    {
        "id": "0fdef920bde95ad0",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2270,
        "y": 3940,
        "wires": [
            [
                "741d2de186040ba8"
            ]
        ]
    },
    {
        "id": "741d2de186040ba8",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2450,
        "y": 3940,
        "wires": [
            [
                "401d19485bacc90f"
            ]
        ]
    },
    {
        "id": "401d19485bacc90f",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Maneuv-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2640,
        "y": 3940,
        "wires": [
            [
                "e6bc7eb0efde24f6"
            ]
        ]
    },
    {
        "id": "54d0563596a29463",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 4200,
        "wires": [
            [
                "1c0f2fbb3340575f"
            ]
        ]
    },
    {
        "id": "cc4359372769bcaf",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 4240,
        "wires": [
            [
                "1c0f2fbb3340575f"
            ]
        ]
    },
    {
        "id": "1c0f2fbb3340575f",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[\"path_6\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1580,
        "y": 4200,
        "wires": [
            [
                "be41bf27362b96ee"
            ],
            []
        ]
    },
    {
        "id": "c88c12f00319a197",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle2",
        "func": "msg.payload = msg.payload[0].tle2;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 4220,
        "wires": [
            [
                "9bc63584d41597a7"
            ]
        ]
    },
    {
        "id": "03de9fc31e91be81",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query for r2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 4220,
        "wires": [
            [
                "cdfe4a95b58d0b96"
            ]
        ]
    },
    {
        "id": "cdfe4a95b58d0b96",
        "type": "mongodb in",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 920,
        "y": 4220,
        "wires": [
            [
                "c88c12f00319a197",
                "1a45cf24ce8a6cab"
            ]
        ]
    },
    {
        "id": "9bc63584d41597a7",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1230,
        "y": 4220,
        "wires": [
            [
                "8f39963ebe55920b"
            ]
        ]
    },
    {
        "id": "cad55f88a1c73b7e",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 4160,
        "wires": [
            [
                "1c0f2fbb3340575f"
            ]
        ]
    },
    {
        "id": "8eab9027f549bdc8",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2130,
        "y": 4220,
        "wires": [
            [
                "29d27e8308f0ba6d"
            ]
        ]
    },
    {
        "id": "29d27e8308f0ba6d",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2290,
        "y": 4220,
        "wires": [
            [
                "24ff27dffc890a0e"
            ]
        ]
    },
    {
        "id": "24ff27dffc890a0e",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2490,
        "y": 4220,
        "wires": [
            [
                "480bb014eef9c2ee",
                "744d28cc0995891b"
            ]
        ]
    },
    {
        "id": "1a74ca92ca6e0109",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 4220,
        "wires": [
            [
                "8eab9027f549bdc8"
            ]
        ]
    },
    {
        "id": "480bb014eef9c2ee",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*parseFloat(msg.paths.path_6[0].dura);\n\nvar myDate = new Date(datecurrent);\ndate= (myDate.toGMTString());\n\n\nmsg.payload = date\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2690,
        "y": 4220,
        "wires": [
            [
                "25b4dbcf3bae9fbc",
                "c21ce24fcc1ad8cf"
            ]
        ]
    },
    {
        "id": "c9f26c7755c7178a",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -jar MCS_ManeuverManager_v18.jar",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 3510,
        "y": 4020,
        "wires": [
            [
                "4b26e53ca63c8a93",
                "0aeaa69b35c43d83",
                "25e49848dbc8cbc2"
            ],
            [
                "ea23a64af0556140"
            ],
            []
        ]
    },
    {
        "id": "b2bda6e9f323667b",
        "type": "inject",
        "z": "a9c7c6499fb06192",
        "name": "button: execManeuverManager",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 3170,
        "y": 3960,
        "wires": [
            []
        ]
    },
    {
        "id": "e6bc7eb0efde24f6",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 4020,
        "wires": [
            [
                "bcc2b05978976418"
            ]
        ]
    },
    {
        "id": "25b4dbcf3bae9fbc",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3030,
        "y": 4060,
        "wires": [
            [
                "bcc2b05978976418"
            ]
        ]
    },
    {
        "id": "bcc2b05978976418",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3240,
        "y": 4040,
        "wires": [
            [
                "c9f26c7755c7178a"
            ],
            []
        ]
    },
    {
        "id": "b7495c627bca748d",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "RAZ Result injection",
        "func": "msg.payload = null\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 3700,
        "wires": [
            [
                "6c0d0548f039775c"
            ]
        ]
    },
    {
        "id": "6c0d0548f039775c",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1670,
        "y": 3700,
        "wires": [
            [
                "9b1a8127c826d94e"
            ]
        ]
    },
    {
        "id": "9b1a8127c826d94e",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Result-RAZ",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1870,
        "y": 3700,
        "wires": [
            []
        ]
    },
    {
        "id": "657b94bacbed965c",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Result.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 3700,
        "wires": [
            [
                "b7495c627bca748d"
            ]
        ]
    },
    {
        "id": "c21ce24fcc1ad8cf",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time start",
        "func": "\n//var myDate = new Date(msg.payload);\n\n\n//var date = myDate.toLocaleString() ;\nvar date = msg.payload ;\nvar month = [\"init\",\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nvar mon ;\n\nfor (let i = 0; i < month.length; i++) {\n  if (date.substr(8,3) == month[i]) {\n    mon = i.toString()  \n  }\n} \n\nmsg.payload = date.substr(12,4)+\"-\"+\"0\"+mon+\"-\"+date.substr(5,2)+\"T\"+date.substr(17,8)+\".000Z\"\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2920,
        "y": 4220,
        "wires": [
            [
                "a4b3ce0d583c3a7e",
                "404caeaeaee86daa"
            ]
        ]
    },
    {
        "id": "a4b3ce0d583c3a7e",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3350,
        "y": 4220,
        "wires": [
            [
                "c6229fc4c6538523"
            ]
        ]
    },
    {
        "id": "77fcceaadb6dbd54",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3350,
        "y": 4260,
        "wires": [
            [
                "c6229fc4c6538523"
            ]
        ]
    },
    {
        "id": "c6229fc4c6538523",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3540,
        "y": 4240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b85c8631715864ed",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "start time injection in persistence",
        "func": "/*\nvar gs = {}\n\ngs.startdate = msg.paths.path_1 ; \n\ngs.enddate = msg.paths.path_2.enddate;\n\n\n\nmsg.body = null\nmsg.topic = null\nmsg.paths = null\nmsg.filename = null\n\nmsg.payload = gs\n*/\n// 03/05/2023 SIMPLIFICATION\ngs={startdate: msg.paths.path_1 , enddate: msg.paths.path_2.enddate};\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3610,
        "y": 4280,
        "wires": [
            [
                "b533fe77c80a39fd"
            ]
        ]
    },
    {
        "id": "744d28cc0995891b",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of post-maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*parseFloat(msg.paths.path_6[0].dura);\n\n\nmsg.payload = datecurrent\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 4340,
        "wires": [
            [
                "47916ff46e4696cd",
                "aa9b81e48578248d"
            ]
        ]
    },
    {
        "id": "47916ff46e4696cd",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of TLE",
        "func": "var time = msg.payload ;\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\n\n\n   return{\n topic:\"tle time\",\n payload: time,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2930,
        "y": 4340,
        "wires": [
            [
                "4ae7e52fc7a29e42"
            ]
        ]
    },
    {
        "id": "4ae7e52fc7a29e42",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "injection",
        "func": "var payload = msg.body;\nvar newMsg = {};\nnewMsg.payload = payload;\nnode.send(newMsg);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 4380,
        "wires": [
            [
                "c9740e12669b4016"
            ]
        ]
    },
    {
        "id": "c9740e12669b4016",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to fill r2 tle time database",
        "func": "var tab = []\nvar tm = {}\n\n //From the GS\ntm.peritimeb1 = msg.payload\ntab.push(tm)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2890,
        "y": 4380,
        "wires": [
            [
                "93c50efc3c999de9"
            ]
        ]
    },
    {
        "id": "93c50efc3c999de9",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2670,
        "y": 4420,
        "wires": [
            [
                "d3d9916ce3647005"
            ]
        ]
    },
    {
        "id": "d3d9916ce3647005",
        "type": "mongodb out",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert r2 time tle mongo",
        "collection": "peritimer2",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2850,
        "y": 4420,
        "wires": []
    },
    {
        "id": "74ffd8afe05ce682",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Unix Time stamp of the manoeuver",
        "info": "",
        "x": 920,
        "y": 4080,
        "wires": []
    },
    {
        "id": "669c54ddfc4f2e49",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Unix timestamp of TLE",
        "info": "",
        "x": 1040,
        "y": 3880,
        "wires": []
    },
    {
        "id": "aa9b81e48578248d",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "red2-date-storage",
        "filename": "red2-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3010,
        "y": 4300,
        "wires": [
            []
        ]
    },
    {
        "id": "aab3230cac26af2e",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Vehicule, Old TLE, and Manoeuver delay",
        "info": "",
        "x": 1780,
        "y": 4080,
        "wires": []
    },
    {
        "id": "efc7ccd9347ab38e",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Thrust param + Manoeuver Delay",
        "info": "",
        "x": 1630,
        "y": 3820,
        "wires": []
    },
    {
        "id": "404caeaeaee86daa",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3040,
        "y": 4260,
        "wires": [
            [
                "9a39f3020d764818"
            ]
        ]
    },
    {
        "id": "9a39f3020d764818",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3210,
        "y": 4260,
        "wires": [
            [
                "77fcceaadb6dbd54"
            ]
        ]
    },
    {
        "id": "641d27225a40dcdd",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "090523",
        "info": "Changed to discard also null values ",
        "x": 1190,
        "y": 4140,
        "wires": []
    },
    {
        "id": "53a8c45107786012",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "scope": [
            "c9f26c7755c7178a"
        ],
        "uncaught": false,
        "x": 3510,
        "y": 4080,
        "wires": [
            [
                "ea23a64af0556140"
            ]
        ]
    },
    {
        "id": "8f39963ebe55920b",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 4280,
        "wires": [
            [
                "cc4359372769bcaf"
            ]
        ]
    },
    {
        "id": "7578bc6f0c9c41d6",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 4120,
        "wires": [
            [
                "c0ed13fb82e76a73"
            ]
        ]
    },
    {
        "id": "c0ed13fb82e76a73",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\n\n//                Correction 050723\n\n//fractionOfDay = fractionOfDay.toFixed(6);\n// the fraction of the day is given on 8 digit not 6\n//we are loosing accuracy for no reason here\n//                 COrrection 050723\nfractionOfDay = fractionOfDay.toFixed(8);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp = Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds; \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\nmsg.payload=utctimestamp;\n\nreturn msg;\n\n// OLD VERSION FROM 170523:\n/*\nvar milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\nvar year=milleniumCentury+decade;\n \n  // Initialize with January 1st of the given year\n // date.setDate(dayOfYear); \n  // Set the day of the year\n\n  // Calculate the time in milliseconds for the fractional part\n  // of the day\n  \n var fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\nvar date = new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n  // Add the fractional part to the date\n\nmsg.payload=date.getTime()\n\nreturn msg;*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 4120,
        "wires": [
            [
                "e6eb74cb6a0a6e8c"
            ]
        ]
    },
    {
        "id": "1a45cf24ce8a6cab",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 4160,
        "wires": [
            [
                "a03ad2fcbd1817a1"
            ]
        ]
    },
    {
        "id": "a03ad2fcbd1817a1",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 950,
        "y": 4160,
        "wires": [
            [
                "7578bc6f0c9c41d6"
            ]
        ]
    },
    {
        "id": "5e513a9d2236cade",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "170523 New functionality",
        "info": "This new function was introduced because the date from the persistent is not always the one we want for the MM as it can be changed by juste moving the slider at any time.",
        "x": 510,
        "y": 4060,
        "wires": []
    },
    {
        "id": "5ea9fb102cfb03f1",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 550,
        "y": 4000,
        "wires": []
    },
    {
        "id": "b533fe77c80a39fd",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3580,
        "y": 4320,
        "wires": [
            []
        ]
    },
    {
        "id": "0aeaa69b35c43d83",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to read Result.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3810,
        "y": 4080,
        "wires": [
            [
                "dd40818867834f03"
            ]
        ]
    },
    {
        "id": "dd40818867834f03",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4030,
        "y": 4080,
        "wires": [
            [
                "b43cd5e98c70d47d"
            ]
        ]
    },
    {
        "id": "b43cd5e98c70d47d",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4190,
        "y": 4080,
        "wires": [
            [
                "40fbaf71cef5fb06"
            ]
        ]
    },
    {
        "id": "40fbaf71cef5fb06",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3770,
        "y": 4120,
        "wires": [
            [
                "6ac354f916fa8aa9"
            ]
        ]
    },
    {
        "id": "6c1cc1e20df7de80",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4700,
        "y": 4280,
        "wires": [
            [
                "9f474fcba3b0160f"
            ]
        ]
    },
    {
        "id": "6fa96c20b2c8807a",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "ICI TLE line2",
        "info": "",
        "x": 4470,
        "y": 4560,
        "wires": []
    },
    {
        "id": "0e137f8d69667297",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Here was the tle stored",
        "info": "",
        "x": 4440,
        "y": 4500,
        "wires": []
    },
    {
        "id": "c60eba2bb7049d03",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "red2-date-storage-out",
        "filename": "red2-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4370,
        "y": 4280,
        "wires": [
            [
                "c2ab320cce2a1a33"
            ]
        ]
    },
    {
        "id": "c2ab320cce2a1a33",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4370,
        "y": 4320,
        "wires": [
            []
        ]
    },
    {
        "id": "3a3e45a60586f3e6",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "TEST030523",
        "info": "We try with a persistant",
        "x": 4630,
        "y": 4480,
        "wires": []
    },
    {
        "id": "6169e087fea8b203",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "red2-tle-storage.json",
        "filename": "red2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4580,
        "y": 4040,
        "wires": [
            [
                "86240e8581d9a666"
            ]
        ]
    },
    {
        "id": "bbe391b66288e6ad",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "fabrication de la string",
        "info": "",
        "x": 3980,
        "y": 4340,
        "wires": []
    },
    {
        "id": "735a177e79561bd3",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4140,
        "y": 4160,
        "wires": [
            [
                "6169e087fea8b203",
                "dd6edda28697519d",
                "c60eba2bb7049d03",
                "555a6347b2333425",
                "b0384d8e0e48b498"
            ],
            [
                "6ecd7d23822e9137"
            ]
        ]
    },
    {
        "id": "9c60869b6a85c5b9",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "090523",
        "info": "Modif to discard message if null NaN ..",
        "x": 4450,
        "y": 4060,
        "wires": []
    },
    {
        "id": "6e449aa9ccf44a14",
        "type": "ui_table",
        "z": "a9c7c6499fb06192",
        "group": "d4e830c4b00daeae",
        "name": "TLE display",
        "order": 8,
        "width": 0,
        "height": 0,
        "columns": [
            {
                "field": "version",
                "title": "Version",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "incli",
                "title": "Inclination °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "raan",
                "title": "RAAN °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ecc",
                "title": "Eccentricity",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "aop",
                "title": "Argument of perigee °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "meana",
                "title": "Mean Anomaly °",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "mean",
                "title": "Mean Motion rev/day",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ergol",
                "title": "Ergol",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 4650,
        "y": 3920,
        "wires": []
    },
    {
        "id": "8a4543395d499887",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4630,
        "y": 3960,
        "wires": [
            [
                "6e449aa9ccf44a14"
            ]
        ]
    },
    {
        "id": "86240e8581d9a666",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "After Manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4630,
        "y": 4000,
        "wires": [
            [
                "8a4543395d499887"
            ]
        ]
    },
    {
        "id": "a1b081522f281675",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "read red2-tle-storage",
        "filename": "red2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4020,
        "y": 3800,
        "wires": [
            [
                "59725eddee0d1afe"
            ]
        ]
    },
    {
        "id": "35a4ccb9e959e610",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "red2 Old tle storage",
        "filename": "red2-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4050,
        "y": 3880,
        "wires": [
            []
        ]
    },
    {
        "id": "59725eddee0d1afe",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4070,
        "y": 3840,
        "wires": [
            [
                "35a4ccb9e959e610",
                "569156216edadd7f"
            ]
        ]
    },
    {
        "id": "dbd54973bcc2e768",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "11/05/23",
        "info": "",
        "x": 4320,
        "y": 3920,
        "wires": []
    },
    {
        "id": "318e7cdc76dec879",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "TLE visualizer R2",
        "links": [
            "68f8a4538f23291d"
        ],
        "x": 3825,
        "y": 3800,
        "wires": [
            [
                "a1b081522f281675",
                "74f8c4e417fa3d95"
            ]
        ]
    },
    {
        "id": "66d15938b7436bdc",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "TLE visualizer R2 out",
        "mode": "link",
        "links": [
            "65d2f35495558a56"
        ],
        "x": 4815,
        "y": 3760,
        "wires": []
    },
    {
        "id": "569156216edadd7f",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Act",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Old TLE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4290,
        "y": 3820,
        "wires": [
            [
                "e45582a34b1ada30"
            ]
        ]
    },
    {
        "id": "e45582a34b1ada30",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4440,
        "y": 3760,
        "wires": [
            [
                "84e80b08a56d60cd",
                "8a0ae55fa3e04191",
                "af7b11cb139709a1"
            ]
        ]
    },
    {
        "id": "f97a510ba5eb2d8a",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload.version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "New TLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4720,
        "y": 3760,
        "wires": [
            [
                "66d15938b7436bdc",
                "cb25f6cdbeb1b9c4"
            ]
        ]
    },
    {
        "id": "84e80b08a56d60cd",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4580,
        "y": 3760,
        "wires": [
            [
                "f97a510ba5eb2d8a"
            ]
        ]
    },
    {
        "id": "4b26e53ca63c8a93",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "read red2-tle-storage",
        "filename": "red2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4020,
        "y": 3920,
        "wires": [
            [
                "43a0637b50d6b303"
            ]
        ]
    },
    {
        "id": "43a0637b50d6b303",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4070,
        "y": 3960,
        "wires": [
            [
                "eba5f2e16443bcd0",
                "96e9119b4a360a1f"
            ]
        ]
    },
    {
        "id": "eba5f2e16443bcd0",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "red2 Old tle storage",
        "filename": "red2-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4050,
        "y": 4000,
        "wires": [
            []
        ]
    },
    {
        "id": "8a0ae55fa3e04191",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "echange",
        "func": "\nif(msg.payload[0].version == \"New TLE\" ){\n    var tmp =msg.payload[0];\n    msg.payload[0]= msg.payload[1];\n    msg.payload[1]=tmp;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4520,
        "y": 3840,
        "wires": [
            [
                "6e449aa9ccf44a14"
            ]
        ]
    },
    {
        "id": "74f8c4e417fa3d95",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "New TLE",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "New TLE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4060,
        "y": 3760,
        "wires": [
            [
                "e45582a34b1ada30",
                "473b3f44fddb9b1c"
            ]
        ]
    },
    {
        "id": "96e9119b4a360a1f",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Before manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4250,
        "y": 3960,
        "wires": [
            [
                "8a4543395d499887"
            ]
        ]
    },
    {
        "id": "473b3f44fddb9b1c",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4240,
        "y": 3700,
        "wires": []
    },
    {
        "id": "cb25f6cdbeb1b9c4",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4860,
        "y": 3700,
        "wires": []
    },
    {
        "id": "af7b11cb139709a1",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4540,
        "y": 3700,
        "wires": []
    },
    {
        "id": "0212a7d5f68269dd",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Error MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3720,
        "y": 1180,
        "wires": []
    },
    {
        "id": "cb162b22f3805c3f",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4290,
        "y": 680,
        "wires": []
    },
    {
        "id": "1ed08a51f29784aa",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 1080,
        "wires": []
    },
    {
        "id": "98bfdb80d7a0fd62",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 1120,
        "wires": []
    },
    {
        "id": "2580f1f8516a91eb",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2280,
        "y": 920,
        "wires": []
    },
    {
        "id": "f931ad51642cd8ee",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1040,
        "wires": []
    },
    {
        "id": "f502af4a11673556",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "ANGLES description",
        "info": "beta is the angle arround x or y in LVLH \nalpha is the angle around Z",
        "x": 770,
        "y": 240,
        "wires": []
    },
    {
        "id": "044efb5580bec36f",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4350,
        "y": 1200,
        "wires": [
            [
                "c467dc3c60f156cc",
                "a1bdaf610ebe7e9e"
            ]
        ]
    },
    {
        "id": "541422c1896cb1ab",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4290,
        "y": 1040,
        "wires": []
    },
    {
        "id": "3f8484a431ecca73",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 4840,
        "y": 1400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9b3e72cc9633f73a",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "start time injection in persistence",
        "func": "/*\nvar gs = {}\n\ngs.startdate = msg.paths.path_1 ; \n\ngs.enddate = msg.paths.path_2.enddate;\n\n\n\nmsg.body = null\nmsg.topic = null\nmsg.paths = null\nmsg.filename = null\n\nmsg.payload = gs\n*/\n// 03/05/2023 SIMPLIFICATION\nconst date = new Date(msg.paths.path_1);\n\ngs={startdate: date.toUTCString() , enddate: msg.paths.path_2.enddate};\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4870,
        "y": 1460,
        "wires": [
            [
                "5df08f557399171c"
            ]
        ]
    },
    {
        "id": "5df08f557399171c",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4880,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "3e58b33fdf766968",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4650,
        "y": 1420,
        "wires": [
            [
                "3f8484a431ecca73"
            ]
        ]
    },
    {
        "id": "1c6db80f6fdfa073",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4510,
        "y": 1420,
        "wires": [
            [
                "3e58b33fdf766968"
            ]
        ]
    },
    {
        "id": "a1bdaf610ebe7e9e",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "time-persistence.json",
        "filename": "time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4340,
        "y": 1420,
        "wires": [
            [
                "1c6db80f6fdfa073"
            ]
        ]
    },
    {
        "id": "e2b48b88ab145059",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4510,
        "y": 1340,
        "wires": [
            [
                "c467dc3c60f156cc"
            ]
        ]
    },
    {
        "id": "057465e8c5da90ba",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "blue1-date-storage-out",
        "filename": "blue1-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4320,
        "y": 1340,
        "wires": [
            [
                "e2b48b88ab145059"
            ]
        ]
    },
    {
        "id": "21d932916818b984",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4800,
        "y": 2180,
        "wires": [
            [
                "c4b9a819359c4be0"
            ]
        ]
    },
    {
        "id": "03b843b82d21bd4e",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre aborted",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4760,
        "y": 2220,
        "wires": [
            [
                "c4b9a819359c4be0"
            ]
        ]
    },
    {
        "id": "c4b9a819359c4be0",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 4945,
        "y": 2220,
        "wires": []
    },
    {
        "id": "dd6edda28697519d",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4440,
        "y": 4180,
        "wires": [
            [
                "896058904e74f2c9"
            ]
        ]
    },
    {
        "id": "6ecd7d23822e9137",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre aborted",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4420,
        "y": 4220,
        "wires": [
            [
                "896058904e74f2c9"
            ]
        ]
    },
    {
        "id": "896058904e74f2c9",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239",
            "c67ec5067dc22890"
        ],
        "x": 4585,
        "y": 4220,
        "wires": []
    },
    {
        "id": "f69266638fcf7819",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4620,
        "y": 3380,
        "wires": [
            [
                "0efea168379eeb50"
            ]
        ]
    },
    {
        "id": "7ff0804995db3d0c",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre aborted",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4600,
        "y": 3420,
        "wires": [
            [
                "0efea168379eeb50"
            ]
        ]
    },
    {
        "id": "0efea168379eeb50",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239",
            "c67ec5067dc22890"
        ],
        "x": 4765,
        "y": 3420,
        "wires": []
    },
    {
        "id": "979282dffe4fca2d",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4640,
        "y": 1080,
        "wires": [
            [
                "4393c1b970e3a29b"
            ]
        ]
    },
    {
        "id": "538641152ad22133",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre aborted",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4620,
        "y": 1120,
        "wires": [
            [
                "4393c1b970e3a29b"
            ]
        ]
    },
    {
        "id": "4393c1b970e3a29b",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 4825,
        "y": 1120,
        "wires": []
    },
    {
        "id": "c7906de08b8dfd4d",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "ERROR MM IN",
        "links": [
            "7b3fa48635125060"
        ],
        "x": 4465,
        "y": 1160,
        "wires": [
            [
                "538641152ad22133"
            ]
        ]
    },
    {
        "id": "55efe277fd5d2a31",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "",
        "func": "if (msg.payload.includes(\"orbit should be either elliptic with a > 0 and e < 1 or hyperbolic with a < 0 and e > 1\")){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\nelse{msg.errorMessage=\"Maneuver aborted\";}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3780,
        "y": 1100,
        "wires": [
            [
                "0b7e677ffd81b460"
            ]
        ]
    },
    {
        "id": "0b7e677ffd81b460",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 3905,
        "y": 1140,
        "wires": []
    },
    {
        "id": "87f27a86f6112de7",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "",
        "filename": "blue2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4140,
        "y": 1640,
        "wires": [
            [
                "611cb7afa31ea0d3"
            ]
        ]
    },
    {
        "id": "735a75c945acae04",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "",
        "filename": "blue1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4100,
        "y": 580,
        "wires": [
            [
                "7669ab0c0d0926af"
            ]
        ]
    },
    {
        "id": "d7c0467983805043",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "",
        "filename": "red1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3780,
        "y": 2900,
        "wires": [
            [
                "c50ebcac0e59b979"
            ]
        ]
    },
    {
        "id": "b402dd73bc05cbaf",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "",
        "filename": "red2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4020,
        "y": 3600,
        "wires": [
            [
                "a1b081522f281675"
            ]
        ]
    },
    {
        "id": "0451ccdf4ed678f7",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "error: no tle storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4130,
        "y": 1600,
        "wires": []
    },
    {
        "id": "b911f1ddeac099b6",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "error: no tle storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4090,
        "y": 540,
        "wires": []
    },
    {
        "id": "31e8b74a6be76c5e",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "error: no tle storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3770,
        "y": 2840,
        "wires": []
    },
    {
        "id": "a34ef362c729d94c",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "error: no tle storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4010,
        "y": 3560,
        "wires": []
    },
    {
        "id": "5a8a30c45c14b8d3",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "scope": [
            "611cb7afa31ea0d3"
        ],
        "uncaught": false,
        "x": 3830,
        "y": 1620,
        "wires": [
            [
                "87f27a86f6112de7",
                "0451ccdf4ed678f7"
            ]
        ]
    },
    {
        "id": "8d6d1c9b127b68d1",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "scope": [
            "c50ebcac0e59b979"
        ],
        "uncaught": false,
        "x": 3470,
        "y": 2880,
        "wires": [
            [
                "31e8b74a6be76c5e",
                "d7c0467983805043"
            ]
        ]
    },
    {
        "id": "94da11a78df6cc87",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "scope": [
            "a1b081522f281675"
        ],
        "uncaught": false,
        "x": 3790,
        "y": 3580,
        "wires": [
            [
                "a34ef362c729d94c",
                "b402dd73bc05cbaf"
            ]
        ]
    },
    {
        "id": "8476c250cbd8a111",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "scope": [
            "7669ab0c0d0926af"
        ],
        "uncaught": false,
        "x": 3790,
        "y": 560,
        "wires": [
            [
                "735a75c945acae04",
                "b911f1ddeac099b6"
            ]
        ]
    },
    {
        "id": "ea356ce572bf873e",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "MM ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3690,
        "y": 3340,
        "wires": []
    },
    {
        "id": "ea23a64af0556140",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "MM ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3630,
        "y": 4160,
        "wires": []
    },
    {
        "id": "1f15540a163a20fa",
        "type": "inject",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3550,
        "y": 4520,
        "wires": [
            [
                "4922ac523bdc91d3"
            ]
        ]
    },
    {
        "id": "4922ac523bdc91d3",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "",
        "func": "\nconst fileNames = ['blue1-tle-storage.json','blue2-tle-storage.json','red1-tle-storage.json','red2-tle-storage.json',\n                   'blue1-date-storage.json','blue2-date-storage.json','red1-date-storage.json','red2-date-storage.json'];\nconst { fs } = context.global;\n//const fs = context.global.fs;\n//var path = global.get('path');\n\nmsg.payload=[];\nfor ( const file of fileNames ) {\nvar filePath = '/usr/src/node-red/'+file;\nconsole.log('The file'+file+'at '+filePath+ 'exists :'+fs.existsSync(filePath));\n\n    if (fs.existsSync(filePath)) {\n        \n        msg.payload.push({fileName: file, exists: true, message : 'The file '+file+' exists'});\n    } \n    else {\n        \n        msg.payload.push({ fileName: file, exists: false, message :'The file '+file+'is being created ...'});\n    }\n\n}\n\nreturn msg;\n\n\n\n//var fs = require('fs');\n \n /*In Node-RED functions, if you try to require a Node.js native module, you will get the error ReferenceError: require is not defined.\nThis is because you can't require a Node.js module directly in a function.\n\nTo resolve this, we integrated these modules in the Node-RED global context.\nYou can access them by using context.global.\n\nFor example, to require the crypto module, just declare it like this: const { crypto } = context.global;*/\n/*\ntry {\n    fs.stat(filePath);\n    // Le fichier existe\n     msg.payload.push({fileName: file, exists: true, message : 'The file '+file+' exists'});\n} catch (err) {\n    console.log(err);\n\n    // Le fichier n'existe pas\n     msg.payload.push({ fileName: file, exists: false, message :'The file '+file+'is being created ...'});\n}\n\n*/\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3740,
        "y": 4520,
        "wires": [
            [
                "6acd64861c2ddf3a"
            ]
        ]
    },
    {
        "id": "5dbba84369f71a58",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3740,
        "y": 4680,
        "wires": [
            []
        ]
    },
    {
        "id": "1688d203d6d2922f",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "",
        "property": "payload.exists",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3730,
        "y": 4600,
        "wires": [
            [
                "af5aae43d30de7ee"
            ],
            []
        ]
    },
    {
        "id": "af5aae43d30de7ee",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "filename",
        "rules": [
            {
                "t": "move",
                "p": "payload.fileName",
                "pt": "msg",
                "to": "filename",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3740,
        "y": 4640,
        "wires": [
            [
                "5dbba84369f71a58",
                "0d97d48b885c1636"
            ]
        ]
    },
    {
        "id": "6acd64861c2ddf3a",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3730,
        "y": 4560,
        "wires": [
            [
                "1688d203d6d2922f"
            ]
        ]
    },
    {
        "id": "0d97d48b885c1636",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "JSON initialiser ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3920,
        "y": 4600,
        "wires": []
    },
    {
        "id": "6374784edd2511fd",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "",
        "scope": [
            "4922ac523bdc91d3"
        ],
        "uncaught": false,
        "x": 3890,
        "y": 4520,
        "wires": [
            [
                "db5372ec605c6c64"
            ]
        ]
    },
    {
        "id": "db5372ec605c6c64",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "error json exist check",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3950,
        "y": 4560,
        "wires": []
    },
    {
        "id": "930b89eb97ac5e51",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Maneuver-param",
        "func": "\nvar Dx;\nvar Dy;\nvar Dz;\n\n// theta is related to Dz it is the angle around x or y \n\n//PREPARATION STEP\n\n// theta est le complement a 90 de beta\nvar theta = 90 - msg.payload.beta\n// converting theta to rad and computing\n//the vector composition of the thrust\nDx = 1*Math.sin(theta*Math.PI/180)*Math.cos(msg.payload.alpha*Math.PI/180);\nDy = 1*Math.sin(theta*Math.PI/180)*Math.sin(msg.payload.alpha*Math.PI/180);\nDz = 1*Math.cos(theta*Math.PI/180)\n\nvar tab = []\nvar gs = {}\n\ngs.dx = Dx\ngs.dy = Dy\ngs.dz = Dz\ngs.dura = msg.payload.duration\n\n\ntab.push(gs)\nmsg.body = msg.payload\nmsg.payload = tab\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 3700,
        "wires": [
            [
                "9699b7fb87f48f09",
                "657b94bacbed965c"
            ]
        ]
    },
    {
        "id": "0b778d93f1502cf7",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "7465a3d35f5541d7",
        "name": "Thrust-Orientation",
        "order": 1,
        "width": 10,
        "height": 6,
        "format": "<!-- Load Three.js -->\n<script id=\"libraryThreeDL\" src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js\"></script>\n\n<div id=\"angle-input\" style=\"display: flex; justify-content: center; align-items: center;\">\n    <label for=\"alpha\">Alpha (°): </label>\n    <input type=\"number\" id=\"alpha\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n\n    <label for=\"beta\">Beta (°): </label>\n    <input type=\"number\" id=\"beta\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n    <label for=\"duration\">Duration (s): </label>\n    <input type=\"number\" id=\"duration\" step=\"1\" min=\"0\" max=\"86400\" value=\"0\">\n</div>\n<button id=\"thrustButton\">Thrust Orientation</button>\n<div id=\"canvas-container\" style=\"display: flex; justify-content: center; align-items: center;\"></div>\n\n<script >\n//document.addEventListener(\"DOMContentLoaded\", function() {\nfunction chargerLibrairie(url,callback) {\n    var script = document.createElement('script');\n    script.type='text/javascript';\n    script.src=url;\n    script.onload=callback;\n\n    document.head.appendChild(script);\n}\n\n(function(scope) {\n    \n    chargerLibrairie('https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js',function (){\n    \n    var button = document.getElementById(\"thrustButton\");\n    button.style.backgroundColor = \"#ff0000\"; // Blue background color\n    button.style.color = \"#ffffff\"; // White text color\n    button.style.border = \"none\"; // Remove border\n    button.style.padding = \"10px 20px\"; // Add padding for better appearance\n     button.style.borderRadius = \"2px\"; // Add rounded edges\n  //  console.log(scope);\n    var alphaInput = document.getElementById(\"alpha\");\n    var betaInput = document.getElementById(\"beta\");\n    var durationInput = document.getElementById(\"duration\");\n    var canvasContainer = document.getElementById(\"canvas-container\");\n\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    var noderedStandardUnit = 48;// Nodered unit in pixels\n\n    var heightOfWidget = Number(scope.height)*noderedStandardUnit\n    var widthOfWidget=Number(scope.width)*noderedStandardUnit\n\n\n    renderer.setSize(widthOfWidget,heightOfWidget- noderedStandardUnit);\n    \n    canvasContainer.appendChild(renderer.domElement);\n    renderer.setClearColor(new THREE.Color(0x212C31));\n    // add the cubesat\n\n\n//CUBE SATELLITE\n    var cubeside=1\n    var geometry = new THREE.BoxBufferGeometry(cubeside,cubeside,cubeside);\n    var material = new THREE.MeshStandardMaterial({\n    color: 0x929292,          // Base color of the metal\n    metalness: 0.7,             // Set to 1 for a full metallic surface\n    roughness: 0.5,           // Adjust the roughness to control reflection blur\n    \n    });\n   //var material = new THREE.MeshStandardMaterial({ color: 0xAAAAAA, metalness: 1, roughness: 0.5 });\n    //var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n     \n    alphaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    alphaInput.style.color = \"#ffffff\"; // White text color\n    betaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    betaInput.style.color = \"#ffffff\"; // White text color\n    durationInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    durationInput.style.color = \"#ffffff\"; // White text color\n//ARROWS\n    var arrowOrigin = new THREE.Vector3(0, 0, 0);\n    var arrowDirection = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionX = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionY = new THREE.Vector3(0, 0, 1); // Initial direction\n    var arrowDirectionZ = new THREE.Vector3(1, 0, 0); // Initial direction\n    var arrowLength = 1.4; // Length of the arrow\n    var arrowLengthUnit = 1; // Length of the arrow\n    var arrowColorRed = 0xff0000; // Red color\n    var arrowColorYellow = 0xffff00; // Yellow color\n    var arrowColorBlue = 0x0000ff; // Blue color\n    var arrowColorGreen = 0x00ff00; //Green color\n    var arrowHelper = new THREE.ArrowHelper(arrowDirection, arrowOrigin, arrowLength, arrowColorYellow);\n    var arrowHelperX = new THREE.ArrowHelper(arrowDirectionX, arrowOrigin,arrowLengthUnit, arrowColorRed);\n    var arrowHelperY = new THREE.ArrowHelper(arrowDirectionY, arrowOrigin, arrowLengthUnit, arrowColorGreen);\n    var arrowHelperZ = new THREE.ArrowHelper(arrowDirectionZ, arrowOrigin, arrowLengthUnit, arrowColorBlue);\n    \n    scene.add(arrowHelper);\n    scene.add(arrowHelperX);\n    scene.add(arrowHelperY);\n    scene.add(arrowHelperZ);\n    \n//CAMERA POSITION\n\n    camera.position.set(1.6,1.6,1.6); // Set position like this\n    camera.lookAt(new THREE.Vector3(0,0,0)); // Set look at coordinate like this\n    \n//TRAJECTORY\n\n    const ringgeometry = new THREE.RingGeometry( 36, 36.02, 90 ); \n    const ringmaterial = new THREE.MeshBasicMaterial( { color: 0xffffff, side: THREE.DoubleSide } );\n    const mesh = new THREE.Mesh( ringgeometry, ringmaterial );\n    mesh.position.set(-36, 0, 0);\n    scene.add( mesh );\n    \n//EARTH\n\n    var sphereGeometry = new THREE.SphereBufferGeometry(34, 32, 32);\n    var sphereMaterial = new THREE.MeshStandardMaterial({\n    color: 0x002654,          // Base color of the metal\n    metalness: 0,             // Set to 1 for a full metallic surface\n    roughness: 0.5           // Adjust the roughness to control reflection blur\n\n    });\n    //var sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x021437 });\n    var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n    sphere.position.set(-36, 0, 0); // Position the sphere along the -X axis\n    scene.add(sphere);\n    \n//SUN DIRECTIONAL LIGHT\n    \n    const directionalLight = new THREE.DirectionalLight( 0xffffff, 1 );\n    directionalLight.position.set(15,5,5);\n    scene.add( directionalLight );\n    ambient = new THREE.AmbientLight(0xffffff, 0.2);\n    scene.add(ambient);\n    \n    function animate() {\n        requestAnimationFrame(animate);\n\n\n        // Obtenir les valeurs d'alpha et beta en radians\n        var alpha = alphaInput.value * Math.PI / 180;\n        var beta = betaInput.value * Math.PI / 180;\n        \n        // Calculate THETA\n        var theta = Math.PI / 2 - beta;\n\n        // Compute coordinates \n        var y = Math.sin(theta) * Math.cos(alpha);\n        var z = Math.sin(theta) * Math.sin(alpha);\n        var x = Math.cos(theta);\n\n        // Up dates direction of the arrow \n        arrowHelper.setDirection(new THREE.Vector3(x, y, z));\n        cube.lookAt(new THREE.Vector3(x, y, z))\n        renderer.render(scene, camera);\n    }\n\n    function updateOrientation(scope) {\n        animate();\n\n        var alpha = parseFloat(alphaInput.value);\n        var beta = parseFloat(betaInput.value);\n        var duration= parseFloat(durationInput.value);\n        // Send output (Alpha Beta)\n        scope.send({ payload: { alpha: alpha, beta: beta, duration: duration } });\n    }\n\n    animate();\n\n    document.getElementById(\"thrustButton\").addEventListener(\"click\", function() {\n        updateOrientation(scope);\n    });\n\n    });\n//window.onload = function() {\n//document.addEventListener(\"DOMContentLoaded\", (event) => {\n\n    \n\n\n})(scope);\n//}); \n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 3700,
        "wires": [
            [
                "930b89eb97ac5e51"
            ]
        ]
    },
    {
        "id": "2644a636bb323c4e",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Maneuver-param",
        "func": "\nvar Dx;\nvar Dy;\nvar Dz;\n\n// theta is related to Dz it is the angle around x or y \n\n//PREPARATION STEP\n\n// theta est le complement a 90 de beta\nvar theta = 90 - msg.payload.beta\n// converting theta to rad and computing\n//the vector composition of the thrust\nDx = 1*Math.sin(theta*Math.PI/180)*Math.cos(msg.payload.alpha*Math.PI/180);\nDy = 1*Math.sin(theta*Math.PI/180)*Math.sin(msg.payload.alpha*Math.PI/180);\nDz = 1*Math.cos(theta*Math.PI/180)\n\nvar tab = []\nvar gs = {}\n\ngs.dx = Dx\ngs.dy = Dy\ngs.dz = Dz\ngs.dura = msg.payload.duration\n\n\ntab.push(gs)\nmsg.body = msg.payload\nmsg.payload = tab\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 3060,
        "wires": [
            [
                "089caa48e3af402d",
                "727f5239a61c9174"
            ]
        ]
    },
    {
        "id": "f6310b7b04308740",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "c8a7959a4b0f55f9",
        "name": "Thrust-Orientation",
        "order": 1,
        "width": 10,
        "height": 6,
        "format": "<!-- Load Three.js -->\n<script id=\"libraryThreeDL\" src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js\"></script>\n\n<div id=\"angle-input\" style=\"display: flex; justify-content: center; align-items: center;\">\n    <label for=\"alpha\">Alpha (°): </label>\n    <input type=\"number\" id=\"alpha\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n\n    <label for=\"beta\">Beta (°): </label>\n    <input type=\"number\" id=\"beta\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n    <label for=\"duration\">Duration (s): </label>\n    <input type=\"number\" id=\"duration\" step=\"1\" min=\"0\" max=\"86400\" value=\"0\">\n</div>\n<button id=\"thrustButton\">Thrust Orientation</button>\n<div id=\"canvas-container\" style=\"display: flex; justify-content: center; align-items: center;\"></div>\n\n<script >\n//document.addEventListener(\"DOMContentLoaded\", function() {\nfunction chargerLibrairie(url,callback) {\n    var script = document.createElement('script');\n    script.type='text/javascript';\n    script.src=url;\n    script.onload=callback;\n\n    document.head.appendChild(script);\n}\n\n(function(scope) {\n    \n    chargerLibrairie('https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js',function (){\n    \n    var button = document.getElementById(\"thrustButton\");\n    button.style.backgroundColor = \"#ff0000\"; // Blue background color\n    button.style.color = \"#ffffff\"; // White text color\n    button.style.border = \"none\"; // Remove border\n    button.style.padding = \"10px 20px\"; // Add padding for better appearance\n     button.style.borderRadius = \"2px\"; // Add rounded edges\n  //  console.log(scope);\n    var alphaInput = document.getElementById(\"alpha\");\n    var betaInput = document.getElementById(\"beta\");\n    var durationInput = document.getElementById(\"duration\");\n    var canvasContainer = document.getElementById(\"canvas-container\");\n\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    var noderedStandardUnit = 48;// Nodered unit in pixels\n\n    var heightOfWidget = Number(scope.height)*noderedStandardUnit\n    var widthOfWidget=Number(scope.width)*noderedStandardUnit\n\n\n    renderer.setSize(widthOfWidget,heightOfWidget- noderedStandardUnit);\n    \n    canvasContainer.appendChild(renderer.domElement);\n    renderer.setClearColor(new THREE.Color(0x212C31));\n    // add the cubesat\n\n\n//CUBE SATELLITE\n    var cubeside=1\n    var geometry = new THREE.BoxBufferGeometry(cubeside,cubeside,cubeside);\n    var material = new THREE.MeshStandardMaterial({\n    color: 0x929292,          // Base color of the metal\n    metalness: 0.7,             // Set to 1 for a full metallic surface\n    roughness: 0.5,           // Adjust the roughness to control reflection blur\n    \n    });\n   //var material = new THREE.MeshStandardMaterial({ color: 0xAAAAAA, metalness: 1, roughness: 0.5 });\n    //var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n     \n    alphaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    alphaInput.style.color = \"#ffffff\"; // White text color\n    betaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    betaInput.style.color = \"#ffffff\"; // White text color\n    durationInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    durationInput.style.color = \"#ffffff\"; // White text color\n//ARROWS\n    var arrowOrigin = new THREE.Vector3(0, 0, 0);\n    var arrowDirection = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionX = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionY = new THREE.Vector3(0, 0, 1); // Initial direction\n    var arrowDirectionZ = new THREE.Vector3(1, 0, 0); // Initial direction\n    var arrowLength = 1.4; // Length of the arrow\n    var arrowLengthUnit = 1; // Length of the arrow\n    var arrowColorRed = 0xff0000; // Red color\n    var arrowColorYellow = 0xffff00; // Yellow color\n    var arrowColorBlue = 0x0000ff; // Blue color\n    var arrowColorGreen = 0x00ff00; //Green color\n    var arrowHelper = new THREE.ArrowHelper(arrowDirection, arrowOrigin, arrowLength, arrowColorYellow);\n    var arrowHelperX = new THREE.ArrowHelper(arrowDirectionX, arrowOrigin,arrowLengthUnit, arrowColorRed);\n    var arrowHelperY = new THREE.ArrowHelper(arrowDirectionY, arrowOrigin, arrowLengthUnit, arrowColorGreen);\n    var arrowHelperZ = new THREE.ArrowHelper(arrowDirectionZ, arrowOrigin, arrowLengthUnit, arrowColorBlue);\n    \n    scene.add(arrowHelper);\n    scene.add(arrowHelperX);\n    scene.add(arrowHelperY);\n    scene.add(arrowHelperZ);\n    \n//CAMERA POSITION\n\n    camera.position.set(1.6,1.6,1.6); // Set position like this\n    camera.lookAt(new THREE.Vector3(0,0,0)); // Set look at coordinate like this\n    \n//TRAJECTORY\n\n    const ringgeometry = new THREE.RingGeometry( 36, 36.02, 90 ); \n    const ringmaterial = new THREE.MeshBasicMaterial( { color: 0xffffff, side: THREE.DoubleSide } );\n    const mesh = new THREE.Mesh( ringgeometry, ringmaterial );\n    mesh.position.set(-36, 0, 0);\n    scene.add( mesh );\n    \n//EARTH\n\n    var sphereGeometry = new THREE.SphereBufferGeometry(34, 32, 32);\n    var sphereMaterial = new THREE.MeshStandardMaterial({\n    color: 0x002654,          // Base color of the metal\n    metalness: 0,             // Set to 1 for a full metallic surface\n    roughness: 0.5           // Adjust the roughness to control reflection blur\n\n    });\n    //var sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x021437 });\n    var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n    sphere.position.set(-36, 0, 0); // Position the sphere along the -X axis\n    scene.add(sphere);\n    \n//SUN DIRECTIONAL LIGHT\n    \n    const directionalLight = new THREE.DirectionalLight( 0xffffff, 1 );\n    directionalLight.position.set(15,5,5);\n    scene.add( directionalLight );\n    ambient = new THREE.AmbientLight(0xffffff, 0.2);\n    scene.add(ambient);\n    \n    function animate() {\n        requestAnimationFrame(animate);\n\n\n        // Obtenir les valeurs d'alpha et beta en radians\n        var alpha = alphaInput.value * Math.PI / 180;\n        var beta = betaInput.value * Math.PI / 180;\n        \n        // Calculate THETA\n        var theta = Math.PI / 2 - beta;\n\n        // Compute coordinates \n        var y = Math.sin(theta) * Math.cos(alpha);\n        var z = Math.sin(theta) * Math.sin(alpha);\n        var x = Math.cos(theta);\n\n        // Up dates direction of the arrow \n        arrowHelper.setDirection(new THREE.Vector3(x, y, z));\n        cube.lookAt(new THREE.Vector3(x, y, z))\n        renderer.render(scene, camera);\n    }\n\n    function updateOrientation(scope) {\n        animate();\n\n        var alpha = parseFloat(alphaInput.value);\n        var beta = parseFloat(betaInput.value);\n        var duration= parseFloat(durationInput.value);\n        // Send output (Alpha Beta)\n        scope.send({ payload: { alpha: alpha, beta: beta, duration: duration } });\n    }\n\n    animate();\n\n    document.getElementById(\"thrustButton\").addEventListener(\"click\", function() {\n        updateOrientation(scope);\n    });\n\n    });\n//window.onload = function() {\n//document.addEventListener(\"DOMContentLoaded\", (event) => {\n\n    \n\n\n})(scope);\n//}); \n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 3060,
        "wires": [
            [
                "2644a636bb323c4e"
            ]
        ]
    },
    {
        "id": "cce3aae1c9d08cb4",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Maneuver-param",
        "func": "\nvar Dx;\nvar Dy;\nvar Dz;\n\n// theta is related to Dz it is the angle around x or y \n\n//PREPARATION STEP\n\n// theta est le complement a 90 de beta\nvar theta = 90 - msg.payload.beta\n// converting theta to rad and computing\n//the vector composition of the thrust\nDx = 1*Math.sin(theta*Math.PI/180)*Math.cos(msg.payload.alpha*Math.PI/180);\nDy = 1*Math.sin(theta*Math.PI/180)*Math.sin(msg.payload.alpha*Math.PI/180);\nDz = 1*Math.cos(theta*Math.PI/180)\n\nvar tab = []\nvar gs = {}\n\ngs.dx = Dx\ngs.dy = Dy\ngs.dz = Dz\ngs.dura = msg.payload.duration\n\n\ntab.push(gs)\nmsg.body = msg.payload\nmsg.payload = tab\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1920,
        "wires": [
            [
                "310dca26d9268382",
                "1256ccae660a5b29"
            ]
        ]
    },
    {
        "id": "7fa4908e67f2ce45",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "1756cdc52869c611",
        "name": "Thrust-Orientation",
        "order": 1,
        "width": 10,
        "height": 6,
        "format": "<!-- Load Three.js -->\n<script id=\"libraryThreeDL\" src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js\"></script>\n\n<div id=\"angle-input\" style=\"display: flex; justify-content: center; align-items: center;\">\n    <label for=\"alpha\">Alpha (°): </label>\n    <input type=\"number\" id=\"alpha\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n\n    <label for=\"beta\">Beta (°): </label>\n    <input type=\"number\" id=\"beta\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n    <label for=\"duration\">Duration (s): </label>\n    <input type=\"number\" id=\"duration\" step=\"1\" min=\"0\" max=\"86400\" value=\"0\">\n</div>\n<button id=\"thrustButton\">Thrust Orientation</button>\n<div id=\"canvas-container\" style=\"display: flex; justify-content: center; align-items: center;\"></div>\n\n<script >\n//document.addEventListener(\"DOMContentLoaded\", function() {\nfunction chargerLibrairie(url,callback) {\n    var script = document.createElement('script');\n    script.type='text/javascript';\n    script.src=url;\n    script.onload=callback;\n\n    document.head.appendChild(script);\n}\n\n(function(scope) {\n    \n    chargerLibrairie('https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js',function (){\n    \n    var button = document.getElementById(\"thrustButton\");\n    button.style.backgroundColor = \"#00567a\"; // Blue background color\n    button.style.color = \"#ffffff\"; // White text color\n    button.style.border = \"none\"; // Remove border\n    button.style.padding = \"10px 20px\"; // Add padding for better appearance\n     button.style.borderRadius = \"2px\"; // Add rounded edges\n  //  console.log(scope);\n    var alphaInput = document.getElementById(\"alpha\");\n    var betaInput = document.getElementById(\"beta\");\n    var durationInput = document.getElementById(\"duration\");\n    var canvasContainer = document.getElementById(\"canvas-container\");\n\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    var noderedStandardUnit = 48;// Nodered unit in pixels\n\n    var heightOfWidget = Number(scope.height)*noderedStandardUnit\n    var widthOfWidget=Number(scope.width)*noderedStandardUnit\n\n\n    renderer.setSize(widthOfWidget,heightOfWidget- noderedStandardUnit);\n    \n    canvasContainer.appendChild(renderer.domElement);\n    renderer.setClearColor(new THREE.Color(0x212C31));\n    // add the cubesat\n\n\n//CUBE SATELLITE\n    var cubeside=1\n    var geometry = new THREE.BoxBufferGeometry(cubeside,cubeside,cubeside);\n    var material = new THREE.MeshStandardMaterial({\n    color: 0x929292,          // Base color of the metal\n    metalness: 0.7,             // Set to 1 for a full metallic surface\n    roughness: 0.5,           // Adjust the roughness to control reflection blur\n    \n    });\n   //var material = new THREE.MeshStandardMaterial({ color: 0xAAAAAA, metalness: 1, roughness: 0.5 });\n    //var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n     \n    alphaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    alphaInput.style.color = \"#ffffff\"; // White text color\n    betaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    betaInput.style.color = \"#ffffff\"; // White text color\n    durationInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    durationInput.style.color = \"#ffffff\"; // White text color\n//ARROWS\n    var arrowOrigin = new THREE.Vector3(0, 0, 0);\n    var arrowDirection = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionX = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionY = new THREE.Vector3(0, 0, 1); // Initial direction\n    var arrowDirectionZ = new THREE.Vector3(1, 0, 0); // Initial direction\n    var arrowLength = 1.4; // Length of the arrow\n    var arrowLengthUnit = 1; // Length of the arrow\n    var arrowColorRed = 0xff0000; // Red color\n    var arrowColorYellow = 0xffff00; // Yellow color\n    var arrowColorBlue = 0x0000ff; // Blue color\n    var arrowColorGreen = 0x00ff00; //Green color\n    var arrowHelper = new THREE.ArrowHelper(arrowDirection, arrowOrigin, arrowLength, arrowColorYellow);\n    var arrowHelperX = new THREE.ArrowHelper(arrowDirectionX, arrowOrigin,arrowLengthUnit, arrowColorRed);\n    var arrowHelperY = new THREE.ArrowHelper(arrowDirectionY, arrowOrigin, arrowLengthUnit, arrowColorGreen);\n    var arrowHelperZ = new THREE.ArrowHelper(arrowDirectionZ, arrowOrigin, arrowLengthUnit, arrowColorBlue);\n    \n    scene.add(arrowHelper);\n    scene.add(arrowHelperX);\n    scene.add(arrowHelperY);\n    scene.add(arrowHelperZ);\n    \n//CAMERA POSITION\n\n    camera.position.set(1.6,1.6,1.6); // Set position like this\n    camera.lookAt(new THREE.Vector3(0,0,0)); // Set look at coordinate like this\n    \n//TRAJECTORY\n\n    const ringgeometry = new THREE.RingGeometry( 36, 36.02, 90 ); \n    const ringmaterial = new THREE.MeshBasicMaterial( { color: 0xffffff, side: THREE.DoubleSide } );\n    const mesh = new THREE.Mesh( ringgeometry, ringmaterial );\n    mesh.position.set(-36, 0, 0);\n    scene.add( mesh );\n    \n//EARTH\n\n    var sphereGeometry = new THREE.SphereBufferGeometry(34, 32, 32);\n    var sphereMaterial = new THREE.MeshStandardMaterial({\n    color: 0x002654,          // Base color of the metal\n    metalness: 0,             // Set to 1 for a full metallic surface\n    roughness: 0.5           // Adjust the roughness to control reflection blur\n\n    });\n    //var sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x021437 });\n    var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n    sphere.position.set(-36, 0, 0); // Position the sphere along the -X axis\n    scene.add(sphere);\n    \n//SUN DIRECTIONAL LIGHT\n    \n    const directionalLight = new THREE.DirectionalLight( 0xffffff, 1 );\n    directionalLight.position.set(15,5,5);\n    scene.add( directionalLight );\n    ambient = new THREE.AmbientLight(0xffffff, 0.2);\n    scene.add(ambient);\n    \n    function animate() {\n        requestAnimationFrame(animate);\n\n\n        // Obtenir les valeurs d'alpha et beta en radians\n        var alpha = alphaInput.value * Math.PI / 180;\n        var beta = betaInput.value * Math.PI / 180;\n        \n        // Calculate THETA\n        var theta = Math.PI / 2 - beta;\n\n        // Compute coordinates \n        var y = Math.sin(theta) * Math.cos(alpha);\n        var z = Math.sin(theta) * Math.sin(alpha);\n        var x = Math.cos(theta);\n\n        // Up dates direction of the arrow \n        arrowHelper.setDirection(new THREE.Vector3(x, y, z));\n        cube.lookAt(new THREE.Vector3(x, y, z))\n        renderer.render(scene, camera);\n    }\n\n    function updateOrientation(scope) {\n        animate();\n\n        var alpha = parseFloat(alphaInput.value);\n        var beta = parseFloat(betaInput.value);\n        var duration= parseFloat(durationInput.value);\n        // Send output (Alpha Beta)\n        scope.send({ payload: { alpha: alpha, beta: beta, duration: duration } });\n    }\n\n    animate();\n\n    document.getElementById(\"thrustButton\").addEventListener(\"click\", function() {\n        updateOrientation(scope);\n    });\n\n    });\n//window.onload = function() {\n//document.addEventListener(\"DOMContentLoaded\", (event) => {\n\n    \n\n\n})(scope);\n//}); \n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 850,
        "y": 1920,
        "wires": [
            [
                "cce3aae1c9d08cb4"
            ]
        ]
    },
    {
        "id": "d0dc599394b98a40",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Maneuver-param",
        "func": "\nvar Dx;\nvar Dy;\nvar Dz;\n\n// theta is related to Dz it is the angle around x or y \n\n//PREPARATION STEP\n\n// theta est le complement a 90 de beta\nvar theta = 90 - msg.payload.beta\n// converting theta to rad and computing\n//the vector composition of the thrust\nDx = 1*Math.sin(theta*Math.PI/180)*Math.cos(msg.payload.alpha*Math.PI/180);\nDy = 1*Math.sin(theta*Math.PI/180)*Math.sin(msg.payload.alpha*Math.PI/180);\nDz = 1*Math.cos(theta*Math.PI/180)\n\nvar tab = []\nvar gs = {}\n\ngs.dx = Dx\ngs.dy = Dy\ngs.dz = Dz\ngs.dura = msg.payload.duration\n\n\ntab.push(gs)\nmsg.body = msg.payload\nmsg.payload = tab\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 820,
        "wires": [
            [
                "f7fae6fbb972e49a",
                "93cecfd0bf213d56"
            ]
        ]
    },
    {
        "id": "0d641d83dafe1659",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "5a7810372552815e",
        "name": "Thrust-Orientation",
        "order": 1,
        "width": 10,
        "height": 6,
        "format": "<!-- Load Three.js -->\n<script id=\"libraryThreeDL\" src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js\"></script>\n\n<div id=\"angle-input\" style=\"display: flex; justify-content: center; align-items: center;\">\n    <label for=\"alpha\">Alpha (°): </label>\n    <input type=\"number\" id=\"alpha\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n\n    <label for=\"beta\">Beta (°): </label>\n    <input type=\"number\" id=\"beta\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n    <label for=\"duration\">Duration (s): </label>\n    <input type=\"number\" id=\"duration\" step=\"1\" min=\"0\" max=\"86400\" value=\"0\">\n</div>\n<button id=\"thrustButton\">Thrust Orientation</button>\n<div id=\"canvas-container\" style=\"display: flex; justify-content: center; align-items: center;\"></div>\n\n<script >\n//document.addEventListener(\"DOMContentLoaded\", function() {\nfunction chargerLibrairie(url,callback) {\n    var script = document.createElement('script');\n    script.type='text/javascript';\n    script.src=url;\n    script.onload=callback;\n\n    document.head.appendChild(script);\n}\n\n(function(scope) {\n    \n    chargerLibrairie('https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js',function (){\n    \n    var button = document.getElementById(\"thrustButton\");\n    button.style.backgroundColor = \"#00567a\"; // Blue background color\n    button.style.color = \"#ffffff\"; // White text color\n    button.style.border = \"none\"; // Remove border\n    button.style.padding = \"10px 20px\"; // Add padding for better appearance\n     button.style.borderRadius = \"2px\"; // Add rounded edges\n  //  console.log(scope);\n    var alphaInput = document.getElementById(\"alpha\");\n    var betaInput = document.getElementById(\"beta\");\n    var durationInput = document.getElementById(\"duration\");\n    var canvasContainer = document.getElementById(\"canvas-container\");\n\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    var noderedStandardUnit = 48;// Nodered unit in pixels\n\n    var heightOfWidget = Number(scope.height)*noderedStandardUnit\n    var widthOfWidget=Number(scope.width)*noderedStandardUnit\n\n\n    renderer.setSize(widthOfWidget,heightOfWidget- noderedStandardUnit);\n    \n    canvasContainer.appendChild(renderer.domElement);\n    renderer.setClearColor(new THREE.Color(0x212C31));\n    // add the cubesat\n\n\n//CUBE SATELLITE\n    var cubeside=1\n    var geometry = new THREE.BoxBufferGeometry(cubeside,cubeside,cubeside);\n    var material = new THREE.MeshStandardMaterial({\n    color: 0x929292,          // Base color of the metal\n    metalness: 0.7,             // Set to 1 for a full metallic surface\n    roughness: 0.5,           // Adjust the roughness to control reflection blur\n    \n    });\n   //var material = new THREE.MeshStandardMaterial({ color: 0xAAAAAA, metalness: 1, roughness: 0.5 });\n    //var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n     \n    alphaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    alphaInput.style.color = \"#ffffff\"; // White text color\n    betaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    betaInput.style.color = \"#ffffff\"; // White text color\n    durationInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    durationInput.style.color = \"#ffffff\"; // White text color\n//ARROWS\n    var arrowOrigin = new THREE.Vector3(0, 0, 0);\n    var arrowDirection = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionX = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionY = new THREE.Vector3(0, 0, 1); // Initial direction\n    var arrowDirectionZ = new THREE.Vector3(1, 0, 0); // Initial direction\n    var arrowLength = 1.4; // Length of the arrow\n    var arrowLengthUnit = 1; // Length of the arrow\n    var arrowColorRed = 0xff0000; // Red color\n    var arrowColorYellow = 0xffff00; // Yellow color\n    var arrowColorBlue = 0x0000ff; // Blue color\n    var arrowColorGreen = 0x00ff00; //Green color\n    var arrowHelper = new THREE.ArrowHelper(arrowDirection, arrowOrigin, arrowLength, arrowColorYellow);\n    var arrowHelperX = new THREE.ArrowHelper(arrowDirectionX, arrowOrigin,arrowLengthUnit, arrowColorRed);\n    var arrowHelperY = new THREE.ArrowHelper(arrowDirectionY, arrowOrigin, arrowLengthUnit, arrowColorGreen);\n    var arrowHelperZ = new THREE.ArrowHelper(arrowDirectionZ, arrowOrigin, arrowLengthUnit, arrowColorBlue);\n    \n    scene.add(arrowHelper);\n    scene.add(arrowHelperX);\n    scene.add(arrowHelperY);\n    scene.add(arrowHelperZ);\n    \n//CAMERA POSITION\n\n    camera.position.set(1.6,1.6,1.6); // Set position like this\n    camera.lookAt(new THREE.Vector3(0,0,0)); // Set look at coordinate like this\n    \n//TRAJECTORY\n\n    const ringgeometry = new THREE.RingGeometry( 36, 36.02, 90 ); \n    const ringmaterial = new THREE.MeshBasicMaterial( { color: 0xffffff, side: THREE.DoubleSide } );\n    const mesh = new THREE.Mesh( ringgeometry, ringmaterial );\n    mesh.position.set(-36, 0, 0);\n    scene.add( mesh );\n    \n//EARTH\n\n    var sphereGeometry = new THREE.SphereBufferGeometry(34, 32, 32);\n    var sphereMaterial = new THREE.MeshStandardMaterial({\n    color: 0x002654,          // Base color of the metal\n    metalness: 0,             // Set to 1 for a full metallic surface\n    roughness: 0.5           // Adjust the roughness to control reflection blur\n\n    });\n    //var sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x021437 });\n    var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n    sphere.position.set(-36, 0, 0); // Position the sphere along the -X axis\n    scene.add(sphere);\n    \n//SUN DIRECTIONAL LIGHT\n    \n    const directionalLight = new THREE.DirectionalLight( 0xffffff, 1 );\n    directionalLight.position.set(15,5,5);\n    scene.add( directionalLight );\n    ambient = new THREE.AmbientLight(0xffffff, 0.2);\n    scene.add(ambient);\n    \n    function animate() {\n        requestAnimationFrame(animate);\n\n\n        // Obtenir les valeurs d'alpha et beta en radians\n        var alpha = alphaInput.value * Math.PI / 180;\n        var beta = betaInput.value * Math.PI / 180;\n        \n        // Calculate THETA\n        var theta = Math.PI / 2 - beta;\n\n        // Compute coordinates \n        var y = Math.sin(theta) * Math.cos(alpha);\n        var z = Math.sin(theta) * Math.sin(alpha);\n        var x = Math.cos(theta);\n\n        // Up dates direction of the arrow \n        arrowHelper.setDirection(new THREE.Vector3(x, y, z));\n        cube.lookAt(new THREE.Vector3(x, y, z))\n        renderer.render(scene, camera);\n    }\n\n    function updateOrientation(scope) {\n        animate();\n\n        var alpha = parseFloat(alphaInput.value);\n        var beta = parseFloat(betaInput.value);\n        var duration= parseFloat(durationInput.value);\n        // Send output (Alpha Beta)\n        scope.send({ payload: { alpha: alpha, beta: beta, duration: duration } });\n    }\n\n    animate();\n\n    document.getElementById(\"thrustButton\").addEventListener(\"click\", function() {\n        updateOrientation(scope);\n    });\n\n    });\n//window.onload = function() {\n//document.addEventListener(\"DOMContentLoaded\", (event) => {\n\n    \n\n\n})(scope);\n//}); \n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 820,
        "wires": [
            [
                "d0dc599394b98a40",
                "03b0a2b8d17493a9"
            ]
        ]
    },
    {
        "id": "6a0078d220b67fee",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "3dabe8df.a10df8",
        "name": "CSS style for RED team",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<style>\n md-select,.md-select-value.md-select-placeholder,#select_20,#select_25,md-input-container.md-default-theme .md-placeholder, md-input-container .md-placeholder, md-input-container.md-default-theme label, md-input-container label {\n    color: rgb(255,255,255);\n}\n  .custom-class-node-red-button > form > div.form-control> button  {\n    background-color: #d80000 !important ; \n    color: #ffffff !important ;}  \n  #submitButtonr1,#submitButtonr2 {\n    background-color: #d80000 !important ; \n    color: #ffffff !important ;}  \n \n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 390,
        "y": 3540,
        "wires": [
            []
        ]
    },
    {
        "id": "260d13ce0189becb",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol=msg.payload[0].ergolmass;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4130,
        "y": 2220,
        "wires": [
            [
                "e25eab79220683ea"
            ]
        ]
    },
    {
        "id": "c2cbba76a660dc85",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol=msg.payload[0].ergolmass;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3990,
        "y": 3360,
        "wires": [
            [
                "e39c0c8ff25627f6"
            ]
        ]
    },
    {
        "id": "16f6b804171434f5",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol=msg.payload[0].ergolmass;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3870,
        "y": 4160,
        "wires": [
            [
                "735a177e79561bd3"
            ]
        ]
    },
    {
        "id": "a4a9a11440819b91",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1760,
        "y": 1320,
        "wires": []
    },
    {
        "id": "03b0a2b8d17493a9",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "ORientation",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 880,
        "wires": []
    },
    {
        "id": "ff33218d1b7bd97d",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "OUT MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3680,
        "y": 920,
        "wires": []
    },
    {
        "id": "020e2f471936b565",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "d": true,
        "group": "5a7810372552815e",
        "name": "",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<style>\n  /* CSS style for labels */\n  #select_20 .md-select-value span,\n  #select_20 .md-text,\n  #select_25 .md-select-value span,\n  #select_25 .md-text {\n    color: #ffffff !important;\n  }\n</style>\n\n<md-input-container>\n  <label for=\"maneuver\">Maneuver</label>\n  <md-select ng-model=\"maneuver\" id=\"select_20\">\n    <md-option value=\"Impulse\">Impulse</md-option>\n    <md-option value=\"Continuous\">Continuous</md-option>\n  </md-select>\n</md-input-container>\n\n<md-input-container>\n  <label for=\"integrator\">Integrator</label>\n  <md-select ng-model=\"integrator\" style=\"color: #ffffff !important;\" id=\"select_25\">\n    <md-option value=\"RK4\">RungeKutta4</md-option>\n    <md-option value=\"DP\">DormandPrince</md-option>\n  </md-select>\n</md-input-container>\n\n<br>\n\n<button ng-click=\"send({payload: {maneuverType: maneuver, integrator: integrator}})\" class=\"md-raised nr-dashboard-form-button md-button md-ink-ripple\" id=\"thrustButton\">Submit</button>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 720,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "9ca7aa9eaa4888d2",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1180,
        "wires": []
    },
    {
        "id": "d54e2e4ee899c6f1",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "5a7810372552815e",
        "name": "BLUE1 Vehicule template",
        "order": 9,
        "width": "10",
        "height": "4",
        "format": "<style>\n\n\n  /* Adjust the layout to fill the widget space */\n  .form-container {\n      height:100%;\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .column {\n    flex: 1;\n   height:100%;\n  }\n  .md-input-container {\n    width: 90%;\n    margin: 10px 0px; /* Adjust as needed */\n\n  }\n\n  /* Vertically align the content within the input containers */\n   .md-input {\n       height:100%;\n    margin-top:10px 0px; /* Adjust as needed */\n  }\n\n</style>\n<form id=\"myForm\" class=\"nr-dashboard-theme md-content nr-dashboard-form ng-pristine ng-invalid ng-invalid-required\">\n  <div class=\"form-container\">\n    <div class=\"column\">\n<md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"maneuver\">Maneuver</label>\n    <md-select ng-model=\"msg.payload.maneuverType\" id=\"select_20\" name=\"maneuverType\">\n      <md-option value=\"Impulse\">Impulse</md-option>\n      <md-option value=\"Continuous\">Continuous</md-option>\n    </md-select>\n</md-input-container>\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"integrator\">Integrator</label>\n    <md-select ng-model=\"msg.payload.integrator\" style=\"color: #ffffff !important;\" id=\"select_25\" name=\"integrator\">\n      <md-option value=\"RK4\">RungeKutta4</md-option>\n      <md-option value=\"DP\">DormandPrince</md-option>\n    </md-select>\n  </md-input-container>\n  <md-input-container ng-if=\"msg.payload.maneuverType === 'Impulse'\" class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"dv\">DV (m/s)</label>\n    <input type=\"text\" id=\"dv\" name=\"dv\" ng-model=\"msg.payload.dv\">\n  </md-input-container>\n  <md-input-container ng-if=\"msg.payload.maneuverType === 'Continuous'\" class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"thrust\">Thrust</label>\n    <input type=\"text\" id=\"thrust\" name=\"thrust\" ng-model=\"msg.payload.thrust\">\n  </md-input-container>\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"ergolmass\">Ergol Mass</label>\n    <input type=\"text\" id=\"ergolmass\" name=\"ergolmass\" ng-model=\"msg.payload.ergolmass\">\n  </md-input-container>\n</div>\n\n    <div class=\"column\">\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"drymass\">Dry Mass</label>\n    <input type=\"text\" id=\"drymass\" name=\"drymass\" ng-model=\"msg.payload.drymass\">\n  </md-input-container>\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"isp\">Isp (s)</label>\n    <input type=\"text\" id=\"isp\" name=\"isp\" ng-model=\"msg.payload.isp\">\n  </md-input-container>\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"surface\">Surface m²</label>\n    <input type=\"text\" id=\"surface\" name=\"surface\" ng-model=\"msg.payload.surface\">\n  </md-input-container>\n  </div>\n  </div>\n</form>\n<button type=\"submit\" id=\"submitButtonb1\" style=\"display: flex; justify-content: center; align-items: center;\" class=\"md-raised md-button md-ink-ripple\" ng-click=\"send({payload: msg.payload})\">Submit</button>\n<br>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 430,
        "y": 1260,
        "wires": [
            [
                "9ca7aa9eaa4888d2",
                "649976e64d5c201f",
                "78ed0576c46a296c"
            ]
        ]
    },
    {
        "id": "4e754c50c9409315",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle format",
        "func": "var N// Mean motion in rev/day\nvar n // See the expression later \nvar a //semi major axis\nvar acube // acube = a³ \nvar e // excentricity\n\nvar mu = 398600.4418;\n//var mu = 398600;// Earth's standard gravitational parameter\n//var J = 86164; Wrong value changed on the 240523\nvar J = 86400; // A day expressed in seconds \n\nN = msg.paths.path_2[7]; // The mean motion in rev/day\nn = 2*Math.PI*N/J;  // As J/N is the periode T ;n = 2pi/T\nacube = mu/(n*n); // acube = a³ \na=(acube)**(1/3);// We take the cubic root\ne = Number(msg.paths.path_2[4])/10000000; // we get read of the TLE formating of the eccentricity to have the real number \ne = e.toFixed(7);\n\n// Pour l'instant je prefere number ici que parseFloat()\n// aucun interet dans le format \nvar durastop = msg.paths.path_3[0]+1.0+parseFloat(msg.paths.path_6[0].dura);\nvar thrust = \"0\";\nvar dv = \"0\";\nvar isp=\"0\";\nvar drymass = \"0\";\nvar ergolmass = \"0\";\nvar surface =\"0\";\nvar myDate = new Date(msg.paths.path_3[1]);\nDATE = (myDate.toISOString());\n// CORRECTION 050723\n   \n// This isn't necessary and isn't accurate enough \n// CORRECTION\n/*\nvar month = [\"init\",\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nvar mon ;\n\nfor (let i = 0; i < month.length; i++) {\n  if (date.substr(8,3) == month[i]) {\n    mon = i.toString()  \n  }\n} \n\nvar DATE = date.substr(12,4)+\"-0\"+mon+\"-\"+date.substr(5,2)+\"T\"+date.substr(17,8)+\".000\"\n*/\nif(!isNaN(msg.paths.path_1.isp)){isp= msg.paths.path_1.isp}\nif(!isNaN(msg.paths.path_1.thrust)){thrust= msg.paths.path_1.thrust}\nif(!isNaN(msg.paths.path_1.dv)){dv= msg.paths.path_1.dv}\nif(!isNaN(msg.paths.path_1.ergolmass)){ergolmass= msg.paths.path_1.ergolmass}\nif(!isNaN(msg.paths.path_1.drymass)){drymass= msg.paths.path_1.drymass}\nif(!isNaN(msg.paths.path_1.surface)){surface= msg.paths.path_1.surface}\n\nmsg.payload = [\"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thurst, ISP, Ergol mass, Simu duration stop,ManeuverType,Integrator,DV\",DATE , a, e, msg.paths.path_2[2], msg.paths.path_2[3], msg.paths.path_2[5], msg.paths.path_2[6], drymass,surface,thrust,isp, ergolmass, durastop,msg.paths.path_1.maneuverType,msg.paths.path_1.integrator,dv];\n// 03/05/2023 I had to change the colomn to take the Aop from it was coded column 7 i changed for 8 because 7 is a blank space \nreturn msg\n//160523   I changed the acces to the orbital \n//param they are in the payload in an array\n//\"2010-01-01T11:59:26.000\"\n\n// This function was changed on the 240523 because of wrong values on the J ( duration of a day in seconds) \n// And to improve the readability",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 2180,
        "wires": [
            [
                "2a1b2b1844bde01d"
            ]
        ]
    },
    {
        "id": "17f2683976aec724",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle format",
        "func": "var N// Mean motion in rev/day\nvar n // See the expression later \nvar a //semi major axis\nvar acube // acube = a³ \nvar e // excentricity\n\nvar mu = 398600.4418;\n//var mu = 398600;// Earth's standard gravitational parameter\n//var J = 86164; Wrong value changed on the 240523\nvar J = 86400; // A day expressed in seconds \n\nN = msg.paths.path_2[7]; // The mean motion in rev/day\nn = 2*Math.PI*N/J;  // As J/N is the periode T ;n = 2pi/T\nacube = mu/(n*n); // acube = a³ \na=(acube)**(1/3);// We take the cubic root\ne = Number(msg.paths.path_2[4])/10000000; // we get read of the TLE formating of the eccentricity to have the real number \ne = e.toFixed(7);\n\n// Pour l'instant je prefere number ici que parseFloat()\n// aucun interet dans le format \nvar durastop = msg.paths.path_3[0]+1.0+parseFloat(msg.paths.path_6[0].dura);\nvar thrust = \"0\";\nvar dv = \"0\";\nvar isp=\"0\";\nvar drymass = \"0\";\nvar ergolmass = \"0\";\nvar surface =\"0\";\nvar myDate = new Date(msg.paths.path_3[1]);\nDATE = (myDate.toISOString());\n// CORRECTION 050723\n   \n// This isn't necessary and isn't accurate enough \n// CORRECTION\n/*\nvar month = [\"init\",\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nvar mon ;\n\nfor (let i = 0; i < month.length; i++) {\n  if (date.substr(8,3) == month[i]) {\n    mon = i.toString()  \n  }\n} \n\nvar DATE = date.substr(12,4)+\"-0\"+mon+\"-\"+date.substr(5,2)+\"T\"+date.substr(17,8)+\".000\"\n*/\nif(!isNaN(msg.paths.path_1.isp)){isp= msg.paths.path_1.isp}\nif(!isNaN(msg.paths.path_1.thrust)){thrust= msg.paths.path_1.thrust}\nif(!isNaN(msg.paths.path_1.dv)){dv= msg.paths.path_1.dv}\nif(!isNaN(msg.paths.path_1.ergolmass)){ergolmass= msg.paths.path_1.ergolmass}\nif(!isNaN(msg.paths.path_1.drymass)){drymass= msg.paths.path_1.drymass}\nif(!isNaN(msg.paths.path_1.surface)){surface= msg.paths.path_1.surface}\n\nmsg.payload = [\"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thurst, ISP, Ergol mass, Simu duration stop,ManeuverType,Integrator,DV\",DATE , a, e, msg.paths.path_2[2], msg.paths.path_2[3], msg.paths.path_2[5], msg.paths.path_2[6], drymass,surface,thrust,isp, ergolmass, durastop,msg.paths.path_1.maneuverType,msg.paths.path_1.integrator,dv];\n// 03/05/2023 I had to change the colomn to take the Aop from it was coded column 7 i changed for 8 because 7 is a blank space \nreturn msg\n//160523   I changed the acces to the orbital \n//param they are in the payload in an array\n//\"2010-01-01T11:59:26.000\"\n\n// This function was changed on the 240523 because of wrong values on the J ( duration of a day in seconds) \n// And to improve the readability",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 3420,
        "wires": [
            [
                "423f3ef79ccccfd2"
            ]
        ]
    },
    {
        "id": "be41bf27362b96ee",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle format",
        "func": "var N// Mean motion in rev/day\nvar n // See the expression later \nvar a //semi major axis\nvar acube // acube = a³ \nvar e // excentricity\n\nvar mu = 398600.4418;\n//var mu = 398600;// Earth's standard gravitational parameter\n//var J = 86164; Wrong value changed on the 240523\nvar J = 86400; // A day expressed in seconds \n\nN = msg.paths.path_2[7]; // The mean motion in rev/day\nn = 2*Math.PI*N/J;  // As J/N is the periode T ;n = 2pi/T\nacube = mu/(n*n); // acube = a³ \na=(acube)**(1/3);// We take the cubic root\ne = Number(msg.paths.path_2[4])/10000000; // we get read of the TLE formating of the eccentricity to have the real number \ne = e.toFixed(7);\n\n// Pour l'instant je prefere number ici que parseFloat()\n// aucun interet dans le format \nvar durastop = msg.paths.path_3[0]+1.0+parseFloat(msg.paths.path_6[0].dura);\nvar thrust = \"0\";\nvar dv = \"0\";\nvar isp=\"0\";\nvar drymass = \"0\";\nvar ergolmass = \"0\";\nvar surface =\"0\";\nvar myDate = new Date(msg.paths.path_3[1]);\nDATE = (myDate.toISOString());\n// CORRECTION 050723\n   \n// This isn't necessary and isn't accurate enough \n// CORRECTION\n/*\nvar month = [\"init\",\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nvar mon ;\n\nfor (let i = 0; i < month.length; i++) {\n  if (date.substr(8,3) == month[i]) {\n    mon = i.toString()  \n  }\n} \n\nvar DATE = date.substr(12,4)+\"-0\"+mon+\"-\"+date.substr(5,2)+\"T\"+date.substr(17,8)+\".000\"\n*/\nif(!isNaN(msg.paths.path_1.isp)){isp= msg.paths.path_1.isp}\nif(!isNaN(msg.paths.path_1.thrust)){thrust= msg.paths.path_1.thrust}\nif(!isNaN(msg.paths.path_1.dv)){dv= msg.paths.path_1.dv}\nif(!isNaN(msg.paths.path_1.ergolmass)){ergolmass= msg.paths.path_1.ergolmass}\nif(!isNaN(msg.paths.path_1.drymass)){drymass= msg.paths.path_1.drymass}\nif(!isNaN(msg.paths.path_1.surface)){surface= msg.paths.path_1.surface}\n\nmsg.payload = [\"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thurst, ISP, Ergol mass, Simu duration stop,ManeuverType,Integrator,DV\",DATE , a, e, msg.paths.path_2[2], msg.paths.path_2[3], msg.paths.path_2[5], msg.paths.path_2[6], drymass,surface,thrust,isp, ergolmass, durastop,msg.paths.path_1.maneuverType,msg.paths.path_1.integrator,dv];\n// 03/05/2023 I had to change the colomn to take the Aop from it was coded column 7 i changed for 8 because 7 is a blank space \nreturn msg\n//160523   I changed the acces to the orbital \n//param they are in the payload in an array\n//\"2010-01-01T11:59:26.000\"\n\n// This function was changed on the 240523 because of wrong values on the J ( duration of a day in seconds) \n// And to improve the readability",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 4200,
        "wires": [
            [
                "1a74ca92ca6e0109"
            ]
        ]
    },
    {
        "id": "be9bc5c2478dcfe6",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "VEHICLE B2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 2100,
        "wires": []
    },
    {
        "id": "25e49848dbc8cbc2",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "MM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3760,
        "y": 3900,
        "wires": []
    },
    {
        "id": "759adae243a0f237",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Vehicule",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 4260,
        "wires": []
    },
    {
        "id": "7f0aaec764f58174",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "7465a3d35f5541d7",
        "name": "RED2 Vehicule template",
        "order": 9,
        "width": "10",
        "height": "4",
        "format": "<style>\n  /* CSS style for labels */\n  #select_20 .md-select-value span,\n  #select_20 .md-text,\n  #select_25 .md-select-value span,\n  #select_25 .md-text {\n    color: #ffffff !important;\n  }\n\n  /* Adjust the layout to fill the widget space */\n  .form-container {\n      height:100%;\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .column {\n    flex: 1;\n   height:100%;\n  }\n  .md-input-container {\n    width: 90%;\n    margin: 10px 0px; /* Adjust as needed */\n\n  }\n\n  /* Vertically align the content within the input containers */\n   .md-input {\n       height:100%;\n    margin-top:10px 0px; /* Adjust as needed */\n  }\n\n</style>\n\n<form id=\"myForm\" class=\"nr-dashboard-theme md-content nr-dashboard-form\">\n  <div class=\"form-container\">\n    <div class=\"column\">\n<md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"maneuver\">Maneuver</label>\n    <md-select ng-model=\"msg.payload.maneuverType\" id=\"select_20\" name=\"maneuverType\">\n      <md-option value=\"Impulse\">Impulse</md-option>\n      <md-option value=\"Continuous\">Continuous</md-option>\n    </md-select>\n</md-input-container>\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"integrator\">Integrator</label>\n    <md-select ng-model=\"msg.payload.integrator\" style=\"color: #ffffff !important;\" id=\"select_25\" name=\"integrator\">\n      <md-option value=\"RK4\">RungeKutta4</md-option>\n      <md-option value=\"DP\">DormandPrince</md-option>\n    </md-select>\n  </md-input-container>\n  <md-input-container ng-if=\"msg.payload.maneuverType === 'Impulse'\" class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"dv\">DV (m/s)</label>\n    <input type=\"text\" id=\"dv\" name=\"dv\" ng-model=\"msg.payload.dv\">\n  </md-input-container>\n  <md-input-container ng-if=\"msg.payload.maneuverType === 'Continuous'\" class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"thrust\">Thrust</label>\n    <input type=\"text\" id=\"thrust\" name=\"thrust\" ng-model=\"msg.payload.thrust\">\n  </md-input-container>\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"ergolmass\">Ergol Mass</label>\n    <input type=\"text\" id=\"ergolmass\" name=\"ergolmass\" ng-model=\"msg.payload.ergolmass\">\n  </md-input-container>\n</div>\n\n    <div class=\"column\">\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"drymass\">Dry Mass</label>\n    <input type=\"text\" id=\"drymass\" name=\"drymass\" ng-model=\"msg.payload.drymass\">\n  </md-input-container>\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"isp\">Isp (s)</label>\n    <input type=\"text\" id=\"isp\" name=\"isp\" ng-model=\"msg.payload.isp\">\n  </md-input-container>\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"surface\">Surface m²</label>\n    <input type=\"text\" id=\"surface\" name=\"surface\" ng-model=\"msg.payload.surface\">\n  </md-input-container>\n  </div>\n  </div>\n</form>\n<button type=\"submit\" id=\"submitButtonr2\" style=\"display: flex; justify-content: center; align-items: center;\" class=\"md-raised md-button md-ink-ripple\" ng-click=\"send({payload: msg.payload})\">Submit</button>\n<br>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 330,
        "y": 4200,
        "wires": [
            [
                "759adae243a0f237",
                "03de9fc31e91be81",
                "54d0563596a29463"
            ]
        ]
    },
    {
        "id": "8686f97595b1254e",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "c8a7959a4b0f55f9",
        "name": "RED1 Vehicule template",
        "order": 9,
        "width": "10",
        "height": "4",
        "format": "<style>\n\n\n  /* Adjust the layout to fill the widget space */\n  .form-container {\n      height:100%;\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .column {\n    flex: 1;\n   height:100%;\n  }\n  .md-input-container {\n    width: 90%;\n    margin: 10px 0px; /* Adjust as needed */\n\n  }\n\n  /* Vertically align the content within the input containers */\n   .md-input {\n       height:100%;\n    margin-top:10px 0px; /* Adjust as needed */\n  }\n\n</style>\n<form id=\"myForm\" class=\"nr-dashboard-theme md-content nr-dashboard-form\">\n  <div class=\"form-container\">\n    <div class=\"column\">\n<md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"maneuver\">Maneuver</label>\n    <md-select ng-model=\"msg.payload.maneuverType\" id=\"select_20\" name=\"maneuverType\">\n      <md-option value=\"Impulse\">Impulse</md-option>\n      <md-option value=\"Continuous\">Continuous</md-option>\n    </md-select>\n</md-input-container>\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"integrator\">Integrator</label>\n    <md-select ng-model=\"msg.payload.integrator\" style=\"color: #ffffff !important;\" id=\"select_25\" name=\"integrator\">\n      <md-option value=\"RK4\">RungeKutta4</md-option>\n      <md-option value=\"DP\">DormandPrince</md-option>\n    </md-select>\n  </md-input-container>\n  <md-input-container ng-if=\"msg.payload.maneuverType === 'Impulse'\" class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"dv\">DV (m/s)</label>\n    <input type=\"text\" id=\"dv\" name=\"dv\" ng-model=\"msg.payload.dv\">\n  </md-input-container>\n  <md-input-container ng-if=\"msg.payload.maneuverType === 'Continuous'\" class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"thrust\">Thrust</label>\n    <input type=\"text\" id=\"thrust\" name=\"thrust\" ng-model=\"msg.payload.thrust\">\n  </md-input-container>\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"ergolmass\">Ergol Mass</label>\n    <input type=\"text\" id=\"ergolmass\" name=\"ergolmass\" ng-model=\"msg.payload.ergolmass\">\n  </md-input-container>\n</div>\n\n    <div class=\"column\">\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"drymass\">Dry Mass</label>\n    <input type=\"text\" id=\"drymass\" name=\"drymass\" ng-model=\"msg.payload.drymass\">\n  </md-input-container>\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"isp\">Isp (s)</label>\n    <input type=\"text\" id=\"isp\" name=\"isp\" ng-model=\"msg.payload.isp\">\n  </md-input-container>\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"surface\">Surface m²</label>\n    <input type=\"text\" id=\"surface\" name=\"surface\" ng-model=\"msg.payload.surface\">\n  </md-input-container>\n  </div>\n  </div>\n</form>\n<button type=\"submit\" id=\"submitButtonr2\" style=\"display: flex; justify-content: center; align-items: center;\" class=\"md-raised md-button md-ink-ripple\" ng-click=\"send({payload: msg.payload})\">Submit</button>\n<br>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 330,
        "y": 3400,
        "wires": [
            [
                "4de936e7f70f0c3a",
                "793275904a730c22"
            ]
        ]
    },
    {
        "id": "a8bf791f2b35f774",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "1756cdc52869c611",
        "name": "BLUE2 Vehicule template",
        "order": 9,
        "width": "10",
        "height": "4",
        "format": "<style>\n\n\n  /* Adjust the layout to fill the widget space */\n  .form-container {\n      height:100%;\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .column {\n    flex: 1;\n   height:100%;\n  }\n  .md-input-container {\n    width: 90%;\n    margin: 10px 0px; /* Adjust as needed */\n\n  }\n\n  /* Vertically align the content within the input containers */\n   .md-input {\n       height:100%;\n    margin-top:10px 0px; /* Adjust as needed */\n  }\n\n</style>\n<form id=\"myForm\" class=\"nr-dashboard-theme md-content nr-dashboard-form\">\n  <div class=\"form-container\">\n    <div class=\"column\">\n<md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"maneuver\">Maneuver</label>\n    <md-select ng-model=\"msg.payload.maneuverType\" id=\"select_20\" name=\"maneuverType\">\n      <md-option value=\"Impulse\">Impulse</md-option>\n      <md-option value=\"Continuous\">Continuous</md-option>\n    </md-select>\n</md-input-container>\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"integrator\">Integrator</label>\n    <md-select ng-model=\"msg.payload.integrator\" style=\"color: #ffffff !important;\" id=\"select_25\" name=\"integrator\">\n      <md-option value=\"RK4\">RungeKutta4</md-option>\n      <md-option value=\"DP\">DormandPrince</md-option>\n    </md-select>\n  </md-input-container>\n  <md-input-container ng-if=\"msg.payload.maneuverType === 'Impulse'\" class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"dv\">DV (m/s)</label>\n    <input type=\"text\" id=\"dv\" name=\"dv\" ng-model=\"msg.payload.dv\">\n  </md-input-container>\n  <md-input-container ng-if=\"msg.payload.maneuverType === 'Continuous'\" class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"thrust\">Thrust</label>\n    <input type=\"text\" id=\"thrust\" name=\"thrust\" ng-model=\"msg.payload.thrust\">\n  </md-input-container>\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"ergolmass\">Ergol Mass</label>\n    <input type=\"text\" id=\"ergolmass\" name=\"ergolmass\" ng-model=\"msg.payload.ergolmass\">\n  </md-input-container>\n</div>\n\n    <div class=\"column\">\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"drymass\">Dry Mass</label>\n    <input type=\"text\" id=\"drymass\" name=\"drymass\" ng-model=\"msg.payload.drymass\">\n  </md-input-container>\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"isp\">Isp (s)</label>\n    <input type=\"text\" id=\"isp\" name=\"isp\" ng-model=\"msg.payload.isp\">\n  </md-input-container>\n\n  <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n    <label for=\"surface\">Surface m²</label>\n    <input type=\"text\" id=\"surface\" name=\"surface\" ng-model=\"msg.payload.surface\">\n  </md-input-container>\n  </div>\n  </div>\n</form>\n<button type=\"submit\" id=\"submitButtonb1\" style=\"display: flex; justify-content: center; align-items: center;\" class=\"md-raised md-button md-ink-ripple\" ng-click=\"send({payload: msg.payload})\">Submit</button>\n<br>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 110,
        "y": 2100,
        "wires": [
            [
                "be9bc5c2478dcfe6",
                "7c62a45953c44b38",
                "ad95d0988ebee021"
            ]
        ]
    },
    {
        "id": "c9e13cf4f5d006f3",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\n\nvar n = msg.payload.length\n\n //From the GS\ngs.ergolmass = parseFloat(msg.payload[n-12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n \ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4140,
        "y": 2140,
        "wires": [
            [
                "260d13ce0189becb"
            ]
        ]
    },
    {
        "id": "b13c6bd099097fa3",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\n\nvar n = msg.payload.length\n\n //From the GS\ngs.ergolmass = parseFloat(msg.payload[n-12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n \ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4020,
        "y": 3300,
        "wires": [
            [
                "c2cbba76a660dc85"
            ]
        ]
    },
    {
        "id": "6ac354f916fa8aa9",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\n\nvar n = msg.payload.length\n\n //From the GS\ngs.ergolmass = parseFloat(msg.payload[n-12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n \ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3960,
        "y": 4120,
        "wires": [
            [
                "16f6b804171434f5"
            ]
        ]
    },
    {
        "id": "d73eea1271e54f63",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4350,
        "y": 2260,
        "wires": [
            [
                "06f54ccab4828945"
            ]
        ]
    },
    {
        "id": "ea9022819d8cecd1",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4270,
        "y": 3420,
        "wires": [
            [
                "f021f42fee83dfde"
            ]
        ]
    },
    {
        "id": "b0384d8e0e48b498",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4270,
        "y": 4360,
        "wires": [
            [
                "6c1cc1e20df7de80"
            ]
        ]
    },
    {
        "id": "609a932ba1f54397",
        "type": "ui_form",
        "z": "c852882eb324b626",
        "name": "",
        "label": "Ergol Calculator Form",
        "group": "26db63df37f9f62b",
        "order": 5,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Satellite Mass (kg)",
                "value": "Mass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP (sec)",
                "value": "ISP",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "Deltav",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Mass": "",
            "ISP": "",
            "Deltav": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "0b60e689d144c7a3"
            ]
        ]
    },
    {
        "id": "72790777b9d2d817",
        "type": "ui_text",
        "z": "c852882eb324b626",
        "group": "26db63df37f9f62b",
        "order": 6,
        "width": 10,
        "height": 1,
        "name": "Ergol Mass (kg)",
        "label": "Ergol Mass (kg)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 700,
        "y": 200,
        "wires": []
    },
    {
        "id": "0b60e689d144c7a3",
        "type": "function",
        "z": "c852882eb324b626",
        "name": "Tsiolkowski-formula",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.mass = msg.payload.Mass\ngs.isp = msg.payload.ISP\ngs.deltav = msg.payload.Deltav\n\n//Default\n//gs.status = 1\n//tab.push(gs)\n\n//msg.payload = tab\nmsg.payload = Math.round(gs.mass*(1-Math.exp(-gs.deltav/(9.81*gs.isp))))\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 120,
        "wires": [
            [
                "14efff9800026731",
                "72790777b9d2d817"
            ]
        ]
    },
    {
        "id": "14efff9800026731",
        "type": "debug",
        "z": "c852882eb324b626",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "b4091322e8f418b9",
        "type": "ui_form",
        "z": "c852882eb324b626",
        "name": "",
        "label": "Ergol Calculator Form",
        "group": "831fc0fb10210de5",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Satellite Mass (kg)",
                "value": "Mass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP (sec)",
                "value": "ISP",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "Deltav",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Mass": "",
            "ISP": "",
            "Deltav": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 200,
        "y": 320,
        "wires": [
            [
                "383a984624e38386"
            ]
        ]
    },
    {
        "id": "43e8265357592564",
        "type": "ui_text",
        "z": "c852882eb324b626",
        "group": "831fc0fb10210de5",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Ergol Mass (kg)",
        "label": "Ergol Mass (kg)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 700,
        "y": 400,
        "wires": []
    },
    {
        "id": "383a984624e38386",
        "type": "function",
        "z": "c852882eb324b626",
        "name": "Tsiolkowski-formula",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.mass = msg.payload.Mass\ngs.isp = msg.payload.ISP\ngs.deltav = msg.payload.Deltav\n\n//Default\n//gs.status = 1\n//tab.push(gs)\n\n//msg.payload = tab\nmsg.payload = Math.round(gs.mass*(1-Math.exp(-gs.deltav/(9.81*gs.isp))))\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 320,
        "wires": [
            [
                "f01c6ae21925a42c",
                "43e8265357592564"
            ]
        ]
    },
    {
        "id": "f01c6ae21925a42c",
        "type": "debug",
        "z": "c852882eb324b626",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 320,
        "wires": []
    },
    {
        "id": "5b1d31999c2aa0d5",
        "type": "ui_form",
        "z": "c852882eb324b626",
        "name": "",
        "label": "Ergol Calculator Form",
        "group": "c3df4221bc39e72d",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Satellite Mass (kg)",
                "value": "Mass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP (sec)",
                "value": "ISP",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "Deltav",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Mass": "",
            "ISP": "",
            "Deltav": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 220,
        "y": 520,
        "wires": [
            [
                "6e2a7e698f08da22"
            ]
        ]
    },
    {
        "id": "bd0e61a9bef363ca",
        "type": "ui_text",
        "z": "c852882eb324b626",
        "group": "c3df4221bc39e72d",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Ergol Mass (kg)",
        "label": "Ergol Mass (kg)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 720,
        "y": 600,
        "wires": []
    },
    {
        "id": "6e2a7e698f08da22",
        "type": "function",
        "z": "c852882eb324b626",
        "name": "Tsiolkowski-formula",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.mass = msg.payload.Mass\ngs.isp = msg.payload.ISP\ngs.deltav = msg.payload.Deltav\n\n//Default\n//gs.status = 1\n//tab.push(gs)\n\n//msg.payload = tab\nmsg.payload = Math.round(gs.mass*(1-Math.exp(-gs.deltav/(9.81*gs.isp))))\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 520,
        "wires": [
            [
                "7c492fe0f565393d",
                "bd0e61a9bef363ca"
            ]
        ]
    },
    {
        "id": "7c492fe0f565393d",
        "type": "debug",
        "z": "c852882eb324b626",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 520,
        "wires": []
    },
    {
        "id": "56625b28ea767e1b",
        "type": "ui_form",
        "z": "c852882eb324b626",
        "name": "",
        "label": "Ergol Calculator Form",
        "group": "1d33537b5ace1e8e",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Satellite Mass (kg)",
                "value": "Mass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP (sec)",
                "value": "ISP",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "Deltav",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Mass": "",
            "ISP": "",
            "Deltav": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 240,
        "y": 680,
        "wires": [
            [
                "cb6102b2a24f407f"
            ]
        ]
    },
    {
        "id": "a13388a637ba3b93",
        "type": "ui_text",
        "z": "c852882eb324b626",
        "group": "1d33537b5ace1e8e",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Ergol Mass (kg)",
        "label": "Ergol Mass (kg)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 740,
        "y": 760,
        "wires": []
    },
    {
        "id": "cb6102b2a24f407f",
        "type": "function",
        "z": "c852882eb324b626",
        "name": "Tsiolkowski-formula",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.mass = msg.payload.Mass\ngs.isp = msg.payload.ISP\ngs.deltav = msg.payload.Deltav\n\n//Default\n//gs.status = 1\n//tab.push(gs)\n\n//msg.payload = tab\nmsg.payload = Math.round(gs.mass*(1-Math.exp(-gs.deltav/(9.81*gs.isp))))\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 680,
        "wires": [
            [
                "54953db0be8d9f05",
                "a13388a637ba3b93"
            ]
        ]
    },
    {
        "id": "54953db0be8d9f05",
        "type": "debug",
        "z": "c852882eb324b626",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 680,
        "wires": []
    },
    {
        "id": "c6c4fe3d5779159b",
        "type": "inject",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "85921a37090da47f"
            ]
        ]
    },
    {
        "id": "85921a37090da47f",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "Loop to send feature number",
        "func": "liste = [0,1,2,3,4,5,6,7,8,9]\nmsg.options = liste\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 120,
        "wires": [
            [
                "1db9414474f6583d",
                "b296d82955a17b06"
            ]
        ]
    },
    {
        "id": "1db9414474f6583d",
        "type": "ui_dropdown",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "label": "SENTINEL Latest Feature Selection",
        "tooltip": "Choose a feature in the list",
        "place": "Select option",
        "group": "cd20a742773dd128",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 710,
        "y": 120,
        "wires": [
            [
                "92d9ca1e710fe674",
                "62c9fb3308641b17"
            ]
        ]
    },
    {
        "id": "92d9ca1e710fe674",
        "type": "http request",
        "z": "9fc2d0daadf97d1e",
        "name": "Sentinel2 request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://planetarycomputer.microsoft.com/api/stac/v1/collections/sentinel-2-l2a/items",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 730,
        "y": 180,
        "wires": [
            [
                "ad5bfb4e8bb784a2"
            ]
        ]
    },
    {
        "id": "ad5bfb4e8bb784a2",
        "type": "switch",
        "z": "9fc2d0daadf97d1e",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 970,
        "y": 180,
        "wires": [
            [
                "26eab9600fbd4830"
            ],
            []
        ]
    },
    {
        "id": "26eab9600fbd4830",
        "type": "switch",
        "z": "9fc2d0daadf97d1e",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1220,
        "y": 180,
        "wires": [
            [
                "e0690611cda2e2f5"
            ],
            []
        ]
    },
    {
        "id": "e0690611cda2e2f5",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "content_function",
        "func": "   return{\n topic:\"Sentinel content\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 260,
        "wires": [
            [
                "7cbf4df91dd53fdb"
            ]
        ]
    },
    {
        "id": "2fc453ae3caf7bed",
        "type": "debug",
        "z": "9fc2d0daadf97d1e",
        "name": "sentinel check",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1740,
        "y": 440,
        "wires": []
    },
    {
        "id": "7cbf4df91dd53fdb",
        "type": "json",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1230,
        "y": 260,
        "wires": [
            [
                "74ba1ee8226fc5d0"
            ]
        ]
    },
    {
        "id": "74ba1ee8226fc5d0",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "loop1",
        "func": "\n//msg.payload.packets.forEach(item => {\n//    if(item.satellite = \"Norbi\"){\n//        return item\n//    }\n\n//})\n\nvar json_data = msg.payload;\nvar result = [];\n\nfor(var i in json_data)\n    result.push([i, json_data [i]]);\n\nmsg.payload = result;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 260,
        "wires": [
            [
                "bfa58dc98c5ac55d"
            ]
        ]
    },
    {
        "id": "bfa58dc98c5ac55d",
        "type": "change",
        "z": "9fc2d0daadf97d1e",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 260,
        "wires": [
            [
                "300d89bfa37ca69d"
            ]
        ]
    },
    {
        "id": "62c9fb3308641b17",
        "type": "change",
        "z": "9fc2d0daadf97d1e",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 120,
        "wires": [
            [
                "300d89bfa37ca69d"
            ]
        ]
    },
    {
        "id": "300d89bfa37ca69d",
        "type": "join-wait",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "paths": "[ \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1760,
        "y": 200,
        "wires": [
            [
                "53db472fe3180ecb",
                "3ceddb50f8d0c106"
            ],
            []
        ]
    },
    {
        "id": "53db472fe3180ecb",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "loop2",
        "func": "//msg.payload.forEach(item => {\n//msg.payload = item[10];\n//    return msg;\n    //if(item.satellite == \"Norbi\"){\n    //    msg.payload = item.satellite;\n    //    return msg;\n    //}\n//})\n\nvar arraylen = msg.payload.length;\nvar result = [];\n\n//result.push(msg.paths.path_1[1][1][msg.paths.path_2].links[5].href);\nresult.push(msg.paths.path_1[1][1][msg.paths.path_2].assets.rendered_preview.href);\nresult.push(msg.paths.path_1[1][1][msg.paths.path_2].properties);\nresult.push(msg.paths.path_1[1][1][msg.paths.path_2].bbox);\n\n\nmsg.payload = result;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 180,
        "wires": [
            [
                "f8d3528c43b514ec",
                "951ebbf5c01b1ef4",
                "a0faf6e836426323"
            ]
        ]
    },
    {
        "id": "f8d3528c43b514ec",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "link",
        "func": "var len = msg.payload.length;\nmsg.payload = msg.payload[0];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2110,
        "y": 180,
        "wires": [
            [
                "39d92325.5b31ec"
            ]
        ]
    },
    {
        "id": "951ebbf5c01b1ef4",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "properties",
        "func": "var len = msg.payload.length;\nmsg.payload = msg.payload[1];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 120,
        "wires": [
            [
                "533612a2a0b24577",
                "dd991964dfce9fe3",
                "9aa8061fc1fff3b4",
                "b2ce7b2bfa5f745c",
                "f5a7daf247383343",
                "92a06a73b70a0c70",
                "d115cfa45281c9a1",
                "937058a78cd6e59e",
                "bafee32a0c709c1c",
                "4c40adb4fbdeceba",
                "7c12138ebcf90b52",
                "4bb10b4268515119"
            ]
        ]
    },
    {
        "id": "39d92325.5b31ec",
        "type": "jimp-image",
        "z": "9fc2d0daadf97d1e",
        "name": "Imagery from Sentinel",
        "data": "payload",
        "dataType": "msg",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 2320,
        "y": 600,
        "wires": [
            [
                "2d9d272a.787cb8",
                "a5ecda5c.164c28",
                "7f9bc166.833c3"
            ]
        ]
    },
    {
        "id": "2d9d272a.787cb8",
        "type": "image viewer",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "width": "200",
        "data": "payload",
        "dataType": "msg",
        "active": false,
        "x": 2590,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "a5ecda5c.164c28",
        "type": "debug",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 2560,
        "y": 540,
        "wires": []
    },
    {
        "id": "d615e8d1.844438",
        "type": "ui_template",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "name": "ui template",
        "order": 2,
        "width": "20",
        "height": "18",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 2770,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "7f9bc166.833c3",
        "type": "template",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"2048px\" height=\"2048px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 2600,
        "y": 580,
        "wires": [
            [
                "d615e8d1.844438"
            ]
        ]
    },
    {
        "id": "bb0d7cc2469a13ab",
        "type": "ui_button",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "group": "cd20a742773dd128",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Load Latest Imagery",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "85921a37090da47f"
            ]
        ]
    },
    {
        "id": "0dc630f9d77cac0a",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 7,
        "width": 3,
        "height": 3,
        "name": "Cloud Cover",
        "icon": "fa-cloud",
        "label": "Cloud Cover",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 2550,
        "y": 40,
        "wires": []
    },
    {
        "id": "533612a2a0b24577",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "cloud-cover",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"eo:cloud_cover\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2390,
        "y": 40,
        "wires": [
            [
                "0dc630f9d77cac0a"
            ]
        ]
    },
    {
        "id": "dd991964dfce9fe3",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "Date to Dashboard",
        "func": "msg.payload = msg.payload[\"s2:generation_time\"]\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2410,
        "y": 160,
        "wires": [
            [
                "20319a8bf935b2cd"
            ]
        ]
    },
    {
        "id": "20319a8bf935b2cd",
        "type": "ui_text",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 6,
        "width": "5",
        "height": "1",
        "name": "Date",
        "label": "Imagery Date",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2610,
        "y": 160,
        "wires": []
    },
    {
        "id": "9aa8061fc1fff3b4",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "Orbit State",
        "func": "msg.payload = msg.payload[\"sat:orbit_state\"]\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2390,
        "y": 200,
        "wires": [
            [
                "79bb576ac365d16c"
            ]
        ]
    },
    {
        "id": "79bb576ac365d16c",
        "type": "ui_text",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 5,
        "width": "5",
        "height": "1",
        "name": "State",
        "label": "Orbit State",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2610,
        "y": 200,
        "wires": []
    },
    {
        "id": "b2ce7b2bfa5f745c",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "water-cover",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:water_percentage\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2390,
        "y": 80,
        "wires": [
            [
                "0fc128f84ec055fd"
            ]
        ]
    },
    {
        "id": "0fc128f84ec055fd",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 8,
        "width": 3,
        "height": 3,
        "name": "Water %",
        "icon": "fa-tint",
        "label": "Water %",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 2540,
        "y": 80,
        "wires": []
    },
    {
        "id": "f5a7daf247383343",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "solar-zenith",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:mean_solar_zenith\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2390,
        "y": 240,
        "wires": [
            [
                "8c8a061a5409eca2"
            ]
        ]
    },
    {
        "id": "8c8a061a5409eca2",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 10,
        "width": 3,
        "height": 3,
        "name": "Mean Solar Zenith",
        "icon": "fa-sun-o ",
        "label": "Mean Solar Zenith",
        "unit": "°",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 90,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 2570,
        "y": 240,
        "wires": []
    },
    {
        "id": "92a06a73b70a0c70",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "solar-azimuth",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:mean_solar_azimuth\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2400,
        "y": 280,
        "wires": [
            [
                "3e7f3a51619eaa0c"
            ]
        ]
    },
    {
        "id": "3e7f3a51619eaa0c",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 11,
        "width": 3,
        "height": 3,
        "name": "Mean Solar Azimuth",
        "icon": "fa-sun-o ",
        "label": "Mean Solar Azimuth",
        "unit": "°",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 360,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 2600,
        "y": 280,
        "wires": []
    },
    {
        "id": "d115cfa45281c9a1",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "Platform",
        "func": "msg.payload = msg.payload[\"platform\"]\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 120,
        "wires": [
            [
                "05de6ff8d4bc0ad7"
            ]
        ]
    },
    {
        "id": "05de6ff8d4bc0ad7",
        "type": "ui_text",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 4,
        "width": "5",
        "height": "1",
        "name": "Platform",
        "label": "Platform",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2620,
        "y": 120,
        "wires": []
    },
    {
        "id": "1b24ad2f.198453",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "func": "// create random position\n\nmsg.payload={\n    lat:msg.payload[1], \n    lon:msg.payload[0], \n    name:\"Imagery\", \n    icon:\"satellite\", \n    color:\"#000\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2360,
        "y": 800,
        "wires": [
            [
                "de5c4044.d4e0f"
            ]
        ]
    },
    {
        "id": "223f301c.54ea9",
        "type": "comment",
        "z": "9fc2d0daadf97d1e",
        "name": "How to embed Map in Dashboard",
        "info": "This example shows how to embed the Worldmap \nwithin the `node-red-dashboard`\n\nThe  flow creates a dashboard button that \ngenerates a randon position, with the required \nicon, and passes that to the worldmap. The\nmap is configured to automatically pan to the\nposition of any point that arrives.\n",
        "x": 2460,
        "y": 720,
        "wires": []
    },
    {
        "id": "de5c4044.d4e0f",
        "type": "worldmap-tracks",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "depth": "5",
        "layer": "combined",
        "smooth": false,
        "x": 2500,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "a0faf6e836426323",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "bbox",
        "func": "var len = msg.payload.length;\nmsg.payload = msg.payload[2];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 800,
        "wires": [
            [
                "1b24ad2f.198453"
            ]
        ]
    },
    {
        "id": "749dd3a8d99522fd",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "func": "// create random position\nvar lat = 51 + Math.random() * 0.2;\nvar lon = -1.45 + Math.random() * 0.2;\nmsg.payload={\n    lat:lat, \n    lon:lon, \n    name:\"Imagery\", \n    icon:\"satellite\", \n    color:\"#000\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "937058a78cd6e59e",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "snow_ice",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:snow_ice_percentage\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 320,
        "wires": [
            [
                "6e9cd2b586d9b406"
            ]
        ]
    },
    {
        "id": "6e9cd2b586d9b406",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 9,
        "width": 3,
        "height": 3,
        "name": "Snow-Ice %",
        "icon": "fa-snowflake-o ",
        "label": "Snow-Ice %",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 2550,
        "y": 320,
        "wires": []
    },
    {
        "id": "bafee32a0c709c1c",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "vegetation",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:vegetation_percentage\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2390,
        "y": 360,
        "wires": [
            [
                "f8cf8fbc33448c79"
            ]
        ]
    },
    {
        "id": "f8cf8fbc33448c79",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 9,
        "width": 3,
        "height": 3,
        "name": "vegetation %",
        "icon": "fa-pagelines",
        "label": "Vegetation %",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 2550,
        "y": 360,
        "wires": []
    },
    {
        "id": "4c40adb4fbdeceba",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "cirrus-cover",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:thin_cirrus_percentage\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2390,
        "y": 400,
        "wires": [
            [
                "6d03f75fba191a47"
            ]
        ]
    },
    {
        "id": "6d03f75fba191a47",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 7,
        "width": 3,
        "height": 3,
        "name": "Cirrus Cover",
        "icon": "fa-cloud",
        "label": "Cirrus Cover",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 2550,
        "y": 400,
        "wires": []
    },
    {
        "id": "7c12138ebcf90b52",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "high-proba-clouds",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:high_proba_clouds_percentage\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2410,
        "y": 440,
        "wires": [
            [
                "acb60b46880fb38c"
            ]
        ]
    },
    {
        "id": "acb60b46880fb38c",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 7,
        "width": 3,
        "height": 3,
        "name": "High proba clouds",
        "icon": "fa-cloud",
        "label": "High proba clouds",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 2630,
        "y": 440,
        "wires": []
    },
    {
        "id": "4bb10b4268515119",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "medium-proba-clouds",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:medium_proba_clouds_percentage\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 480,
        "wires": [
            [
                "aed1dac097537c5e"
            ]
        ]
    },
    {
        "id": "aed1dac097537c5e",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 7,
        "width": 3,
        "height": 3,
        "name": "Medium proba clouds",
        "icon": "fa-cloud",
        "label": "Medium proba clouds",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 2640,
        "y": 480,
        "wires": []
    },
    {
        "id": "eb72cad4260f1314",
        "type": "http request",
        "z": "9fc2d0daadf97d1e",
        "name": "Sentinel2 request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 930,
        "y": 640,
        "wires": [
            [
                "3738920da25037c0"
            ]
        ]
    },
    {
        "id": "d61bdfb240951c99",
        "type": "change",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 640,
        "wires": [
            [
                "eb72cad4260f1314"
            ]
        ]
    },
    {
        "id": "3ceddb50f8d0c106",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "content_function",
        "func": "   return{\n payload:msg.payload[2][1][4][\"href\"],\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 380,
        "wires": [
            [
                "2fc453ae3caf7bed"
            ]
        ]
    },
    {
        "id": "b296d82955a17b06",
        "type": "ui_dropdown",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "label": "SENTINEL Previous Feature Selection",
        "tooltip": "Choose a feature in the list",
        "place": "Select option",
        "group": "cd20a742773dd128",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 560,
        "wires": [
            [
                "914b80ccabf8c867",
                "d61bdfb240951c99"
            ]
        ]
    },
    {
        "id": "3738920da25037c0",
        "type": "switch",
        "z": "9fc2d0daadf97d1e",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 640,
        "wires": [
            [
                "72506c923c6b84f9"
            ],
            []
        ]
    },
    {
        "id": "72506c923c6b84f9",
        "type": "switch",
        "z": "9fc2d0daadf97d1e",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1380,
        "y": 640,
        "wires": [
            [
                "75116bbf56ced9de"
            ],
            []
        ]
    },
    {
        "id": "75116bbf56ced9de",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "content_function",
        "func": "   return{\n topic:\"Sentinel content\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 720,
        "wires": [
            [
                "7eb01e853a6ed8b6"
            ]
        ]
    },
    {
        "id": "7eb01e853a6ed8b6",
        "type": "json",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1390,
        "y": 720,
        "wires": [
            [
                "a82d382221c6268c"
            ]
        ]
    },
    {
        "id": "a82d382221c6268c",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "loop1",
        "func": "\n//msg.payload.packets.forEach(item => {\n//    if(item.satellite = \"Norbi\"){\n//        return item\n//    }\n\n//})\n\nvar json_data = msg.payload;\nvar result = [];\n\nfor(var i in json_data)\n    result.push([i, json_data [i]]);\n\nmsg.payload = result;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 720,
        "wires": [
            [
                "959743bab3d99b11"
            ]
        ]
    },
    {
        "id": "959743bab3d99b11",
        "type": "change",
        "z": "9fc2d0daadf97d1e",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 760,
        "wires": [
            [
                "702224a1435c6d5d"
            ]
        ]
    },
    {
        "id": "702224a1435c6d5d",
        "type": "join-wait",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "paths": "[ \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1860,
        "y": 760,
        "wires": [
            [
                "53db472fe3180ecb"
            ],
            []
        ]
    },
    {
        "id": "914b80ccabf8c867",
        "type": "change",
        "z": "9fc2d0daadf97d1e",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 560,
        "wires": [
            [
                "702224a1435c6d5d"
            ]
        ]
    },
    {
        "id": "c9f0b2640e6ecdb7",
        "type": "comment",
        "z": "9fc2d0daadf97d1e",
        "name": "HERE WAS A PERSIST SENTINEL LINK",
        "info": "",
        "x": 1820,
        "y": 380,
        "wires": []
    },
    {
        "id": "f74613a7c5bb39d4",
        "type": "comment",
        "z": "9fc2d0daadf97d1e",
        "name": "HERE WAS A PERSIST SENTINEL LINK",
        "info": "",
        "x": 580,
        "y": 600,
        "wires": []
    },
    {
        "id": "79b07c9deaca4821",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "name": "",
        "label": "Mean movement Form",
        "group": "26db63df37f9f62b",
        "order": 1,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "N (orbit/day)",
                "value": "mean",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "mean": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "726fe71bde08e4c8"
            ]
        ]
    },
    {
        "id": "8bb75c59299e6da3",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "group": "26db63df37f9f62b",
        "order": 2,
        "width": 10,
        "height": 1,
        "name": "SMA (km)",
        "label": "Semi major axis (km)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 620,
        "y": 160,
        "wires": []
    },
    {
        "id": "726fe71bde08e4c8",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "name": "SMA Computation",
        "func": " //From the GS\n\nvar mean = msg.payload.mean ;// The mean motion\nvar  secondesPerDay = 86164.0905; // How many seconds in a day\nvar t ;// Periode in seconds\nvar mu= 398600 ;// standard gravitational parameter of Earth \nt = secondesPerDay/mean;\n\nmsg.payload = Math.round((t*t*mu/(4*Math.PI*Math.PI))**(1/3));\nreturn msg;\n// Function was changer on the 240523 to make it more readable ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 120,
        "wires": [
            [
                "27ae954d12838df7",
                "8bb75c59299e6da3"
            ]
        ]
    },
    {
        "id": "27ae954d12838df7",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 120,
        "wires": []
    },
    {
        "id": "08430eee228f26d7",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "name": "",
        "label": "Semi major axis Form",
        "group": "26db63df37f9f62b",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Semi major axis (km)",
                "value": "SMA",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "SMA": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 180,
        "y": 200,
        "wires": [
            [
                "83174910077b059e"
            ]
        ]
    },
    {
        "id": "47cb2f9785ebd863",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "group": "26db63df37f9f62b",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "N (orbits/day)",
        "label": "Mean movement (orbits/day)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 640,
        "y": 240,
        "wires": []
    },
    {
        "id": "83174910077b059e",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "name": "MMotion Computation",
        "func": "var sma = msg.payload.SMA // Semi-major-axis\nvar t; // Periode\nvar secondsInADay = 86164.0905 // Seconds in a sideral day \nt = (sma*sma*sma*4*Math.PI*Math.PI/398600)**(1/2)\nvar N= secondsInADay/t // Mean motion Rev/day\nmsg.payload = N\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 200,
        "wires": [
            [
                "6bdf2e2484a0da64",
                "47cb2f9785ebd863"
            ]
        ]
    },
    {
        "id": "6bdf2e2484a0da64",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 200,
        "wires": []
    },
    {
        "id": "8cc23f520ddf1bcb",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "name": "",
        "label": "Mean movement Form",
        "group": "831fc0fb10210de5",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "N (orbit/day)",
                "value": "mean",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "mean": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 180,
        "y": 320,
        "wires": [
            [
                "868d8d56042016ef"
            ]
        ]
    },
    {
        "id": "e553d56e1c2f4824",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "group": "831fc0fb10210de5",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "SMA (km)",
        "label": "Semi major axis (km)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 620,
        "y": 360,
        "wires": []
    },
    {
        "id": "6830a5c9e7fcfcff",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "744e8e51f18b2f2a",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "name": "",
        "label": "Semi major axis Form",
        "group": "831fc0fb10210de5",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Semi major axis (km)",
                "value": "SMA",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "SMA": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 180,
        "y": 400,
        "wires": [
            [
                "1c9766a5428969ad"
            ]
        ]
    },
    {
        "id": "da8610c96e96ee64",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "group": "831fc0fb10210de5",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "N (orbits/day)",
        "label": "Mean movement (orbits/day)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 640,
        "y": 440,
        "wires": []
    },
    {
        "id": "a0a5b0f5b87c588f",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 400,
        "wires": []
    },
    {
        "id": "466bbc6fbc14edb5",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "name": "",
        "label": "Mean movement Form",
        "group": "1d33537b5ace1e8e",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "N (orbit/day)",
                "value": "mean",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "mean": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 180,
        "y": 720,
        "wires": [
            [
                "8d2ed2bbdcaf4084"
            ]
        ]
    },
    {
        "id": "96f133ced1f48432",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "group": "1d33537b5ace1e8e",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "SMA (km)",
        "label": "Semi major axis (km)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 620,
        "y": 760,
        "wires": []
    },
    {
        "id": "3261e2adbf75e542",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 720,
        "wires": []
    },
    {
        "id": "963cb2a06bd831f9",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "name": "",
        "label": "Semi major axis Form",
        "group": "1d33537b5ace1e8e",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Semi major axis (km)",
                "value": "SMA",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "SMA": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 180,
        "y": 800,
        "wires": [
            [
                "5d78468f5708a3a7"
            ]
        ]
    },
    {
        "id": "f31bd0fc8ff9cb9b",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "group": "1d33537b5ace1e8e",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "N (orbits/day)",
        "label": "Mean movement (orbits/day)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 640,
        "y": 840,
        "wires": []
    },
    {
        "id": "926e8ab171ef1799",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 800,
        "wires": []
    },
    {
        "id": "1c9766a5428969ad",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "name": "MMotion Computation",
        "func": "var sma = msg.payload.SMA // Semi-major-axis\nvar t; // Periode\nvar secondsInADay = 86164.0905 // Seconds in a sideral day \nt = (sma*sma*sma*4*Math.PI*Math.PI/398600)**(1/2)\nvar N= secondsInADay/t // Mean motion Rev/day\nmsg.payload = N\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 400,
        "wires": [
            [
                "a0a5b0f5b87c588f",
                "da8610c96e96ee64"
            ]
        ]
    },
    {
        "id": "5d78468f5708a3a7",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "name": "MMotion Computation",
        "func": "var sma = msg.payload.SMA // Semi-major-axis\nvar t; // Periode\nvar secondsInADay = 86164.0905 // Seconds in a sideral day \nt = (sma*sma*sma*4*Math.PI*Math.PI/398600)**(1/2)\nvar N= secondsInADay/t // Mean motion Rev/day\nmsg.payload = N\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 800,
        "wires": [
            [
                "926e8ab171ef1799",
                "f31bd0fc8ff9cb9b"
            ]
        ]
    },
    {
        "id": "ab66bbb721a17c46",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "name": "",
        "label": "Mean movement Form",
        "group": "c3df4221bc39e72d",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "N (orbit/day)",
                "value": "mean",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "mean": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 180,
        "y": 520,
        "wires": [
            [
                "e1aef5bdca676aae"
            ]
        ]
    },
    {
        "id": "91701124e6aeddba",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "group": "c3df4221bc39e72d",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "SMA (km)",
        "label": "Semi major axis (km)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 620,
        "y": 560,
        "wires": []
    },
    {
        "id": "15d619667444cffc",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 520,
        "wires": []
    },
    {
        "id": "ded1c2801fd6ed57",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "name": "",
        "label": "Semi major axis Form",
        "group": "c3df4221bc39e72d",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Semi major axis (km)",
                "value": "SMA",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "SMA": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 180,
        "y": 600,
        "wires": [
            [
                "0ac92b32c17d312a"
            ]
        ]
    },
    {
        "id": "e618c621cf58c52e",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "group": "c3df4221bc39e72d",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "N (orbits/day)",
        "label": "Mean movement (orbits/day)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 640,
        "y": 640,
        "wires": []
    },
    {
        "id": "43ec01f8f568bd93",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 600,
        "wires": []
    },
    {
        "id": "0ac92b32c17d312a",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "name": "MMotion Computation",
        "func": "var sma = msg.payload.SMA // Semi-major-axis\nvar t; // Periode\nvar secondsInADay = 86164.0905 // Seconds in a sideral day \nt = (sma*sma*sma*4*Math.PI*Math.PI/398600)**(1/2)\nvar N= secondsInADay/t // Mean motion Rev/day\nmsg.payload = N\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 600,
        "wires": [
            [
                "43ec01f8f568bd93",
                "e618c621cf58c52e"
            ]
        ]
    },
    {
        "id": "868d8d56042016ef",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "name": "SMA Computation",
        "func": " //From the GS\n\nvar mean = msg.payload.mean ;// The mean motion\nvar  secondesPerDay = 86164.0905; // How many seconds in a day\nvar t ;// Periode in seconds\nvar mu= 398600 ;// standard gravitational parameter of Earth \nt = secondesPerDay/mean;\n\nmsg.payload = Math.round((t*t*mu/(4*Math.PI*Math.PI))**(1/3));\nreturn msg;\n// Function was changer on the 240523 to make it more readable ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 320,
        "wires": [
            [
                "6830a5c9e7fcfcff",
                "e553d56e1c2f4824"
            ]
        ]
    },
    {
        "id": "e1aef5bdca676aae",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "name": "SMA Computation",
        "func": " //From the GS\n\nvar mean = msg.payload.mean ;// The mean motion\nvar  secondesPerDay = 86164.0905; // How many seconds in a day\nvar t ;// Periode in seconds\nvar mu= 398600 ;// standard gravitational parameter of Earth \nt = secondesPerDay/mean;\n\nmsg.payload = Math.round((t*t*mu/(4*Math.PI*Math.PI))**(1/3));\nreturn msg;\n// Function was changer on the 240523 to make it more readable ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 520,
        "wires": [
            [
                "15d619667444cffc",
                "91701124e6aeddba"
            ]
        ]
    },
    {
        "id": "8d2ed2bbdcaf4084",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "name": "SMA Computation",
        "func": " //From the GS\n\nvar mean = msg.payload.mean ;// The mean motion\nvar  secondesPerDay = 86164.0905; // How many seconds in a day\nvar t ;// Periode in seconds\nvar mu= 398600 ;// standard gravitational parameter of Earth \nt = secondesPerDay/mean;\n\nmsg.payload = Math.round((t*t*mu/(4*Math.PI*Math.PI))**(1/3));\nreturn msg;\n// Function was changer on the 240523 to make it more readable ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 720,
        "wires": [
            [
                "3261e2adbf75e542",
                "96f133ced1f48432"
            ]
        ]
    },
    {
        "id": "e8731e0364c3ca69",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator ",
        "group": "26db63df37f9f62b",
        "order": 7,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 260,
        "y": 140,
        "wires": [
            [
                "7b36718d431f1f2a"
            ]
        ]
    },
    {
        "id": "7b36718d431f1f2a",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus",
        "func": "\nvar M= msg.payload.M\nvar F= msg.payload.F\nvar DV= msg.payload.DV\n\n\nmsg.payload = Number((M*DV)/F).toFixed(4);\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 140,
        "wires": [
            [
                "3d8cc6eb10b3b7fc"
            ]
        ]
    },
    {
        "id": "3d8cc6eb10b3b7fc",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "26db63df37f9f62b",
        "order": 8,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 770,
        "y": 140,
        "wires": []
    },
    {
        "id": "27c022d958307b30",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator ",
        "group": "831fc0fb10210de5",
        "order": 7,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 280,
        "y": 240,
        "wires": [
            [
                "85cc9de7b34073f2"
            ]
        ]
    },
    {
        "id": "85cc9de7b34073f2",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus",
        "func": "\nvar M= msg.payload.M\nvar F= msg.payload.F\nvar DV= msg.payload.DV\n\n\nmsg.payload = Number((M*DV)/F).toFixed(2);\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 240,
        "wires": [
            [
                "1401d22d1b22b3aa"
            ]
        ]
    },
    {
        "id": "1401d22d1b22b3aa",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "831fc0fb10210de5",
        "order": 8,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 240,
        "wires": []
    },
    {
        "id": "1318d2144c4651fb",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator ",
        "group": "c3df4221bc39e72d",
        "order": 7,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg) ",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 280,
        "y": 360,
        "wires": [
            [
                "333910e38382be47"
            ]
        ]
    },
    {
        "id": "333910e38382be47",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus",
        "func": "\nvar M= msg.payload.M\nvar F= msg.payload.F\nvar DV= msg.payload.DV\n\n\nmsg.payload = Number((M*DV)/F).toFixed(2);\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 360,
        "wires": [
            [
                "4fa7b12d688e1048"
            ]
        ]
    },
    {
        "id": "4fa7b12d688e1048",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "c3df4221bc39e72d",
        "order": 8,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 360,
        "wires": []
    },
    {
        "id": "c1147b2b31bd06d3",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator ",
        "group": "1d33537b5ace1e8e",
        "order": 7,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 280,
        "y": 460,
        "wires": [
            [
                "7183cbbff844e4fd"
            ]
        ]
    },
    {
        "id": "7183cbbff844e4fd",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus",
        "func": "\nvar M= msg.payload.M\nvar F= msg.payload.F\nvar DV= msg.payload.DV\n\n\nmsg.payload = Number((M*DV)/F).toFixed(2);\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 460,
        "wires": [
            [
                "115e9ad03c3ee902"
            ]
        ]
    },
    {
        "id": "115e9ad03c3ee902",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "1d33537b5ace1e8e",
        "order": 8,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "f9a46d54a6fa6a4f",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator Tsiolkovski",
        "group": "26db63df37f9f62b",
        "order": 9,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP(s)",
                "value": "ISP",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": "",
            "ISP": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 1070,
        "y": 140,
        "wires": [
            [
                "f7a41ac553b4c2b1"
            ]
        ]
    },
    {
        "id": "c66236e835eff38e",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "26db63df37f9f62b",
        "order": 10,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1670,
        "y": 140,
        "wires": []
    },
    {
        "id": "80fe7b2acd0242cb",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator Tsiolkovski",
        "group": "831fc0fb10210de5",
        "order": 9,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP(s)",
                "value": "ISP",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": "",
            "ISP": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 1070,
        "y": 240,
        "wires": [
            [
                "75279f69b818b56c"
            ]
        ]
    },
    {
        "id": "f2a4c5d8f3a3c112",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "831fc0fb10210de5",
        "order": 10,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1670,
        "y": 240,
        "wires": []
    },
    {
        "id": "bb5c0342b77e0074",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator Tsiolkovski",
        "group": "c3df4221bc39e72d",
        "order": 9,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP(s)",
                "value": "ISP",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": "",
            "ISP": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 1070,
        "y": 360,
        "wires": [
            [
                "7136d5e5ae06e451"
            ]
        ]
    },
    {
        "id": "65c12f3827cd3c5d",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "c3df4221bc39e72d",
        "order": 10,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1670,
        "y": 360,
        "wires": []
    },
    {
        "id": "4b6a1fa26c929298",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator Tsiolkovski",
        "group": "1d33537b5ace1e8e",
        "order": 9,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP(s)",
                "value": "ISP",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": "",
            "ISP": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 1110,
        "y": 460,
        "wires": [
            [
                "1c8d9108d3b9c57c"
            ]
        ]
    },
    {
        "id": "1c8d9108d3b9c57c",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus Tsiolkovski",
        "func": "\nvar M= msg.payload.M ;\nvar F= msg.payload.F ;\nvar DV= msg.payload.DV ;\nvar g= 9.81 ;\nvar ISP =msg.payload.ISP ;\nmsg.payload = ((-g*ISP*M)/F) * (Math.exp(-(DV/(g*ISP))) - 1);\n\n\n//msg.payload = (DV/F) * M * (1-Math.exp( -( DV/(g*ISP) ) ));\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 460,
        "wires": [
            [
                "306c2c4c2069edca"
            ]
        ]
    },
    {
        "id": "306c2c4c2069edca",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "1d33537b5ace1e8e",
        "order": 10,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1690,
        "y": 460,
        "wires": []
    },
    {
        "id": "7136d5e5ae06e451",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus Tsiolkovski",
        "func": "\nvar M= msg.payload.M ;\nvar F= msg.payload.F ;\nvar DV= msg.payload.DV ;\nvar g= 9.81 ;\nvar ISP =msg.payload.ISP ;\nmsg.payload = ((-g*ISP*M)/F) * (Math.exp(-(DV/(g*ISP))) - 1);\n\n\n//msg.payload = (DV/F) * M * (1-Math.exp( -( DV/(g*ISP) ) ));\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 360,
        "wires": [
            [
                "65c12f3827cd3c5d"
            ]
        ]
    },
    {
        "id": "75279f69b818b56c",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus Tsiolkovski",
        "func": "\nvar M= msg.payload.M ;\nvar F= msg.payload.F ;\nvar DV= msg.payload.DV ;\nvar g= 9.81 ;\nvar ISP =msg.payload.ISP ;\nmsg.payload = ((-g*ISP*M)/F) * (Math.exp(-(DV/(g*ISP))) - 1);\n\n\n//msg.payload = (DV/F) * M * (1-Math.exp( -( DV/(g*ISP) ) ));\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 240,
        "wires": [
            [
                "f2a4c5d8f3a3c112"
            ]
        ]
    },
    {
        "id": "f7a41ac553b4c2b1",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus Tsiolkovski",
        "func": "\nvar M= msg.payload.M ;\nvar F= msg.payload.F ;\nvar DV= msg.payload.DV ;\nvar g= 9.81 ;\nvar ISP =msg.payload.ISP ;\nmsg.payload = ((-g*ISP*M)/F) * (Math.exp(-(DV/(g*ISP))) - 1);\n\n\n//msg.payload = (DV/F) * M * (1-Math.exp( -( DV/(g*ISP) ) ));\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 140,
        "wires": [
            [
                "c66236e835eff38e"
            ]
        ]
    },
    {
        "id": "34550cdb808c3798",
        "type": "ui_iframe",
        "z": "50584aeb17eaebde",
        "group": "ce913522.c3fc68",
        "name": "iframe for Home",
        "order": 3,
        "width": "30",
        "height": "16",
        "url": "https://geoxc-apps.bd.esri.com/space/satellite-explorer/#",
        "origin": "*",
        "scale": 100,
        "x": 700,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "09d7a983b9b9ba06",
        "type": "change",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "errorMessage",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 220,
        "wires": [
            [
                "4e5dd8e0ab94d018"
            ]
        ]
    },
    {
        "id": "4e5dd8e0ab94d018",
        "type": "ui_audio",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "",
        "group": "c02dcce485dfb187",
        "voice": "Google UK English Female",
        "always": true,
        "x": 560,
        "y": 220,
        "wires": []
    },
    {
        "id": "b48acc271cc4016c",
        "type": "ui_audio",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "",
        "group": "cbb369e33298cfeb",
        "voice": "Google UK English Female",
        "always": true,
        "x": 560,
        "y": 160,
        "wires": []
    },
    {
        "id": "1861660879507ceb",
        "type": "change",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "errorMessage",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 160,
        "wires": [
            [
                "b48acc271cc4016c",
                "f2cbc9be9e04a3e9"
            ]
        ]
    },
    {
        "id": "8077005c0f87eec7",
        "type": "link in",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "Audio BLUE",
        "links": [
            "2b24ea015282a48a",
            "40a6d644acf51561",
            "2a0e265254cb0c56",
            "c4b9a819359c4be0",
            "63a00cbc6fc9462f",
            "4393c1b970e3a29b",
            "0b7e677ffd81b460"
        ],
        "x": 215,
        "y": 160,
        "wires": [
            [
                "1861660879507ceb"
            ]
        ]
    },
    {
        "id": "fcb6777d67efa239",
        "type": "link in",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "Audio RED",
        "links": [
            "0efea168379eeb50",
            "46b03384f7d40a32",
            "896058904e74f2c9",
            "eade1819e9df8266"
        ],
        "x": 215,
        "y": 220,
        "wires": [
            [
                "09d7a983b9b9ba06"
            ]
        ]
    },
    {
        "id": "c67ec5067dc22890",
        "type": "link in",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "Audio Celestrak",
        "links": [
            "0efea168379eeb50",
            "896058904e74f2c9",
            "71b3dc3df3486875",
            "f22d599e751d9314",
            "ffb4c4b51344ccf8",
            "7d1bb2bee6d29159",
            "e4a3209a7bc18aab",
            "bd44410470f18aea"
        ],
        "x": 445,
        "y": 280,
        "wires": [
            [
                "1c5f8b40f6f0c84d",
                "f2cbc9be9e04a3e9"
            ]
        ]
    },
    {
        "id": "1c5f8b40f6f0c84d",
        "type": "ui_audio",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "",
        "group": "b10e0a54.7b0198",
        "voice": "Google UK English Female",
        "always": true,
        "x": 560,
        "y": 280,
        "wires": []
    },
    {
        "id": "d80cb154.b2fe",
        "type": "http in",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "name": "Serveur HTTP",
        "url": "/audio",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 290,
        "y": 600,
        "wires": [
            [
                "a43cf0c3ca8f0fd8",
                "f680cce196c2f842"
            ]
        ]
    },
    {
        "id": "a43cf0c3ca8f0fd8",
        "type": "file in",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "name": "",
        "filename": "/app/maneuver-manager/CCG.mp3",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": true,
        "x": 580,
        "y": 600,
        "wires": [
            [
                "f680cce196c2f842",
                "f5218ce3ebeb34dc"
            ]
        ]
    },
    {
        "id": "f680cce196c2f842",
        "type": "debug",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 540,
        "wires": []
    },
    {
        "id": "f5218ce3ebeb34dc",
        "type": "http response",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "audio/mpeg"
        },
        "x": 960,
        "y": 600,
        "wires": []
    },
    {
        "id": "2953ffcc68f6be38",
        "type": "ui_template",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "group": "b10e0a54.7b0198",
        "name": "Player Template",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "\n<audio id=\"audioPlayer\">\n  <source src=\"/audio\" type=\"audio/mpeg\">\n\n</audio>\n\n<script>\n  var audio = document.getElementById(\"audioPlayer\");\n\n  \n  \n  // Play the audio\n  function playAudio() {\n    audio.play();\n  }\n\n  // Pause the audio\n  function pauseAudio() {\n    audio.pause();\n  }\n\n  // Stop the audio and reset the playback time\n  function stopAudio() {\n    audio.pause();\n    audio.currentTime = 0;\n  }\n\n  // Set the volume based on the provided value\n  function setVolume(volume) {\n    if (!isNaN(volume) && volume >= 0 && volume <= 100) {\n      var normalizedVolume = volume / 100;\n      audio.volume = normalizedVolume;\n    }\n  }\n  scope.$watch('msg.payload', function(volume) {setVolume(volume);});\n  // Initialize the volume on load\n  \n\n  // Play the audio on load\n  document.addEventListener(\"DOMContentLoaded\", function(event) {\n    audio.play();\n  });\n  playAudio();\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 640,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "371f634149e6590c",
        "type": "ui_numeric",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "name": "",
        "label": "volume of music",
        "tooltip": "",
        "group": "7e85bf4a6d733f1e",
        "order": 10,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "2953ffcc68f6be38",
                "758e3d3b8fb58f33"
            ]
        ]
    },
    {
        "id": "11d1c90a96340c32",
        "type": "ui_template",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "group": "7e85bf4a6d733f1e",
        "name": "Button Template",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<button onclick=\"playAudio()\">Play</button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 640,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "758e3d3b8fb58f33",
        "type": "ui_template",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "group": "7e85bf4a6d733f1e",
        "name": "Volume Template",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<script>\nscope.$watch('msg.payload', function(volume) {setVolume(volume);});\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "f2cbc9be9e04a3e9",
        "type": "debug",
        "z": "62804953b962105f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 180,
        "wires": []
    }
]