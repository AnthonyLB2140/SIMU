jsatorb@jsatorb1-xubuntu~/JSatOrb/repos-cs/git/jsatorb-docker(dev)$sudo groupadd docker
groupadd: group 'docker' already exists
jsatorb@jsatorb1-xubuntu~/JSatOrb/repos-cs/git/jsatorb-docker(dev)$sudo usermod -aG docker $USER
jsatorb@jsatorb1-xubuntu~/JSatOrb/repos-cs/git/jsatorb-docker(dev)$newgrp docker
Agent pid 20325
Identity added: /home/jsatorb/tuleap-git-key-jsatorb (/home/jsatorb/tuleap-git-key-jsatorb)
jsatorb@jsatorb1-xubuntu~/JSatOrb/repos-cs/git/jsatorb-docker(dev)$docker info
Client:
 Debug Mode: false

Server:
 Containers: 0
  Running: 0
  Paused: 0
  Stopped: 0
 Images: 0
 Server Version: 19.03.11
 Storage Driver: overlay2
  Backing Filesystem: extfs
  Supports d_type: true
  Native Overlay Diff: true
 Logging Driver: json-file
 Cgroup Driver: cgroupfs
 Plugins:
  Volume: local
  Network: bridge host ipvlan macvlan null overlay
  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog
 Swarm: inactive
 Runtimes: runc
 Default Runtime: runc
 Init Binary: docker-init
 containerd version: 7ad184331fa3e55e52b890ea95e65ba581ae3429
 runc version: dc9208a3303feef5b3839f4323d9beb36df0a9dd
 init version: fec3683
 Security Options:
  apparmor
  seccomp
   Profile: default
 Kernel Version: 4.15.0-106-generic
 Operating System: Ubuntu 18.04.3 LTS
 OSType: linux
 Architecture: x86_64
 CPUs: 4
 Total Memory: 15.66GiB
 Name: jsatorb1-xubuntu
 ID: TCU6:OSG4:DE56:KN54:E47S:NHLD:JMSH:TDPI:HYAS:CJ5C:SLR5:Q76P
 Docker Root Dir: /var/lib/docker
 Debug Mode: false
 Registry: https://index.docker.io/v1/
 Labels:
 Experimental: false
 Insecure Registries:
  127.0.0.0/8
 Live Restore Enabled: false

WARNING: No swap limit support
jsatorb@jsatorb1-xubuntu~/JSatOrb/repos-cs/git/jsatorb-docker(dev)$sudo mkdir -p /etc/systemd/system/docker.service.d
jsatorb@jsatorb1-xubuntu~/JSatOrb/repos-cs/git/jsatorb-docker(dev)$sudo vi /etc/systemd/system/docker.service.d/http-proxy.conf
jsatorb@jsatorb1-xubuntu~/JSatOrb/repos-cs/git/jsatorb-docker(dev)$sudo vi /etc/systemd/system/docker.service.d/https-proxy.conf
jsatorb@jsatorb1-xubuntu~/JSatOrb/repos-cs/git/jsatorb-docker(dev)$sudo systemctl daemon-reload
jsatorb@jsatorb1-xubuntu~/JSatOrb/repos-cs/git/jsatorb-docker(dev)$sudo systemctl restart docker
jsatorb@jsatorb1-xubuntu~/JSatOrb/repos-cs/git/jsatorb-docker(dev)$systemctl show --property=Environment docker
Environment=HTTP_PROXY=http://proxy2.si.c-s.fr:3128/ NO_PROXY=localhost,127.0.0.1,.si.c-s.fr,172.16.0.0/12,10.0.0.0/8,192.168.0.0/16 HTTPS_PROXY=http://proxy2.si.c-s.fr:3128/
jsatorb@jsatorb1-xubuntu~/JSatOrb/repos-cs/git/jsatorb-docker(dev)$docker run hello-world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
0e03bdcc26d7: Pull complete 
Digest: sha256:d58e752213a51785838f9eed2b7a498ffa1cb3aa7f946dda11af39286c3db9a9
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/

jsatorb@jsatorb1-xubuntu~/JSatOrb/repos-cs/git/jsatorb-docker(dev)$

